<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1318" onload="init(evt)" viewBox="0 0 1200 1318" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1318" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1301.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1301.00"> </text><svg id="frames" x="10" width="1180" total_samples="1904"><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (1 samples, 0.05%)</title><rect x="0.0000%" y="1029" width="0.0525%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1039.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (1 samples, 0.05%)</title><rect x="0.0000%" y="1013" width="0.0525%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.05%)</title><rect x="0.0000%" y="997" width="0.0525%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.05%)</title><rect x="0.0000%" y="981" width="0.0525%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="991.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.05%)</title><rect x="0.0000%" y="965" width="0.0525%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="975.50"></text></g><g><title>_int_realloc (1 samples, 0.05%)</title><rect x="0.0000%" y="949" width="0.0525%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="959.50"></text></g><g><title>_int_malloc (1 samples, 0.05%)</title><rect x="0.0000%" y="933" width="0.0525%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="943.50"></text></g><g><title>sysmalloc (1 samples, 0.05%)</title><rect x="0.0000%" y="917" width="0.0525%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="927.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.05%)</title><rect x="0.0000%" y="901" width="0.0525%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.0000%" y="885" width="0.0525%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.0000%" y="869" width="0.0525%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.0000%" y="853" width="0.0525%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.0000%" y="837" width="0.0525%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.0000%" y="821" width="0.0525%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.0000%" y="805" width="0.0525%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="1"/><text x="0.2500%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.0000%" y="789" width="0.0525%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="0.2101%" y="997" width="0.0525%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="1"/><text x="0.4601%" y="1007.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="0.3151%" y="917" width="0.0525%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="1"/><text x="0.5651%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.3151%" y="901" width="0.0525%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="1"/><text x="0.5651%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.3151%" y="885" width="0.0525%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="1"/><text x="0.5651%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.3151%" y="869" width="0.0525%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="1"/><text x="0.5651%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.3151%" y="853" width="0.0525%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="1"/><text x="0.5651%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.3151%" y="837" width="0.0525%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="1"/><text x="0.5651%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.3151%" y="821" width="0.0525%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="1"/><text x="0.5651%" y="831.50"></text></g><g><title>[unknown] (11 samples, 0.58%)</title><rect x="0.5252%" y="885" width="0.5777%" height="15" fill="rgb(241,131,45)" fg:x="10" fg:w="11"/><text x="0.7752%" y="895.50"></text></g><g><title>[unknown] (11 samples, 0.58%)</title><rect x="0.5252%" y="869" width="0.5777%" height="15" fill="rgb(249,31,29)" fg:x="10" fg:w="11"/><text x="0.7752%" y="879.50"></text></g><g><title>[unknown] (11 samples, 0.58%)</title><rect x="0.5252%" y="853" width="0.5777%" height="15" fill="rgb(225,111,53)" fg:x="10" fg:w="11"/><text x="0.7752%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="0.8403%" y="837" width="0.2626%" height="15" fill="rgb(238,160,17)" fg:x="16" fg:w="5"/><text x="1.0903%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="0.8403%" y="821" width="0.2626%" height="15" fill="rgb(214,148,48)" fg:x="16" fg:w="5"/><text x="1.0903%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="0.8403%" y="805" width="0.2626%" height="15" fill="rgb(232,36,49)" fg:x="16" fg:w="5"/><text x="1.0903%" y="815.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="0.8929%" y="789" width="0.2101%" height="15" fill="rgb(209,103,24)" fg:x="17" fg:w="4"/><text x="1.1429%" y="799.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="0.8929%" y="773" width="0.2101%" height="15" fill="rgb(229,88,8)" fg:x="17" fg:w="4"/><text x="1.1429%" y="783.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="0.8929%" y="757" width="0.2101%" height="15" fill="rgb(213,181,19)" fg:x="17" fg:w="4"/><text x="1.1429%" y="767.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="0.8929%" y="741" width="0.2101%" height="15" fill="rgb(254,191,54)" fg:x="17" fg:w="4"/><text x="1.1429%" y="751.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="0.8929%" y="725" width="0.2101%" height="15" fill="rgb(241,83,37)" fg:x="17" fg:w="4"/><text x="1.1429%" y="735.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (30 samples, 1.58%)</title><rect x="0.1050%" y="1013" width="1.5756%" height="15" fill="rgb(233,36,39)" fg:x="2" fg:w="30"/><text x="0.3550%" y="1023.50"></text></g><g><title>__rdl_alloc (27 samples, 1.42%)</title><rect x="0.2626%" y="997" width="1.4181%" height="15" fill="rgb(226,3,54)" fg:x="5" fg:w="27"/><text x="0.5126%" y="1007.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (27 samples, 1.42%)</title><rect x="0.2626%" y="981" width="1.4181%" height="15" fill="rgb(245,192,40)" fg:x="5" fg:w="27"/><text x="0.5126%" y="991.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (27 samples, 1.42%)</title><rect x="0.2626%" y="965" width="1.4181%" height="15" fill="rgb(238,167,29)" fg:x="5" fg:w="27"/><text x="0.5126%" y="975.50"></text></g><g><title>__posix_memalign (27 samples, 1.42%)</title><rect x="0.2626%" y="949" width="1.4181%" height="15" fill="rgb(232,182,51)" fg:x="5" fg:w="27"/><text x="0.5126%" y="959.50"></text></g><g><title>_int_memalign (26 samples, 1.37%)</title><rect x="0.3151%" y="933" width="1.3655%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="26"/><text x="0.5651%" y="943.50"></text></g><g><title>_int_malloc (25 samples, 1.31%)</title><rect x="0.3676%" y="917" width="1.3130%" height="15" fill="rgb(208,69,12)" fg:x="7" fg:w="25"/><text x="0.6176%" y="927.50"></text></g><g><title>sysmalloc (25 samples, 1.31%)</title><rect x="0.3676%" y="901" width="1.3130%" height="15" fill="rgb(235,93,37)" fg:x="7" fg:w="25"/><text x="0.6176%" y="911.50"></text></g><g><title>__GI___mprotect (11 samples, 0.58%)</title><rect x="1.1029%" y="885" width="0.5777%" height="15" fill="rgb(213,116,39)" fg:x="21" fg:w="11"/><text x="1.3529%" y="895.50"></text></g><g><title>[unknown] (9 samples, 0.47%)</title><rect x="1.2080%" y="869" width="0.4727%" height="15" fill="rgb(222,207,29)" fg:x="23" fg:w="9"/><text x="1.4580%" y="879.50"></text></g><g><title>[unknown] (9 samples, 0.47%)</title><rect x="1.2080%" y="853" width="0.4727%" height="15" fill="rgb(206,96,30)" fg:x="23" fg:w="9"/><text x="1.4580%" y="863.50"></text></g><g><title>[unknown] (9 samples, 0.47%)</title><rect x="1.2080%" y="837" width="0.4727%" height="15" fill="rgb(218,138,4)" fg:x="23" fg:w="9"/><text x="1.4580%" y="847.50"></text></g><g><title>[unknown] (8 samples, 0.42%)</title><rect x="1.2605%" y="821" width="0.4202%" height="15" fill="rgb(250,191,14)" fg:x="24" fg:w="8"/><text x="1.5105%" y="831.50"></text></g><g><title>[unknown] (8 samples, 0.42%)</title><rect x="1.2605%" y="805" width="0.4202%" height="15" fill="rgb(239,60,40)" fg:x="24" fg:w="8"/><text x="1.5105%" y="815.50"></text></g><g><title>[unknown] (8 samples, 0.42%)</title><rect x="1.2605%" y="789" width="0.4202%" height="15" fill="rgb(206,27,48)" fg:x="24" fg:w="8"/><text x="1.5105%" y="799.50"></text></g><g><title>[unknown] (8 samples, 0.42%)</title><rect x="1.2605%" y="773" width="0.4202%" height="15" fill="rgb(225,35,8)" fg:x="24" fg:w="8"/><text x="1.5105%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="1.4181%" y="757" width="0.2626%" height="15" fill="rgb(250,213,24)" fg:x="27" fg:w="5"/><text x="1.6681%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="1.5231%" y="741" width="0.1576%" height="15" fill="rgb(247,123,22)" fg:x="29" fg:w="3"/><text x="1.7731%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="1.5231%" y="725" width="0.1576%" height="15" fill="rgb(231,138,38)" fg:x="29" fg:w="3"/><text x="1.7731%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="1.5756%" y="709" width="0.1050%" height="15" fill="rgb(231,145,46)" fg:x="30" fg:w="2"/><text x="1.8256%" y="719.50"></text></g><g><title>yadb::storage::Tree::get (33 samples, 1.73%)</title><rect x="0.0000%" y="1077" width="1.7332%" height="15" fill="rgb(251,118,11)" fg:x="0" fg:w="33"/><text x="0.2500%" y="1087.50"></text></g><g><title>tokio::task::spawn::spawn (33 samples, 1.73%)</title><rect x="0.0000%" y="1061" width="1.7332%" height="15" fill="rgb(217,147,25)" fg:x="0" fg:w="33"/><text x="0.2500%" y="1071.50"></text></g><g><title>tokio::runtime::context::current::with_current (33 samples, 1.73%)</title><rect x="0.0000%" y="1045" width="1.7332%" height="15" fill="rgb(247,81,37)" fg:x="0" fg:w="33"/><text x="0.2500%" y="1055.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (32 samples, 1.68%)</title><rect x="0.0525%" y="1029" width="1.6807%" height="15" fill="rgb(209,12,38)" fg:x="1" fg:w="32"/><text x="0.3025%" y="1039.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (1 samples, 0.05%)</title><rect x="1.6807%" y="1013" width="0.0525%" height="15" fill="rgb(227,1,9)" fg:x="32" fg:w="1"/><text x="1.9307%" y="1023.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::header (1 samples, 0.05%)</title><rect x="1.6807%" y="997" width="0.0525%" height="15" fill="rgb(248,47,43)" fg:x="32" fg:w="1"/><text x="1.9307%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (35 samples, 1.84%)</title><rect x="0.0000%" y="1125" width="1.8382%" height="15" fill="rgb(221,10,30)" fg:x="0" fg:w="35"/><text x="0.2500%" y="1135.50">t..</text></g><g><title>test_storage::split_bench_big_value::{{closure}} (35 samples, 1.84%)</title><rect x="0.0000%" y="1109" width="1.8382%" height="15" fill="rgb(210,229,1)" fg:x="0" fg:w="35"/><text x="0.2500%" y="1119.50">t..</text></g><g><title>test_storage::generate_benchmark (35 samples, 1.84%)</title><rect x="0.0000%" y="1093" width="1.8382%" height="15" fill="rgb(222,148,37)" fg:x="0" fg:w="35"/><text x="0.2500%" y="1103.50">t..</text></g><g><title>yadb::storage::Tree::put (2 samples, 0.11%)</title><rect x="1.7332%" y="1077" width="0.1050%" height="15" fill="rgb(234,67,33)" fg:x="33" fg:w="2"/><text x="1.9832%" y="1087.50"></text></g><g><title>tokio::task::spawn::spawn (2 samples, 0.11%)</title><rect x="1.7332%" y="1061" width="0.1050%" height="15" fill="rgb(247,98,35)" fg:x="33" fg:w="2"/><text x="1.9832%" y="1071.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.11%)</title><rect x="1.7332%" y="1045" width="0.1050%" height="15" fill="rgb(247,138,52)" fg:x="33" fg:w="2"/><text x="1.9832%" y="1055.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all (1 samples, 0.05%)</title><rect x="1.8382%" y="1045" width="0.0525%" height="15" fill="rgb(213,79,30)" fg:x="35" fg:w="1"/><text x="2.0882%" y="1055.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all_modern (1 samples, 0.05%)</title><rect x="1.8382%" y="1029" width="0.0525%" height="15" fill="rgb(246,177,23)" fg:x="35" fg:w="1"/><text x="2.0882%" y="1039.50"></text></g><g><title>std::sys::unix::fs::lstat (1 samples, 0.05%)</title><rect x="1.8382%" y="1013" width="0.0525%" height="15" fill="rgb(230,62,27)" fg:x="35" fg:w="1"/><text x="2.0882%" y="1023.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.05%)</title><rect x="1.8382%" y="997" width="0.0525%" height="15" fill="rgb(216,154,8)" fg:x="35" fg:w="1"/><text x="2.0882%" y="1007.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.05%)</title><rect x="1.8382%" y="981" width="0.0525%" height="15" fill="rgb(244,35,45)" fg:x="35" fg:w="1"/><text x="2.0882%" y="991.50"></text></g><g><title>std::sys::unix::fs::lstat::{{closure}} (1 samples, 0.05%)</title><rect x="1.8382%" y="965" width="0.0525%" height="15" fill="rgb(251,115,12)" fg:x="35" fg:w="1"/><text x="2.0882%" y="975.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.05%)</title><rect x="1.8382%" y="949" width="0.0525%" height="15" fill="rgb(240,54,50)" fg:x="35" fg:w="1"/><text x="2.0882%" y="959.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.05%)</title><rect x="1.8382%" y="933" width="0.0525%" height="15" fill="rgb(233,84,52)" fg:x="35" fg:w="1"/><text x="2.0882%" y="943.50"></text></g><g><title>statx (1 samples, 0.05%)</title><rect x="1.8382%" y="917" width="0.0525%" height="15" fill="rgb(207,117,47)" fg:x="35" fg:w="1"/><text x="2.0882%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="1.8382%" y="901" width="0.0525%" height="15" fill="rgb(249,43,39)" fg:x="35" fg:w="1"/><text x="2.0882%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="1.8382%" y="885" width="0.0525%" height="15" fill="rgb(209,38,44)" fg:x="35" fg:w="1"/><text x="2.0882%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="1.8382%" y="869" width="0.0525%" height="15" fill="rgb(236,212,23)" fg:x="35" fg:w="1"/><text x="2.0882%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="1.8382%" y="853" width="0.0525%" height="15" fill="rgb(242,79,21)" fg:x="35" fg:w="1"/><text x="2.0882%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="1.8382%" y="837" width="0.0525%" height="15" fill="rgb(211,96,35)" fg:x="35" fg:w="1"/><text x="2.0882%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="1.8382%" y="821" width="0.0525%" height="15" fill="rgb(253,215,40)" fg:x="35" fg:w="1"/><text x="2.0882%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="1.8382%" y="805" width="0.0525%" height="15" fill="rgb(211,81,21)" fg:x="35" fg:w="1"/><text x="2.0882%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="1.8382%" y="789" width="0.0525%" height="15" fill="rgb(208,190,38)" fg:x="35" fg:w="1"/><text x="2.0882%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="1.8382%" y="773" width="0.0525%" height="15" fill="rgb(235,213,38)" fg:x="35" fg:w="1"/><text x="2.0882%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="1.8382%" y="757" width="0.0525%" height="15" fill="rgb(237,122,38)" fg:x="35" fg:w="1"/><text x="2.0882%" y="767.50"></text></g><g><title>yadb::storage::table::MergedTableIterators::new (1 samples, 0.05%)</title><rect x="1.8908%" y="1045" width="0.0525%" height="15" fill="rgb(244,218,35)" fg:x="36" fg:w="1"/><text x="2.1408%" y="1055.50"></text></g><g><title>&lt;yadb::storage::table::Table as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="1.8908%" y="1029" width="0.0525%" height="15" fill="rgb(240,68,47)" fg:x="36" fg:w="1"/><text x="2.1408%" y="1039.50"></text></g><g><title>yadb::storage::table::DataBlock::deserialize (1 samples, 0.05%)</title><rect x="1.8908%" y="1013" width="0.0525%" height="15" fill="rgb(210,16,53)" fg:x="36" fg:w="1"/><text x="2.1408%" y="1023.50"></text></g><g><title>__calloc (1 samples, 0.05%)</title><rect x="1.8908%" y="997" width="0.0525%" height="15" fill="rgb(235,124,12)" fg:x="36" fg:w="1"/><text x="2.1408%" y="1007.50"></text></g><g><title>_int_malloc (1 samples, 0.05%)</title><rect x="1.8908%" y="981" width="0.0525%" height="15" fill="rgb(224,169,11)" fg:x="36" fg:w="1"/><text x="2.1408%" y="991.50"></text></g><g><title>yadb::storage::table::Table::new (2 samples, 0.11%)</title><rect x="1.9433%" y="1045" width="0.1050%" height="15" fill="rgb(250,166,2)" fg:x="37" fg:w="2"/><text x="2.1933%" y="1055.50"></text></g><g><title>std::fs::OpenOptions::_open (2 samples, 0.11%)</title><rect x="1.9433%" y="1029" width="0.1050%" height="15" fill="rgb(242,216,29)" fg:x="37" fg:w="2"/><text x="2.1933%" y="1039.50"></text></g><g><title>std::sys::unix::fs::File::open (2 samples, 0.11%)</title><rect x="1.9433%" y="1013" width="0.1050%" height="15" fill="rgb(230,116,27)" fg:x="37" fg:w="2"/><text x="2.1933%" y="1023.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (2 samples, 0.11%)</title><rect x="1.9433%" y="997" width="0.1050%" height="15" fill="rgb(228,99,48)" fg:x="37" fg:w="2"/><text x="2.1933%" y="1007.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.11%)</title><rect x="1.9433%" y="981" width="0.1050%" height="15" fill="rgb(253,11,6)" fg:x="37" fg:w="2"/><text x="2.1933%" y="991.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (2 samples, 0.11%)</title><rect x="1.9433%" y="965" width="0.1050%" height="15" fill="rgb(247,143,39)" fg:x="37" fg:w="2"/><text x="2.1933%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::open_c (2 samples, 0.11%)</title><rect x="1.9433%" y="949" width="0.1050%" height="15" fill="rgb(236,97,10)" fg:x="37" fg:w="2"/><text x="2.1933%" y="959.50"></text></g><g><title>std::sys::unix::cvt_r (2 samples, 0.11%)</title><rect x="1.9433%" y="933" width="0.1050%" height="15" fill="rgb(233,208,19)" fg:x="37" fg:w="2"/><text x="2.1933%" y="943.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (2 samples, 0.11%)</title><rect x="1.9433%" y="917" width="0.1050%" height="15" fill="rgb(216,164,2)" fg:x="37" fg:w="2"/><text x="2.1933%" y="927.50"></text></g><g><title>__libc_open64 (2 samples, 0.11%)</title><rect x="1.9433%" y="901" width="0.1050%" height="15" fill="rgb(220,129,5)" fg:x="37" fg:w="2"/><text x="2.1933%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="1.9433%" y="885" width="0.1050%" height="15" fill="rgb(242,17,10)" fg:x="37" fg:w="2"/><text x="2.1933%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="1.9433%" y="869" width="0.1050%" height="15" fill="rgb(242,107,0)" fg:x="37" fg:w="2"/><text x="2.1933%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="1.9433%" y="853" width="0.1050%" height="15" fill="rgb(251,28,31)" fg:x="37" fg:w="2"/><text x="2.1933%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="1.9433%" y="837" width="0.1050%" height="15" fill="rgb(233,223,10)" fg:x="37" fg:w="2"/><text x="2.1933%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="1.9433%" y="821" width="0.1050%" height="15" fill="rgb(215,21,27)" fg:x="37" fg:w="2"/><text x="2.1933%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="1.9433%" y="805" width="0.1050%" height="15" fill="rgb(232,23,21)" fg:x="37" fg:w="2"/><text x="2.1933%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="1.9433%" y="789" width="0.1050%" height="15" fill="rgb(244,5,23)" fg:x="37" fg:w="2"/><text x="2.1933%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="1.9433%" y="773" width="0.1050%" height="15" fill="rgb(226,81,46)" fg:x="37" fg:w="2"/><text x="2.1933%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="1.9433%" y="757" width="0.1050%" height="15" fill="rgb(247,70,30)" fg:x="37" fg:w="2"/><text x="2.1933%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="1.9433%" y="741" width="0.1050%" height="15" fill="rgb(212,68,19)" fg:x="37" fg:w="2"/><text x="2.1933%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="1.9433%" y="725" width="0.1050%" height="15" fill="rgb(240,187,13)" fg:x="37" fg:w="2"/><text x="2.1933%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="1.9958%" y="709" width="0.0525%" height="15" fill="rgb(223,113,26)" fg:x="38" fg:w="1"/><text x="2.2458%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="1.9958%" y="693" width="0.0525%" height="15" fill="rgb(206,192,2)" fg:x="38" fg:w="1"/><text x="2.2458%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="1.9958%" y="677" width="0.0525%" height="15" fill="rgb(241,108,4)" fg:x="38" fg:w="1"/><text x="2.2458%" y="687.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (15 samples, 0.79%)</title><rect x="2.1008%" y="997" width="0.7878%" height="15" fill="rgb(247,173,49)" fg:x="40" fg:w="15"/><text x="2.3508%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::seek (15 samples, 0.79%)</title><rect x="2.1008%" y="981" width="0.7878%" height="15" fill="rgb(224,114,35)" fg:x="40" fg:w="15"/><text x="2.3508%" y="991.50"></text></g><g><title>__lseek64 (15 samples, 0.79%)</title><rect x="2.1008%" y="965" width="0.7878%" height="15" fill="rgb(245,159,27)" fg:x="40" fg:w="15"/><text x="2.3508%" y="975.50"></text></g><g><title>[unknown] (7 samples, 0.37%)</title><rect x="2.5210%" y="949" width="0.3676%" height="15" fill="rgb(245,172,44)" fg:x="48" fg:w="7"/><text x="2.7710%" y="959.50"></text></g><g><title>[unknown] (7 samples, 0.37%)</title><rect x="2.5210%" y="933" width="0.3676%" height="15" fill="rgb(236,23,11)" fg:x="48" fg:w="7"/><text x="2.7710%" y="943.50"></text></g><g><title>[unknown] (7 samples, 0.37%)</title><rect x="2.5210%" y="917" width="0.3676%" height="15" fill="rgb(205,117,38)" fg:x="48" fg:w="7"/><text x="2.7710%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="2.7836%" y="901" width="0.1050%" height="15" fill="rgb(237,72,25)" fg:x="53" fg:w="2"/><text x="3.0336%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="2.7836%" y="885" width="0.1050%" height="15" fill="rgb(244,70,9)" fg:x="53" fg:w="2"/><text x="3.0336%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="2.8361%" y="869" width="0.0525%" height="15" fill="rgb(217,125,39)" fg:x="54" fg:w="1"/><text x="3.0861%" y="879.50"></text></g><g><title>__calloc (13 samples, 0.68%)</title><rect x="2.8887%" y="981" width="0.6828%" height="15" fill="rgb(235,36,10)" fg:x="55" fg:w="13"/><text x="3.1387%" y="991.50"></text></g><g><title>_int_malloc (10 samples, 0.53%)</title><rect x="3.0462%" y="965" width="0.5252%" height="15" fill="rgb(251,123,47)" fg:x="58" fg:w="10"/><text x="3.2962%" y="975.50"></text></g><g><title>malloc_consolidate (1 samples, 0.05%)</title><rect x="3.5189%" y="949" width="0.0525%" height="15" fill="rgb(221,13,13)" fg:x="67" fg:w="1"/><text x="3.7689%" y="959.50"></text></g><g><title>[unknown] (14 samples, 0.74%)</title><rect x="3.9916%" y="885" width="0.7353%" height="15" fill="rgb(238,131,9)" fg:x="76" fg:w="14"/><text x="4.2416%" y="895.50"></text></g><g><title>[unknown] (14 samples, 0.74%)</title><rect x="3.9916%" y="869" width="0.7353%" height="15" fill="rgb(211,50,8)" fg:x="76" fg:w="14"/><text x="4.2416%" y="879.50"></text></g><g><title>[unknown] (14 samples, 0.74%)</title><rect x="3.9916%" y="853" width="0.7353%" height="15" fill="rgb(245,182,24)" fg:x="76" fg:w="14"/><text x="4.2416%" y="863.50"></text></g><g><title>[unknown] (12 samples, 0.63%)</title><rect x="4.0966%" y="837" width="0.6303%" height="15" fill="rgb(242,14,37)" fg:x="78" fg:w="12"/><text x="4.3466%" y="847.50"></text></g><g><title>[unknown] (11 samples, 0.58%)</title><rect x="4.1492%" y="821" width="0.5777%" height="15" fill="rgb(246,228,12)" fg:x="79" fg:w="11"/><text x="4.3992%" y="831.50"></text></g><g><title>[unknown] (10 samples, 0.53%)</title><rect x="4.2017%" y="805" width="0.5252%" height="15" fill="rgb(213,55,15)" fg:x="80" fg:w="10"/><text x="4.4517%" y="815.50"></text></g><g><title>[unknown] (10 samples, 0.53%)</title><rect x="4.2017%" y="789" width="0.5252%" height="15" fill="rgb(209,9,3)" fg:x="80" fg:w="10"/><text x="4.4517%" y="799.50"></text></g><g><title>[unknown] (9 samples, 0.47%)</title><rect x="4.2542%" y="773" width="0.4727%" height="15" fill="rgb(230,59,30)" fg:x="81" fg:w="9"/><text x="4.5042%" y="783.50"></text></g><g><title>[unknown] (9 samples, 0.47%)</title><rect x="4.2542%" y="757" width="0.4727%" height="15" fill="rgb(209,121,21)" fg:x="81" fg:w="9"/><text x="4.5042%" y="767.50"></text></g><g><title>[unknown] (9 samples, 0.47%)</title><rect x="4.2542%" y="741" width="0.4727%" height="15" fill="rgb(220,109,13)" fg:x="81" fg:w="9"/><text x="4.5042%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="4.6218%" y="725" width="0.1050%" height="15" fill="rgb(232,18,1)" fg:x="88" fg:w="2"/><text x="4.8718%" y="735.50"></text></g><g><title>&lt;yadb::storage::table::Table as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 2.68%)</title><rect x="2.1008%" y="1013" width="2.6786%" height="15" fill="rgb(215,41,42)" fg:x="40" fg:w="51"/><text x="2.3508%" y="1023.50">&lt;y..</text></g><g><title>yadb::storage::table::DataBlock::deserialize (36 samples, 1.89%)</title><rect x="2.8887%" y="997" width="1.8908%" height="15" fill="rgb(224,123,36)" fg:x="55" fg:w="36"/><text x="3.1387%" y="1007.50">y..</text></g><g><title>std::io::default_read_exact (23 samples, 1.21%)</title><rect x="3.5714%" y="981" width="1.2080%" height="15" fill="rgb(240,125,3)" fg:x="68" fg:w="23"/><text x="3.8214%" y="991.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (23 samples, 1.21%)</title><rect x="3.5714%" y="965" width="1.2080%" height="15" fill="rgb(205,98,50)" fg:x="68" fg:w="23"/><text x="3.8214%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::read (23 samples, 1.21%)</title><rect x="3.5714%" y="949" width="1.2080%" height="15" fill="rgb(205,185,37)" fg:x="68" fg:w="23"/><text x="3.8214%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (23 samples, 1.21%)</title><rect x="3.5714%" y="933" width="1.2080%" height="15" fill="rgb(238,207,15)" fg:x="68" fg:w="23"/><text x="3.8214%" y="943.50"></text></g><g><title>__libc_read (23 samples, 1.21%)</title><rect x="3.5714%" y="917" width="1.2080%" height="15" fill="rgb(213,199,42)" fg:x="68" fg:w="23"/><text x="3.8214%" y="927.50"></text></g><g><title>__libc_read (23 samples, 1.21%)</title><rect x="3.5714%" y="901" width="1.2080%" height="15" fill="rgb(235,201,11)" fg:x="68" fg:w="23"/><text x="3.8214%" y="911.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="4.7269%" y="885" width="0.0525%" height="15" fill="rgb(207,46,11)" fg:x="90" fg:w="1"/><text x="4.9769%" y="895.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (5 samples, 0.26%)</title><rect x="4.7794%" y="1013" width="0.2626%" height="15" fill="rgb(241,35,35)" fg:x="91" fg:w="5"/><text x="5.0294%" y="1023.50"></text></g><g><title>&lt;yadb::storage::table::MergedTableIterators as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 3.05%)</title><rect x="2.0483%" y="1029" width="3.0462%" height="15" fill="rgb(243,32,47)" fg:x="39" fg:w="58"/><text x="2.2983%" y="1039.50">&lt;ya..</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (1 samples, 0.05%)</title><rect x="5.0420%" y="1013" width="0.0525%" height="15" fill="rgb(247,202,23)" fg:x="96" fg:w="1"/><text x="5.2920%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.63%)</title><rect x="5.0945%" y="1029" width="0.6303%" height="15" fill="rgb(219,102,11)" fg:x="97" fg:w="12"/><text x="5.3445%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.63%)</title><rect x="5.0945%" y="1013" width="0.6303%" height="15" fill="rgb(243,110,44)" fg:x="97" fg:w="12"/><text x="5.3445%" y="1023.50"></text></g><g><title>__GI___libc_realloc (12 samples, 0.63%)</title><rect x="5.0945%" y="997" width="0.6303%" height="15" fill="rgb(222,74,54)" fg:x="97" fg:w="12"/><text x="5.3445%" y="1007.50"></text></g><g><title>_int_realloc (12 samples, 0.63%)</title><rect x="5.0945%" y="981" width="0.6303%" height="15" fill="rgb(216,99,12)" fg:x="97" fg:w="12"/><text x="5.3445%" y="991.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.63%)</title><rect x="5.0945%" y="965" width="0.6303%" height="15" fill="rgb(226,22,26)" fg:x="97" fg:w="12"/><text x="5.3445%" y="975.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="5.4097%" y="949" width="0.3151%" height="15" fill="rgb(217,163,10)" fg:x="103" fg:w="6"/><text x="5.6597%" y="959.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="5.4097%" y="933" width="0.3151%" height="15" fill="rgb(213,25,53)" fg:x="103" fg:w="6"/><text x="5.6597%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="5.4097%" y="917" width="0.3151%" height="15" fill="rgb(252,105,26)" fg:x="103" fg:w="6"/><text x="5.6597%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="5.4622%" y="901" width="0.2626%" height="15" fill="rgb(220,39,43)" fg:x="104" fg:w="5"/><text x="5.7122%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="5.4622%" y="885" width="0.2626%" height="15" fill="rgb(229,68,48)" fg:x="104" fg:w="5"/><text x="5.7122%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="5.4622%" y="869" width="0.2626%" height="15" fill="rgb(252,8,32)" fg:x="104" fg:w="5"/><text x="5.7122%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="5.4622%" y="853" width="0.2626%" height="15" fill="rgb(223,20,43)" fg:x="104" fg:w="5"/><text x="5.7122%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="5.4622%" y="837" width="0.2626%" height="15" fill="rgb(229,81,49)" fg:x="104" fg:w="5"/><text x="5.7122%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="5.4622%" y="821" width="0.2626%" height="15" fill="rgb(236,28,36)" fg:x="104" fg:w="5"/><text x="5.7122%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="5.6197%" y="805" width="0.1050%" height="15" fill="rgb(249,185,26)" fg:x="107" fg:w="2"/><text x="5.8697%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="5.6723%" y="789" width="0.0525%" height="15" fill="rgb(249,174,33)" fg:x="108" fg:w="1"/><text x="5.9223%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (112 samples, 5.88%)</title><rect x="0.0000%" y="1221" width="5.8824%" height="15" fill="rgb(233,201,37)" fg:x="0" fg:w="112"/><text x="0.2500%" y="1231.50">core::o..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (112 samples, 5.88%)</title><rect x="0.0000%" y="1205" width="5.8824%" height="15" fill="rgb(221,78,26)" fg:x="0" fg:w="112"/><text x="0.2500%" y="1215.50">tokio::..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (112 samples, 5.88%)</title><rect x="0.0000%" y="1189" width="5.8824%" height="15" fill="rgb(250,127,30)" fg:x="0" fg:w="112"/><text x="0.2500%" y="1199.50">tokio::..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (112 samples, 5.88%)</title><rect x="0.0000%" y="1173" width="5.8824%" height="15" fill="rgb(230,49,44)" fg:x="0" fg:w="112"/><text x="0.2500%" y="1183.50">tokio::..</text></g><g><title>tokio::runtime::context::set_scheduler (112 samples, 5.88%)</title><rect x="0.0000%" y="1157" width="5.8824%" height="15" fill="rgb(229,67,23)" fg:x="0" fg:w="112"/><text x="0.2500%" y="1167.50">tokio::..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (112 samples, 5.88%)</title><rect x="0.0000%" y="1141" width="5.8824%" height="15" fill="rgb(249,83,47)" fg:x="0" fg:w="112"/><text x="0.2500%" y="1151.50">tokio::..</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (77 samples, 4.04%)</title><rect x="1.8382%" y="1125" width="4.0441%" height="15" fill="rgb(215,43,3)" fg:x="35" fg:w="77"/><text x="2.0882%" y="1135.50">toki..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (77 samples, 4.04%)</title><rect x="1.8382%" y="1109" width="4.0441%" height="15" fill="rgb(238,154,13)" fg:x="35" fg:w="77"/><text x="2.0882%" y="1119.50">toki..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (77 samples, 4.04%)</title><rect x="1.8382%" y="1093" width="4.0441%" height="15" fill="rgb(219,56,2)" fg:x="35" fg:w="77"/><text x="2.0882%" y="1103.50">toki..</text></g><g><title>yadb::storage::Tree::start_write::_{{closure}} (77 samples, 4.04%)</title><rect x="1.8382%" y="1077" width="4.0441%" height="15" fill="rgb(233,0,4)" fg:x="35" fg:w="77"/><text x="2.0882%" y="1087.50">yadb..</text></g><g><title>yadb::storage::Tree::write_skipmap_as_sstable::{{closure}} (77 samples, 4.04%)</title><rect x="1.8382%" y="1061" width="4.0441%" height="15" fill="rgb(235,30,7)" fg:x="35" fg:w="77"/><text x="2.0882%" y="1071.50">yadb..</text></g><g><title>yadb::storage::table::Table::write_table (73 samples, 3.83%)</title><rect x="2.0483%" y="1045" width="3.8340%" height="15" fill="rgb(250,79,13)" fg:x="39" fg:w="73"/><text x="2.2983%" y="1055.50">yadb..</text></g><g><title>bit_vec::BitVec&lt;B&gt;::to_bytes (3 samples, 0.16%)</title><rect x="5.7248%" y="1029" width="0.1576%" height="15" fill="rgb(211,146,34)" fg:x="109" fg:w="3"/><text x="5.9748%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.16%)</title><rect x="5.7248%" y="1013" width="0.1576%" height="15" fill="rgb(228,22,38)" fg:x="109" fg:w="3"/><text x="5.9748%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.16%)</title><rect x="5.7248%" y="997" width="0.1576%" height="15" fill="rgb(235,168,5)" fg:x="109" fg:w="3"/><text x="5.9748%" y="1007.50"></text></g><g><title>yadb::storage::wal::WALEntry::serialize (1 samples, 0.05%)</title><rect x="5.8824%" y="725" width="0.0525%" height="15" fill="rgb(221,155,16)" fg:x="112" fg:w="1"/><text x="6.1324%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.05%)</title><rect x="5.8824%" y="709" width="0.0525%" height="15" fill="rgb(215,215,53)" fg:x="112" fg:w="1"/><text x="6.1324%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.05%)</title><rect x="5.8824%" y="693" width="0.0525%" height="15" fill="rgb(223,4,10)" fg:x="112" fg:w="1"/><text x="6.1324%" y="703.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.05%)</title><rect x="5.8824%" y="677" width="0.0525%" height="15" fill="rgb(234,103,6)" fg:x="112" fg:w="1"/><text x="6.1324%" y="687.50"></text></g><g><title>_int_realloc (1 samples, 0.05%)</title><rect x="5.8824%" y="661" width="0.0525%" height="15" fill="rgb(227,97,0)" fg:x="112" fg:w="1"/><text x="6.1324%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.05%)</title><rect x="5.8824%" y="645" width="0.0525%" height="15" fill="rgb(234,150,53)" fg:x="112" fg:w="1"/><text x="6.1324%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (3 samples, 0.16%)</title><rect x="5.8824%" y="1221" width="0.1576%" height="15" fill="rgb(228,201,54)" fg:x="112" fg:w="3"/><text x="6.1324%" y="1231.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (3 samples, 0.16%)</title><rect x="5.8824%" y="1205" width="0.1576%" height="15" fill="rgb(222,22,37)" fg:x="112" fg:w="3"/><text x="6.1324%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.16%)</title><rect x="5.8824%" y="1189" width="0.1576%" height="15" fill="rgb(237,53,32)" fg:x="112" fg:w="3"/><text x="6.1324%" y="1199.50"></text></g><g><title>std::panicking::try (3 samples, 0.16%)</title><rect x="5.8824%" y="1173" width="0.1576%" height="15" fill="rgb(233,25,53)" fg:x="112" fg:w="3"/><text x="6.1324%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.16%)</title><rect x="5.8824%" y="1157" width="0.1576%" height="15" fill="rgb(210,40,34)" fg:x="112" fg:w="3"/><text x="6.1324%" y="1167.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.16%)</title><rect x="5.8824%" y="1141" width="0.1576%" height="15" fill="rgb(241,220,44)" fg:x="112" fg:w="3"/><text x="6.1324%" y="1151.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (3 samples, 0.16%)</title><rect x="5.8824%" y="1125" width="0.1576%" height="15" fill="rgb(235,28,35)" fg:x="112" fg:w="3"/><text x="6.1324%" y="1135.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.16%)</title><rect x="5.8824%" y="1109" width="0.1576%" height="15" fill="rgb(210,56,17)" fg:x="112" fg:w="3"/><text x="6.1324%" y="1119.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (3 samples, 0.16%)</title><rect x="5.8824%" y="1093" width="0.1576%" height="15" fill="rgb(224,130,29)" fg:x="112" fg:w="3"/><text x="6.1324%" y="1103.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (3 samples, 0.16%)</title><rect x="5.8824%" y="1077" width="0.1576%" height="15" fill="rgb(235,212,8)" fg:x="112" fg:w="3"/><text x="6.1324%" y="1087.50"></text></g><g><title>test::run_test_in_process (3 samples, 0.16%)</title><rect x="5.8824%" y="1061" width="0.1576%" height="15" fill="rgb(223,33,50)" fg:x="112" fg:w="3"/><text x="6.1324%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.16%)</title><rect x="5.8824%" y="1045" width="0.1576%" height="15" fill="rgb(219,149,13)" fg:x="112" fg:w="3"/><text x="6.1324%" y="1055.50"></text></g><g><title>std::panicking::try (3 samples, 0.16%)</title><rect x="5.8824%" y="1029" width="0.1576%" height="15" fill="rgb(250,156,29)" fg:x="112" fg:w="3"/><text x="6.1324%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.16%)</title><rect x="5.8824%" y="1013" width="0.1576%" height="15" fill="rgb(216,193,19)" fg:x="112" fg:w="3"/><text x="6.1324%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.16%)</title><rect x="5.8824%" y="997" width="0.1576%" height="15" fill="rgb(216,135,14)" fg:x="112" fg:w="3"/><text x="6.1324%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.16%)</title><rect x="5.8824%" y="981" width="0.1576%" height="15" fill="rgb(241,47,5)" fg:x="112" fg:w="3"/><text x="6.1324%" y="991.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (3 samples, 0.16%)</title><rect x="5.8824%" y="965" width="0.1576%" height="15" fill="rgb(233,42,35)" fg:x="112" fg:w="3"/><text x="6.1324%" y="975.50"></text></g><g><title>test::run_test::{{closure}} (3 samples, 0.16%)</title><rect x="5.8824%" y="949" width="0.1576%" height="15" fill="rgb(231,13,6)" fg:x="112" fg:w="3"/><text x="6.1324%" y="959.50"></text></g><g><title>test::__rust_begin_short_backtrace (3 samples, 0.16%)</title><rect x="5.8824%" y="933" width="0.1576%" height="15" fill="rgb(207,181,40)" fg:x="112" fg:w="3"/><text x="6.1324%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.16%)</title><rect x="5.8824%" y="917" width="0.1576%" height="15" fill="rgb(254,173,49)" fg:x="112" fg:w="3"/><text x="6.1324%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.16%)</title><rect x="5.8824%" y="901" width="0.1576%" height="15" fill="rgb(221,1,38)" fg:x="112" fg:w="3"/><text x="6.1324%" y="911.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (3 samples, 0.16%)</title><rect x="5.8824%" y="885" width="0.1576%" height="15" fill="rgb(206,124,46)" fg:x="112" fg:w="3"/><text x="6.1324%" y="895.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (3 samples, 0.16%)</title><rect x="5.8824%" y="869" width="0.1576%" height="15" fill="rgb(249,21,11)" fg:x="112" fg:w="3"/><text x="6.1324%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (3 samples, 0.16%)</title><rect x="5.8824%" y="853" width="0.1576%" height="15" fill="rgb(222,201,40)" fg:x="112" fg:w="3"/><text x="6.1324%" y="863.50"></text></g><g><title>tokio::runtime::context::set_scheduler (3 samples, 0.16%)</title><rect x="5.8824%" y="837" width="0.1576%" height="15" fill="rgb(235,61,29)" fg:x="112" fg:w="3"/><text x="6.1324%" y="847.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (3 samples, 0.16%)</title><rect x="5.8824%" y="821" width="0.1576%" height="15" fill="rgb(219,207,3)" fg:x="112" fg:w="3"/><text x="6.1324%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (3 samples, 0.16%)</title><rect x="5.8824%" y="805" width="0.1576%" height="15" fill="rgb(222,56,46)" fg:x="112" fg:w="3"/><text x="6.1324%" y="815.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3 samples, 0.16%)</title><rect x="5.8824%" y="789" width="0.1576%" height="15" fill="rgb(239,76,54)" fg:x="112" fg:w="3"/><text x="6.1324%" y="799.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (3 samples, 0.16%)</title><rect x="5.8824%" y="773" width="0.1576%" height="15" fill="rgb(231,124,27)" fg:x="112" fg:w="3"/><text x="6.1324%" y="783.50"></text></g><g><title>yadb::storage::Tree::start_write::_{{closure}} (3 samples, 0.16%)</title><rect x="5.8824%" y="757" width="0.1576%" height="15" fill="rgb(249,195,6)" fg:x="112" fg:w="3"/><text x="6.1324%" y="767.50"></text></g><g><title>yadb::storage::wal::WALFile::append_to_wal (3 samples, 0.16%)</title><rect x="5.8824%" y="741" width="0.1576%" height="15" fill="rgb(237,174,47)" fg:x="112" fg:w="3"/><text x="6.1324%" y="751.50"></text></g><g><title>yadb::storage::wal::batch_writer::AsyncBufferedWriter::write (2 samples, 0.11%)</title><rect x="5.9349%" y="725" width="0.1050%" height="15" fill="rgb(206,201,31)" fg:x="113" fg:w="2"/><text x="6.1849%" y="735.50"></text></g><g><title>tokio::sync::oneshot::channel (2 samples, 0.11%)</title><rect x="5.9349%" y="709" width="0.1050%" height="15" fill="rgb(231,57,52)" fg:x="113" fg:w="2"/><text x="6.1849%" y="719.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="5.9349%" y="693" width="0.1050%" height="15" fill="rgb(248,177,22)" fg:x="113" fg:w="2"/><text x="6.1849%" y="703.50"></text></g><g><title>_int_malloc (2 samples, 0.11%)</title><rect x="5.9349%" y="677" width="0.1050%" height="15" fill="rgb(215,211,37)" fg:x="113" fg:w="2"/><text x="6.1849%" y="687.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="6.0399%" y="677" width="0.0525%" height="15" fill="rgb(241,128,51)" fg:x="115" fg:w="1"/><text x="6.2899%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="6.0399%" y="661" width="0.0525%" height="15" fill="rgb(227,165,31)" fg:x="115" fg:w="1"/><text x="6.2899%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.05%)</title><rect x="6.0924%" y="677" width="0.0525%" height="15" fill="rgb(228,167,24)" fg:x="116" fg:w="1"/><text x="6.3424%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.05%)</title><rect x="6.0924%" y="661" width="0.0525%" height="15" fill="rgb(228,143,12)" fg:x="116" fg:w="1"/><text x="6.3424%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.05%)</title><rect x="6.1450%" y="661" width="0.0525%" height="15" fill="rgb(249,149,8)" fg:x="117" fg:w="1"/><text x="6.3950%" y="671.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.05%)</title><rect x="6.1450%" y="645" width="0.0525%" height="15" fill="rgb(243,35,44)" fg:x="117" fg:w="1"/><text x="6.3950%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="6.1450%" y="629" width="0.0525%" height="15" fill="rgb(246,89,9)" fg:x="117" fg:w="1"/><text x="6.3950%" y="639.50"></text></g><g><title>malloc_consolidate (1 samples, 0.05%)</title><rect x="6.1450%" y="613" width="0.0525%" height="15" fill="rgb(233,213,13)" fg:x="117" fg:w="1"/><text x="6.3950%" y="623.50"></text></g><g><title>_int_free (3 samples, 0.16%)</title><rect x="6.1975%" y="629" width="0.1576%" height="15" fill="rgb(233,141,41)" fg:x="118" fg:w="3"/><text x="6.4475%" y="639.50"></text></g><g><title>malloc_consolidate (2 samples, 0.11%)</title><rect x="6.2500%" y="613" width="0.1050%" height="15" fill="rgb(239,167,4)" fg:x="119" fg:w="2"/><text x="6.5000%" y="623.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.05%)</title><rect x="6.3025%" y="597" width="0.0525%" height="15" fill="rgb(209,217,16)" fg:x="120" fg:w="1"/><text x="6.5525%" y="607.50"></text></g><g><title>__GI___libc_free (4 samples, 0.21%)</title><rect x="6.6176%" y="613" width="0.2101%" height="15" fill="rgb(219,88,35)" fg:x="126" fg:w="4"/><text x="6.8676%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (16 samples, 0.84%)</title><rect x="6.1450%" y="677" width="0.8403%" height="15" fill="rgb(220,193,23)" fg:x="117" fg:w="16"/><text x="6.3950%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;yadb::storage::async_cache::AsyncCache&lt;yadb::storage::table::DataBlock,yadb::storage::table::Table,u64,core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;,yadb::storage::errors::YAStorageError&gt;&gt; (15 samples, 0.79%)</title><rect x="6.1975%" y="661" width="0.7878%" height="15" fill="rgb(230,90,52)" fg:x="118" fg:w="15"/><text x="6.4475%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (15 samples, 0.79%)</title><rect x="6.1975%" y="645" width="0.7878%" height="15" fill="rgb(252,106,19)" fg:x="118" fg:w="15"/><text x="6.4475%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;schnellru::Entry&lt;alloc::string::String,yadb::storage::table::DataBlock,u32&gt;&gt; (12 samples, 0.63%)</title><rect x="6.3550%" y="629" width="0.6303%" height="15" fill="rgb(206,74,20)" fg:x="121" fg:w="12"/><text x="6.6050%" y="639.50"></text></g><g><title>_int_free (3 samples, 0.16%)</title><rect x="6.8277%" y="613" width="0.1576%" height="15" fill="rgb(230,138,44)" fg:x="130" fg:w="3"/><text x="7.0777%" y="623.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.05%)</title><rect x="6.9328%" y="597" width="0.0525%" height="15" fill="rgb(235,182,43)" fg:x="132" fg:w="1"/><text x="7.1828%" y="607.50"></text></g><g><title>&lt;crossbeam_skiplist::map::Entry&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="6.9853%" y="661" width="0.1050%" height="15" fill="rgb(242,16,51)" fg:x="133" fg:w="2"/><text x="7.2353%" y="671.50"></text></g><g><title>crossbeam_skiplist::map::SkipMap&lt;K,V&gt;::contains_key (21 samples, 1.10%)</title><rect x="7.0903%" y="661" width="1.1029%" height="15" fill="rgb(248,9,4)" fg:x="135" fg:w="21"/><text x="7.3403%" y="671.50"></text></g><g><title>crossbeam_skiplist::base::SkipList&lt;K,V&gt;::search_bound (21 samples, 1.10%)</title><rect x="7.0903%" y="645" width="1.1029%" height="15" fill="rgb(210,31,22)" fg:x="135" fg:w="21"/><text x="7.3403%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (10 samples, 0.53%)</title><rect x="7.6681%" y="629" width="0.5252%" height="15" fill="rgb(239,54,39)" fg:x="146" fg:w="10"/><text x="7.9181%" y="639.50"></text></g><g><title>yadb::storage::memtable::Memtable::insert_or_delete (24 samples, 1.26%)</title><rect x="6.9853%" y="677" width="1.2605%" height="15" fill="rgb(230,99,41)" fg:x="133" fg:w="24"/><text x="7.2353%" y="687.50"></text></g><g><title>crossbeam_skiplist::map::SkipMap&lt;K,V&gt;::insert (1 samples, 0.05%)</title><rect x="8.1933%" y="661" width="0.0525%" height="15" fill="rgb(253,106,12)" fg:x="156" fg:w="1"/><text x="8.4433%" y="671.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.05%)</title><rect x="8.1933%" y="645" width="0.0525%" height="15" fill="rgb(213,46,41)" fg:x="156" fg:w="1"/><text x="8.4433%" y="655.50"></text></g><g><title>yadb::storage::wal::WALEntry::serialize (3 samples, 0.16%)</title><rect x="8.2458%" y="661" width="0.1576%" height="15" fill="rgb(215,133,35)" fg:x="157" fg:w="3"/><text x="8.4958%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.16%)</title><rect x="8.2458%" y="645" width="0.1576%" height="15" fill="rgb(213,28,5)" fg:x="157" fg:w="3"/><text x="8.4958%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.11%)</title><rect x="8.2983%" y="629" width="0.1050%" height="15" fill="rgb(215,77,49)" fg:x="158" fg:w="2"/><text x="8.5483%" y="639.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.11%)</title><rect x="8.2983%" y="613" width="0.1050%" height="15" fill="rgb(248,100,22)" fg:x="158" fg:w="2"/><text x="8.5483%" y="623.50"></text></g><g><title>_int_realloc (1 samples, 0.05%)</title><rect x="8.3508%" y="597" width="0.0525%" height="15" fill="rgb(208,67,9)" fg:x="159" fg:w="1"/><text x="8.6008%" y="607.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (2 samples, 0.11%)</title><rect x="8.4034%" y="645" width="0.1050%" height="15" fill="rgb(219,133,21)" fg:x="160" fg:w="2"/><text x="8.6534%" y="655.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (2 samples, 0.11%)</title><rect x="8.4034%" y="629" width="0.1050%" height="15" fill="rgb(246,46,29)" fg:x="160" fg:w="2"/><text x="8.6534%" y="639.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.21%)</title><rect x="8.5084%" y="629" width="0.2101%" height="15" fill="rgb(246,185,52)" fg:x="162" fg:w="4"/><text x="8.7584%" y="639.50"></text></g><g><title>start_thread (52 samples, 2.73%)</title><rect x="6.0399%" y="1221" width="2.7311%" height="15" fill="rgb(252,136,11)" fg:x="115" fg:w="52"/><text x="6.2899%" y="1231.50">st..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (52 samples, 2.73%)</title><rect x="6.0399%" y="1205" width="2.7311%" height="15" fill="rgb(219,138,53)" fg:x="115" fg:w="52"/><text x="6.2899%" y="1215.50">st..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (52 samples, 2.73%)</title><rect x="6.0399%" y="1189" width="2.7311%" height="15" fill="rgb(211,51,23)" fg:x="115" fg:w="52"/><text x="6.2899%" y="1199.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (52 samples, 2.73%)</title><rect x="6.0399%" y="1173" width="2.7311%" height="15" fill="rgb(247,221,28)" fg:x="115" fg:w="52"/><text x="6.2899%" y="1183.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (52 samples, 2.73%)</title><rect x="6.0399%" y="1157" width="2.7311%" height="15" fill="rgb(251,222,45)" fg:x="115" fg:w="52"/><text x="6.2899%" y="1167.50">co..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (52 samples, 2.73%)</title><rect x="6.0399%" y="1141" width="2.7311%" height="15" fill="rgb(217,162,53)" fg:x="115" fg:w="52"/><text x="6.2899%" y="1151.50">st..</text></g><g><title>std::panic::catch_unwind (52 samples, 2.73%)</title><rect x="6.0399%" y="1125" width="2.7311%" height="15" fill="rgb(229,93,14)" fg:x="115" fg:w="52"/><text x="6.2899%" y="1135.50">st..</text></g><g><title>std::panicking::try (52 samples, 2.73%)</title><rect x="6.0399%" y="1109" width="2.7311%" height="15" fill="rgb(209,67,49)" fg:x="115" fg:w="52"/><text x="6.2899%" y="1119.50">st..</text></g><g><title>std::panicking::try::do_call (52 samples, 2.73%)</title><rect x="6.0399%" y="1093" width="2.7311%" height="15" fill="rgb(213,87,29)" fg:x="115" fg:w="52"/><text x="6.2899%" y="1103.50">st..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (52 samples, 2.73%)</title><rect x="6.0399%" y="1077" width="2.7311%" height="15" fill="rgb(205,151,52)" fg:x="115" fg:w="52"/><text x="6.2899%" y="1087.50">&lt;c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (52 samples, 2.73%)</title><rect x="6.0399%" y="1061" width="2.7311%" height="15" fill="rgb(253,215,39)" fg:x="115" fg:w="52"/><text x="6.2899%" y="1071.50">st..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (52 samples, 2.73%)</title><rect x="6.0399%" y="1045" width="2.7311%" height="15" fill="rgb(221,220,41)" fg:x="115" fg:w="52"/><text x="6.2899%" y="1055.50">st..</text></g><g><title>test::run_test::run_test_inner::{{closure}} (52 samples, 2.73%)</title><rect x="6.0399%" y="1029" width="2.7311%" height="15" fill="rgb(218,133,21)" fg:x="115" fg:w="52"/><text x="6.2899%" y="1039.50">te..</text></g><g><title>test::run_test::run_test_inner::{{closure}} (52 samples, 2.73%)</title><rect x="6.0399%" y="1013" width="2.7311%" height="15" fill="rgb(221,193,43)" fg:x="115" fg:w="52"/><text x="6.2899%" y="1023.50">te..</text></g><g><title>test::run_test_in_process (52 samples, 2.73%)</title><rect x="6.0399%" y="997" width="2.7311%" height="15" fill="rgb(240,128,52)" fg:x="115" fg:w="52"/><text x="6.2899%" y="1007.50">te..</text></g><g><title>std::panic::catch_unwind (52 samples, 2.73%)</title><rect x="6.0399%" y="981" width="2.7311%" height="15" fill="rgb(253,114,12)" fg:x="115" fg:w="52"/><text x="6.2899%" y="991.50">st..</text></g><g><title>std::panicking::try (52 samples, 2.73%)</title><rect x="6.0399%" y="965" width="2.7311%" height="15" fill="rgb(215,223,47)" fg:x="115" fg:w="52"/><text x="6.2899%" y="975.50">st..</text></g><g><title>std::panicking::try::do_call (52 samples, 2.73%)</title><rect x="6.0399%" y="949" width="2.7311%" height="15" fill="rgb(248,225,23)" fg:x="115" fg:w="52"/><text x="6.2899%" y="959.50">st..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (52 samples, 2.73%)</title><rect x="6.0399%" y="933" width="2.7311%" height="15" fill="rgb(250,108,0)" fg:x="115" fg:w="52"/><text x="6.2899%" y="943.50">&lt;c..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (52 samples, 2.73%)</title><rect x="6.0399%" y="917" width="2.7311%" height="15" fill="rgb(228,208,7)" fg:x="115" fg:w="52"/><text x="6.2899%" y="927.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (52 samples, 2.73%)</title><rect x="6.0399%" y="901" width="2.7311%" height="15" fill="rgb(244,45,10)" fg:x="115" fg:w="52"/><text x="6.2899%" y="911.50">co..</text></g><g><title>test::run_test::{{closure}} (52 samples, 2.73%)</title><rect x="6.0399%" y="885" width="2.7311%" height="15" fill="rgb(207,125,25)" fg:x="115" fg:w="52"/><text x="6.2899%" y="895.50">te..</text></g><g><title>test::__rust_begin_short_backtrace (52 samples, 2.73%)</title><rect x="6.0399%" y="869" width="2.7311%" height="15" fill="rgb(210,195,18)" fg:x="115" fg:w="52"/><text x="6.2899%" y="879.50">te..</text></g><g><title>core::ops::function::FnOnce::call_once (52 samples, 2.73%)</title><rect x="6.0399%" y="853" width="2.7311%" height="15" fill="rgb(249,80,12)" fg:x="115" fg:w="52"/><text x="6.2899%" y="863.50">co..</text></g><g><title>core::ops::function::FnOnce::call_once (52 samples, 2.73%)</title><rect x="6.0399%" y="837" width="2.7311%" height="15" fill="rgb(221,65,9)" fg:x="115" fg:w="52"/><text x="6.2899%" y="847.50">co..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (52 samples, 2.73%)</title><rect x="6.0399%" y="821" width="2.7311%" height="15" fill="rgb(235,49,36)" fg:x="115" fg:w="52"/><text x="6.2899%" y="831.50">to..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (52 samples, 2.73%)</title><rect x="6.0399%" y="805" width="2.7311%" height="15" fill="rgb(225,32,20)" fg:x="115" fg:w="52"/><text x="6.2899%" y="815.50">to..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (52 samples, 2.73%)</title><rect x="6.0399%" y="789" width="2.7311%" height="15" fill="rgb(215,141,46)" fg:x="115" fg:w="52"/><text x="6.2899%" y="799.50">to..</text></g><g><title>tokio::runtime::context::set_scheduler (52 samples, 2.73%)</title><rect x="6.0399%" y="773" width="2.7311%" height="15" fill="rgb(250,160,47)" fg:x="115" fg:w="52"/><text x="6.2899%" y="783.50">to..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (52 samples, 2.73%)</title><rect x="6.0399%" y="757" width="2.7311%" height="15" fill="rgb(216,222,40)" fg:x="115" fg:w="52"/><text x="6.2899%" y="767.50">to..</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (52 samples, 2.73%)</title><rect x="6.0399%" y="741" width="2.7311%" height="15" fill="rgb(234,217,39)" fg:x="115" fg:w="52"/><text x="6.2899%" y="751.50">to..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (52 samples, 2.73%)</title><rect x="6.0399%" y="725" width="2.7311%" height="15" fill="rgb(207,178,40)" fg:x="115" fg:w="52"/><text x="6.2899%" y="735.50">to..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (52 samples, 2.73%)</title><rect x="6.0399%" y="709" width="2.7311%" height="15" fill="rgb(221,136,13)" fg:x="115" fg:w="52"/><text x="6.2899%" y="719.50">to..</text></g><g><title>yadb::storage::Tree::start_write::_{{closure}} (52 samples, 2.73%)</title><rect x="6.0399%" y="693" width="2.7311%" height="15" fill="rgb(249,199,10)" fg:x="115" fg:w="52"/><text x="6.2899%" y="703.50">ya..</text></g><g><title>yadb::storage::wal::WALFile::append_to_wal (10 samples, 0.53%)</title><rect x="8.2458%" y="677" width="0.5252%" height="15" fill="rgb(249,222,13)" fg:x="157" fg:w="10"/><text x="8.4958%" y="687.50"></text></g><g><title>yadb::storage::wal::batch_writer::AsyncBufferedWriter::write (7 samples, 0.37%)</title><rect x="8.4034%" y="661" width="0.3676%" height="15" fill="rgb(244,185,38)" fg:x="160" fg:w="7"/><text x="8.6534%" y="671.50"></text></g><g><title>tokio::sync::oneshot::channel (5 samples, 0.26%)</title><rect x="8.5084%" y="645" width="0.2626%" height="15" fill="rgb(236,202,9)" fg:x="162" fg:w="5"/><text x="8.7584%" y="655.50"></text></g><g><title>tokio::sync::oneshot::State::new (1 samples, 0.05%)</title><rect x="8.7185%" y="629" width="0.0525%" height="15" fill="rgb(250,229,37)" fg:x="166" fg:w="1"/><text x="8.9685%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.05%)</title><rect x="8.7710%" y="677" width="0.0525%" height="15" fill="rgb(206,174,23)" fg:x="167" fg:w="1"/><text x="9.0210%" y="687.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.05%)</title><rect x="8.7710%" y="661" width="0.0525%" height="15" fill="rgb(211,33,43)" fg:x="167" fg:w="1"/><text x="9.0210%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="8.7710%" y="645" width="0.0525%" height="15" fill="rgb(245,58,50)" fg:x="167" fg:w="1"/><text x="9.0210%" y="655.50"></text></g><g><title>malloc_consolidate (1 samples, 0.05%)</title><rect x="8.7710%" y="629" width="0.0525%" height="15" fill="rgb(244,68,36)" fg:x="167" fg:w="1"/><text x="9.0210%" y="639.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.05%)</title><rect x="8.7710%" y="613" width="0.0525%" height="15" fill="rgb(232,229,15)" fg:x="167" fg:w="1"/><text x="9.0210%" y="623.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4 samples, 0.21%)</title><rect x="8.7710%" y="1221" width="0.2101%" height="15" fill="rgb(254,30,23)" fg:x="167" fg:w="4"/><text x="9.0210%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.21%)</title><rect x="8.7710%" y="1205" width="0.2101%" height="15" fill="rgb(235,160,14)" fg:x="167" fg:w="4"/><text x="9.0210%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.21%)</title><rect x="8.7710%" y="1189" width="0.2101%" height="15" fill="rgb(212,155,44)" fg:x="167" fg:w="4"/><text x="9.0210%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (4 samples, 0.21%)</title><rect x="8.7710%" y="1173" width="0.2101%" height="15" fill="rgb(226,2,50)" fg:x="167" fg:w="4"/><text x="9.0210%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (4 samples, 0.21%)</title><rect x="8.7710%" y="1157" width="0.2101%" height="15" fill="rgb(234,177,6)" fg:x="167" fg:w="4"/><text x="9.0210%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.21%)</title><rect x="8.7710%" y="1141" width="0.2101%" height="15" fill="rgb(217,24,9)" fg:x="167" fg:w="4"/><text x="9.0210%" y="1151.50"></text></g><g><title>std::panicking::try (4 samples, 0.21%)</title><rect x="8.7710%" y="1125" width="0.2101%" height="15" fill="rgb(220,13,46)" fg:x="167" fg:w="4"/><text x="9.0210%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.21%)</title><rect x="8.7710%" y="1109" width="0.2101%" height="15" fill="rgb(239,221,27)" fg:x="167" fg:w="4"/><text x="9.0210%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.21%)</title><rect x="8.7710%" y="1093" width="0.2101%" height="15" fill="rgb(222,198,25)" fg:x="167" fg:w="4"/><text x="9.0210%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (4 samples, 0.21%)</title><rect x="8.7710%" y="1077" width="0.2101%" height="15" fill="rgb(211,99,13)" fg:x="167" fg:w="4"/><text x="9.0210%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.21%)</title><rect x="8.7710%" y="1061" width="0.2101%" height="15" fill="rgb(232,111,31)" fg:x="167" fg:w="4"/><text x="9.0210%" y="1071.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (4 samples, 0.21%)</title><rect x="8.7710%" y="1045" width="0.2101%" height="15" fill="rgb(245,82,37)" fg:x="167" fg:w="4"/><text x="9.0210%" y="1055.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (4 samples, 0.21%)</title><rect x="8.7710%" y="1029" width="0.2101%" height="15" fill="rgb(227,149,46)" fg:x="167" fg:w="4"/><text x="9.0210%" y="1039.50"></text></g><g><title>test::run_test_in_process (4 samples, 0.21%)</title><rect x="8.7710%" y="1013" width="0.2101%" height="15" fill="rgb(218,36,50)" fg:x="167" fg:w="4"/><text x="9.0210%" y="1023.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.21%)</title><rect x="8.7710%" y="997" width="0.2101%" height="15" fill="rgb(226,80,48)" fg:x="167" fg:w="4"/><text x="9.0210%" y="1007.50"></text></g><g><title>std::panicking::try (4 samples, 0.21%)</title><rect x="8.7710%" y="981" width="0.2101%" height="15" fill="rgb(238,224,15)" fg:x="167" fg:w="4"/><text x="9.0210%" y="991.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.21%)</title><rect x="8.7710%" y="965" width="0.2101%" height="15" fill="rgb(241,136,10)" fg:x="167" fg:w="4"/><text x="9.0210%" y="975.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.21%)</title><rect x="8.7710%" y="949" width="0.2101%" height="15" fill="rgb(208,32,45)" fg:x="167" fg:w="4"/><text x="9.0210%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.21%)</title><rect x="8.7710%" y="933" width="0.2101%" height="15" fill="rgb(207,135,9)" fg:x="167" fg:w="4"/><text x="9.0210%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (4 samples, 0.21%)</title><rect x="8.7710%" y="917" width="0.2101%" height="15" fill="rgb(206,86,44)" fg:x="167" fg:w="4"/><text x="9.0210%" y="927.50"></text></g><g><title>test::run_test::{{closure}} (4 samples, 0.21%)</title><rect x="8.7710%" y="901" width="0.2101%" height="15" fill="rgb(245,177,15)" fg:x="167" fg:w="4"/><text x="9.0210%" y="911.50"></text></g><g><title>test::__rust_begin_short_backtrace (4 samples, 0.21%)</title><rect x="8.7710%" y="885" width="0.2101%" height="15" fill="rgb(206,64,50)" fg:x="167" fg:w="4"/><text x="9.0210%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.21%)</title><rect x="8.7710%" y="869" width="0.2101%" height="15" fill="rgb(234,36,40)" fg:x="167" fg:w="4"/><text x="9.0210%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.21%)</title><rect x="8.7710%" y="853" width="0.2101%" height="15" fill="rgb(213,64,8)" fg:x="167" fg:w="4"/><text x="9.0210%" y="863.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (4 samples, 0.21%)</title><rect x="8.7710%" y="837" width="0.2101%" height="15" fill="rgb(210,75,36)" fg:x="167" fg:w="4"/><text x="9.0210%" y="847.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (4 samples, 0.21%)</title><rect x="8.7710%" y="821" width="0.2101%" height="15" fill="rgb(229,88,21)" fg:x="167" fg:w="4"/><text x="9.0210%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (4 samples, 0.21%)</title><rect x="8.7710%" y="805" width="0.2101%" height="15" fill="rgb(252,204,47)" fg:x="167" fg:w="4"/><text x="9.0210%" y="815.50"></text></g><g><title>tokio::runtime::context::set_scheduler (4 samples, 0.21%)</title><rect x="8.7710%" y="789" width="0.2101%" height="15" fill="rgb(208,77,27)" fg:x="167" fg:w="4"/><text x="9.0210%" y="799.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (4 samples, 0.21%)</title><rect x="8.7710%" y="773" width="0.2101%" height="15" fill="rgb(221,76,26)" fg:x="167" fg:w="4"/><text x="9.0210%" y="783.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (4 samples, 0.21%)</title><rect x="8.7710%" y="757" width="0.2101%" height="15" fill="rgb(225,139,18)" fg:x="167" fg:w="4"/><text x="9.0210%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4 samples, 0.21%)</title><rect x="8.7710%" y="741" width="0.2101%" height="15" fill="rgb(230,137,11)" fg:x="167" fg:w="4"/><text x="9.0210%" y="751.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (4 samples, 0.21%)</title><rect x="8.7710%" y="725" width="0.2101%" height="15" fill="rgb(212,28,1)" fg:x="167" fg:w="4"/><text x="9.0210%" y="735.50"></text></g><g><title>yadb::storage::Tree::start_write::_{{closure}} (4 samples, 0.21%)</title><rect x="8.7710%" y="709" width="0.2101%" height="15" fill="rgb(248,164,17)" fg:x="167" fg:w="4"/><text x="9.0210%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.21%)</title><rect x="8.7710%" y="693" width="0.2101%" height="15" fill="rgb(222,171,42)" fg:x="167" fg:w="4"/><text x="9.0210%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;yadb::storage::async_cache::AsyncCache&lt;yadb::storage::table::DataBlock,yadb::storage::table::Table,u64,core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;,yadb::storage::errors::YAStorageError&gt;&gt; (3 samples, 0.16%)</title><rect x="8.8235%" y="677" width="0.1576%" height="15" fill="rgb(243,84,45)" fg:x="168" fg:w="3"/><text x="9.0735%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.16%)</title><rect x="8.8235%" y="661" width="0.1576%" height="15" fill="rgb(252,49,23)" fg:x="168" fg:w="3"/><text x="9.0735%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;schnellru::Entry&lt;alloc::string::String,yadb::storage::table::DataBlock,u32&gt;&gt; (3 samples, 0.16%)</title><rect x="8.8235%" y="645" width="0.1576%" height="15" fill="rgb(215,19,7)" fg:x="168" fg:w="3"/><text x="9.0735%" y="655.50"></text></g><g><title>_int_free (3 samples, 0.16%)</title><rect x="8.8235%" y="629" width="0.1576%" height="15" fill="rgb(238,81,41)" fg:x="168" fg:w="3"/><text x="9.0735%" y="639.50"></text></g><g><title>malloc_consolidate (3 samples, 0.16%)</title><rect x="8.8235%" y="613" width="0.1576%" height="15" fill="rgb(210,199,37)" fg:x="168" fg:w="3"/><text x="9.0735%" y="623.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (1 samples, 0.05%)</title><rect x="9.4538%" y="821" width="0.0525%" height="15" fill="rgb(244,192,49)" fg:x="180" fg:w="1"/><text x="9.7038%" y="831.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (11 samples, 0.58%)</title><rect x="8.9811%" y="853" width="0.5777%" height="15" fill="rgb(226,211,11)" fg:x="171" fg:w="11"/><text x="9.2311%" y="863.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (3 samples, 0.16%)</title><rect x="9.4013%" y="837" width="0.1576%" height="15" fill="rgb(236,162,54)" fg:x="179" fg:w="3"/><text x="9.6513%" y="847.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (1 samples, 0.05%)</title><rect x="9.5063%" y="821" width="0.0525%" height="15" fill="rgb(220,229,9)" fg:x="181" fg:w="1"/><text x="9.7563%" y="831.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="9.5588%" y="757" width="0.0525%" height="15" fill="rgb(250,87,22)" fg:x="182" fg:w="1"/><text x="9.8088%" y="767.50"></text></g><g><title>malloc_consolidate (7 samples, 0.37%)</title><rect x="9.7689%" y="741" width="0.3676%" height="15" fill="rgb(239,43,17)" fg:x="186" fg:w="7"/><text x="10.0189%" y="751.50"></text></g><g><title>unlink_chunk.isra.0 (3 samples, 0.16%)</title><rect x="9.9790%" y="725" width="0.1576%" height="15" fill="rgb(231,177,25)" fg:x="190" fg:w="3"/><text x="10.2290%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1366%" y="725" width="0.0525%" height="15" fill="rgb(219,179,1)" fg:x="193" fg:w="1"/><text x="10.3866%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1366%" y="709" width="0.0525%" height="15" fill="rgb(238,219,53)" fg:x="193" fg:w="1"/><text x="10.3866%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1366%" y="693" width="0.0525%" height="15" fill="rgb(232,167,36)" fg:x="193" fg:w="1"/><text x="10.3866%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1366%" y="677" width="0.0525%" height="15" fill="rgb(244,19,51)" fg:x="193" fg:w="1"/><text x="10.3866%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1366%" y="661" width="0.0525%" height="15" fill="rgb(224,6,22)" fg:x="193" fg:w="1"/><text x="10.3866%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1366%" y="645" width="0.0525%" height="15" fill="rgb(224,145,5)" fg:x="193" fg:w="1"/><text x="10.3866%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1366%" y="629" width="0.0525%" height="15" fill="rgb(234,130,49)" fg:x="193" fg:w="1"/><text x="10.3866%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1366%" y="613" width="0.0525%" height="15" fill="rgb(254,6,2)" fg:x="193" fg:w="1"/><text x="10.3866%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1366%" y="597" width="0.0525%" height="15" fill="rgb(208,96,46)" fg:x="193" fg:w="1"/><text x="10.3866%" y="607.50"></text></g><g><title>sysmalloc (2 samples, 0.11%)</title><rect x="10.1366%" y="741" width="0.1050%" height="15" fill="rgb(239,3,39)" fg:x="193" fg:w="2"/><text x="10.3866%" y="751.50"></text></g><g><title>__GI___mprotect (1 samples, 0.05%)</title><rect x="10.1891%" y="725" width="0.0525%" height="15" fill="rgb(233,210,1)" fg:x="194" fg:w="1"/><text x="10.4391%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1891%" y="709" width="0.0525%" height="15" fill="rgb(244,137,37)" fg:x="194" fg:w="1"/><text x="10.4391%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1891%" y="693" width="0.0525%" height="15" fill="rgb(240,136,2)" fg:x="194" fg:w="1"/><text x="10.4391%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1891%" y="677" width="0.0525%" height="15" fill="rgb(239,18,37)" fg:x="194" fg:w="1"/><text x="10.4391%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1891%" y="661" width="0.0525%" height="15" fill="rgb(218,185,22)" fg:x="194" fg:w="1"/><text x="10.4391%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1891%" y="645" width="0.0525%" height="15" fill="rgb(225,218,4)" fg:x="194" fg:w="1"/><text x="10.4391%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1891%" y="629" width="0.0525%" height="15" fill="rgb(230,182,32)" fg:x="194" fg:w="1"/><text x="10.4391%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1891%" y="613" width="0.0525%" height="15" fill="rgb(242,56,43)" fg:x="194" fg:w="1"/><text x="10.4391%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1891%" y="597" width="0.0525%" height="15" fill="rgb(233,99,24)" fg:x="194" fg:w="1"/><text x="10.4391%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1891%" y="581" width="0.0525%" height="15" fill="rgb(234,209,42)" fg:x="194" fg:w="1"/><text x="10.4391%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1891%" y="565" width="0.0525%" height="15" fill="rgb(227,7,12)" fg:x="194" fg:w="1"/><text x="10.4391%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1891%" y="549" width="0.0525%" height="15" fill="rgb(245,203,43)" fg:x="194" fg:w="1"/><text x="10.4391%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1891%" y="533" width="0.0525%" height="15" fill="rgb(238,205,33)" fg:x="194" fg:w="1"/><text x="10.4391%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1891%" y="517" width="0.0525%" height="15" fill="rgb(231,56,7)" fg:x="194" fg:w="1"/><text x="10.4391%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1891%" y="501" width="0.0525%" height="15" fill="rgb(244,186,29)" fg:x="194" fg:w="1"/><text x="10.4391%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1891%" y="485" width="0.0525%" height="15" fill="rgb(234,111,31)" fg:x="194" fg:w="1"/><text x="10.4391%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.1891%" y="469" width="0.0525%" height="15" fill="rgb(241,149,10)" fg:x="194" fg:w="1"/><text x="10.4391%" y="479.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (25 samples, 1.31%)</title><rect x="8.9811%" y="1221" width="1.3130%" height="15" fill="rgb(249,206,44)" fg:x="171" fg:w="25"/><text x="9.2311%" y="1231.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (25 samples, 1.31%)</title><rect x="8.9811%" y="1205" width="1.3130%" height="15" fill="rgb(251,153,30)" fg:x="171" fg:w="25"/><text x="9.2311%" y="1215.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (25 samples, 1.31%)</title><rect x="8.9811%" y="1189" width="1.3130%" height="15" fill="rgb(239,152,38)" fg:x="171" fg:w="25"/><text x="9.2311%" y="1199.50"></text></g><g><title>test::run_test_in_process (25 samples, 1.31%)</title><rect x="8.9811%" y="1173" width="1.3130%" height="15" fill="rgb(249,139,47)" fg:x="171" fg:w="25"/><text x="9.2311%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 1.31%)</title><rect x="8.9811%" y="1157" width="1.3130%" height="15" fill="rgb(244,64,35)" fg:x="171" fg:w="25"/><text x="9.2311%" y="1167.50"></text></g><g><title>std::panicking::try (25 samples, 1.31%)</title><rect x="8.9811%" y="1141" width="1.3130%" height="15" fill="rgb(216,46,15)" fg:x="171" fg:w="25"/><text x="9.2311%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 1.31%)</title><rect x="8.9811%" y="1125" width="1.3130%" height="15" fill="rgb(250,74,19)" fg:x="171" fg:w="25"/><text x="9.2311%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 1.31%)</title><rect x="8.9811%" y="1109" width="1.3130%" height="15" fill="rgb(249,42,33)" fg:x="171" fg:w="25"/><text x="9.2311%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (25 samples, 1.31%)</title><rect x="8.9811%" y="1093" width="1.3130%" height="15" fill="rgb(242,149,17)" fg:x="171" fg:w="25"/><text x="9.2311%" y="1103.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (25 samples, 1.31%)</title><rect x="8.9811%" y="1077" width="1.3130%" height="15" fill="rgb(244,29,21)" fg:x="171" fg:w="25"/><text x="9.2311%" y="1087.50"></text></g><g><title>test::run_test::{{closure}} (25 samples, 1.31%)</title><rect x="8.9811%" y="1061" width="1.3130%" height="15" fill="rgb(220,130,37)" fg:x="171" fg:w="25"/><text x="9.2311%" y="1071.50"></text></g><g><title>test::__rust_begin_short_backtrace (25 samples, 1.31%)</title><rect x="8.9811%" y="1045" width="1.3130%" height="15" fill="rgb(211,67,2)" fg:x="171" fg:w="25"/><text x="9.2311%" y="1055.50"></text></g><g><title>core::ops::function::FnOnce::call_once (25 samples, 1.31%)</title><rect x="8.9811%" y="1029" width="1.3130%" height="15" fill="rgb(235,68,52)" fg:x="171" fg:w="25"/><text x="9.2311%" y="1039.50"></text></g><g><title>core::ops::function::FnOnce::call_once (25 samples, 1.31%)</title><rect x="8.9811%" y="1013" width="1.3130%" height="15" fill="rgb(246,142,3)" fg:x="171" fg:w="25"/><text x="9.2311%" y="1023.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (25 samples, 1.31%)</title><rect x="8.9811%" y="997" width="1.3130%" height="15" fill="rgb(241,25,7)" fg:x="171" fg:w="25"/><text x="9.2311%" y="1007.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (25 samples, 1.31%)</title><rect x="8.9811%" y="981" width="1.3130%" height="15" fill="rgb(242,119,39)" fg:x="171" fg:w="25"/><text x="9.2311%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (25 samples, 1.31%)</title><rect x="8.9811%" y="965" width="1.3130%" height="15" fill="rgb(241,98,45)" fg:x="171" fg:w="25"/><text x="9.2311%" y="975.50"></text></g><g><title>tokio::runtime::context::set_scheduler (25 samples, 1.31%)</title><rect x="8.9811%" y="949" width="1.3130%" height="15" fill="rgb(254,28,30)" fg:x="171" fg:w="25"/><text x="9.2311%" y="959.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (25 samples, 1.31%)</title><rect x="8.9811%" y="933" width="1.3130%" height="15" fill="rgb(241,142,54)" fg:x="171" fg:w="25"/><text x="9.2311%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (25 samples, 1.31%)</title><rect x="8.9811%" y="917" width="1.3130%" height="15" fill="rgb(222,85,15)" fg:x="171" fg:w="25"/><text x="9.2311%" y="927.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (25 samples, 1.31%)</title><rect x="8.9811%" y="901" width="1.3130%" height="15" fill="rgb(210,85,47)" fg:x="171" fg:w="25"/><text x="9.2311%" y="911.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (25 samples, 1.31%)</title><rect x="8.9811%" y="885" width="1.3130%" height="15" fill="rgb(224,206,25)" fg:x="171" fg:w="25"/><text x="9.2311%" y="895.50"></text></g><g><title>yadb::storage::Tree::start_write::_{{closure}} (25 samples, 1.31%)</title><rect x="8.9811%" y="869" width="1.3130%" height="15" fill="rgb(243,201,19)" fg:x="171" fg:w="25"/><text x="9.2311%" y="879.50"></text></g><g><title>yadb::storage::wal::WALFile::append_to_wal (14 samples, 0.74%)</title><rect x="9.5588%" y="853" width="0.7353%" height="15" fill="rgb(236,59,4)" fg:x="182" fg:w="14"/><text x="9.8088%" y="863.50"></text></g><g><title>yadb::storage::wal::WALEntry::serialize (14 samples, 0.74%)</title><rect x="9.5588%" y="837" width="0.7353%" height="15" fill="rgb(254,179,45)" fg:x="182" fg:w="14"/><text x="9.8088%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.74%)</title><rect x="9.5588%" y="821" width="0.7353%" height="15" fill="rgb(226,14,10)" fg:x="182" fg:w="14"/><text x="9.8088%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.74%)</title><rect x="9.5588%" y="805" width="0.7353%" height="15" fill="rgb(244,27,41)" fg:x="182" fg:w="14"/><text x="9.8088%" y="815.50"></text></g><g><title>__GI___libc_realloc (14 samples, 0.74%)</title><rect x="9.5588%" y="789" width="0.7353%" height="15" fill="rgb(235,35,32)" fg:x="182" fg:w="14"/><text x="9.8088%" y="799.50"></text></g><g><title>_int_realloc (14 samples, 0.74%)</title><rect x="9.5588%" y="773" width="0.7353%" height="15" fill="rgb(218,68,31)" fg:x="182" fg:w="14"/><text x="9.8088%" y="783.50"></text></g><g><title>_int_malloc (13 samples, 0.68%)</title><rect x="9.6113%" y="757" width="0.6828%" height="15" fill="rgb(207,120,37)" fg:x="183" fg:w="13"/><text x="9.8613%" y="767.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.05%)</title><rect x="10.2416%" y="741" width="0.0525%" height="15" fill="rgb(227,98,0)" fg:x="195" fg:w="1"/><text x="10.4916%" y="751.50"></text></g><g><title>yadb::storage::table::MergedTableIterators::new (1 samples, 0.05%)</title><rect x="10.2941%" y="1013" width="0.0525%" height="15" fill="rgb(207,7,3)" fg:x="196" fg:w="1"/><text x="10.5441%" y="1023.50"></text></g><g><title>&lt;yadb::storage::table::Table as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="10.2941%" y="997" width="0.0525%" height="15" fill="rgb(206,98,19)" fg:x="196" fg:w="1"/><text x="10.5441%" y="1007.50"></text></g><g><title>yadb::storage::table::DataBlock::deserialize (1 samples, 0.05%)</title><rect x="10.2941%" y="981" width="0.0525%" height="15" fill="rgb(217,5,26)" fg:x="196" fg:w="1"/><text x="10.5441%" y="991.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="10.2941%" y="965" width="0.0525%" height="15" fill="rgb(235,190,38)" fg:x="196" fg:w="1"/><text x="10.5441%" y="975.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="10.3466%" y="997" width="0.1050%" height="15" fill="rgb(247,86,24)" fg:x="197" fg:w="2"/><text x="10.5966%" y="1007.50"></text></g><g><title>malloc_consolidate (2 samples, 0.11%)</title><rect x="10.3466%" y="981" width="0.1050%" height="15" fill="rgb(205,101,16)" fg:x="197" fg:w="2"/><text x="10.5966%" y="991.50"></text></g><g><title>test::__rust_begin_short_backtrace (12 samples, 0.63%)</title><rect x="10.2941%" y="1221" width="0.6303%" height="15" fill="rgb(246,168,33)" fg:x="196" fg:w="12"/><text x="10.5441%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.63%)</title><rect x="10.2941%" y="1205" width="0.6303%" height="15" fill="rgb(231,114,1)" fg:x="196" fg:w="12"/><text x="10.5441%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.63%)</title><rect x="10.2941%" y="1189" width="0.6303%" height="15" fill="rgb(207,184,53)" fg:x="196" fg:w="12"/><text x="10.5441%" y="1199.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (12 samples, 0.63%)</title><rect x="10.2941%" y="1173" width="0.6303%" height="15" fill="rgb(224,95,51)" fg:x="196" fg:w="12"/><text x="10.5441%" y="1183.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (12 samples, 0.63%)</title><rect x="10.2941%" y="1157" width="0.6303%" height="15" fill="rgb(212,188,45)" fg:x="196" fg:w="12"/><text x="10.5441%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (12 samples, 0.63%)</title><rect x="10.2941%" y="1141" width="0.6303%" height="15" fill="rgb(223,154,38)" fg:x="196" fg:w="12"/><text x="10.5441%" y="1151.50"></text></g><g><title>tokio::runtime::context::set_scheduler (12 samples, 0.63%)</title><rect x="10.2941%" y="1125" width="0.6303%" height="15" fill="rgb(251,22,52)" fg:x="196" fg:w="12"/><text x="10.5441%" y="1135.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (12 samples, 0.63%)</title><rect x="10.2941%" y="1109" width="0.6303%" height="15" fill="rgb(229,209,22)" fg:x="196" fg:w="12"/><text x="10.5441%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (12 samples, 0.63%)</title><rect x="10.2941%" y="1093" width="0.6303%" height="15" fill="rgb(234,138,34)" fg:x="196" fg:w="12"/><text x="10.5441%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (12 samples, 0.63%)</title><rect x="10.2941%" y="1077" width="0.6303%" height="15" fill="rgb(212,95,11)" fg:x="196" fg:w="12"/><text x="10.5441%" y="1087.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (12 samples, 0.63%)</title><rect x="10.2941%" y="1061" width="0.6303%" height="15" fill="rgb(240,179,47)" fg:x="196" fg:w="12"/><text x="10.5441%" y="1071.50"></text></g><g><title>yadb::storage::Tree::start_write::_{{closure}} (12 samples, 0.63%)</title><rect x="10.2941%" y="1045" width="0.6303%" height="15" fill="rgb(240,163,11)" fg:x="196" fg:w="12"/><text x="10.5441%" y="1055.50"></text></g><g><title>yadb::storage::Tree::write_skipmap_as_sstable::{{closure}} (12 samples, 0.63%)</title><rect x="10.2941%" y="1029" width="0.6303%" height="15" fill="rgb(236,37,12)" fg:x="196" fg:w="12"/><text x="10.5441%" y="1039.50"></text></g><g><title>yadb::storage::table::Table::write_table (11 samples, 0.58%)</title><rect x="10.3466%" y="1013" width="0.5777%" height="15" fill="rgb(232,164,16)" fg:x="197" fg:w="11"/><text x="10.5966%" y="1023.50"></text></g><g><title>bloomfilter::Bloom&lt;T&gt;::set (9 samples, 0.47%)</title><rect x="10.4517%" y="997" width="0.4727%" height="15" fill="rgb(244,205,15)" fg:x="199" fg:w="9"/><text x="10.7017%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.8718%" y="981" width="0.0525%" height="15" fill="rgb(223,117,47)" fg:x="207" fg:w="1"/><text x="11.1218%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.8718%" y="965" width="0.0525%" height="15" fill="rgb(244,107,35)" fg:x="207" fg:w="1"/><text x="11.1218%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.8718%" y="949" width="0.0525%" height="15" fill="rgb(205,140,8)" fg:x="207" fg:w="1"/><text x="11.1218%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.8718%" y="933" width="0.0525%" height="15" fill="rgb(228,84,46)" fg:x="207" fg:w="1"/><text x="11.1218%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.8718%" y="917" width="0.0525%" height="15" fill="rgb(254,188,9)" fg:x="207" fg:w="1"/><text x="11.1218%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.8718%" y="901" width="0.0525%" height="15" fill="rgb(206,112,54)" fg:x="207" fg:w="1"/><text x="11.1218%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.8718%" y="885" width="0.0525%" height="15" fill="rgb(216,84,49)" fg:x="207" fg:w="1"/><text x="11.1218%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.32%)</title><rect x="10.9244%" y="853" width="0.3151%" height="15" fill="rgb(214,194,35)" fg:x="208" fg:w="6"/><text x="11.1744%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (8 samples, 0.42%)</title><rect x="10.9244%" y="949" width="0.4202%" height="15" fill="rgb(249,28,3)" fg:x="208" fg:w="8"/><text x="11.1744%" y="959.50"></text></g><g><title>test_storage::split_bench_big_value::{{closure}} (8 samples, 0.42%)</title><rect x="10.9244%" y="933" width="0.4202%" height="15" fill="rgb(222,56,52)" fg:x="208" fg:w="8"/><text x="11.1744%" y="943.50"></text></g><g><title>test_storage::generate_benchmark (8 samples, 0.42%)</title><rect x="10.9244%" y="917" width="0.4202%" height="15" fill="rgb(245,217,50)" fg:x="208" fg:w="8"/><text x="11.1744%" y="927.50"></text></g><g><title>yadb::storage::Tree::get (8 samples, 0.42%)</title><rect x="10.9244%" y="901" width="0.4202%" height="15" fill="rgb(213,201,24)" fg:x="208" fg:w="8"/><text x="11.1744%" y="911.50"></text></g><g><title>tokio::task::spawn::spawn (8 samples, 0.42%)</title><rect x="10.9244%" y="885" width="0.4202%" height="15" fill="rgb(248,116,28)" fg:x="208" fg:w="8"/><text x="11.1744%" y="895.50"></text></g><g><title>tokio::runtime::context::current::with_current (8 samples, 0.42%)</title><rect x="10.9244%" y="869" width="0.4202%" height="15" fill="rgb(219,72,43)" fg:x="208" fg:w="8"/><text x="11.1744%" y="879.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (2 samples, 0.11%)</title><rect x="11.2395%" y="853" width="0.1050%" height="15" fill="rgb(209,138,14)" fg:x="214" fg:w="2"/><text x="11.4895%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="11.2920%" y="837" width="0.0525%" height="15" fill="rgb(222,18,33)" fg:x="215" fg:w="1"/><text x="11.5420%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="11.2920%" y="821" width="0.0525%" height="15" fill="rgb(213,199,7)" fg:x="215" fg:w="1"/><text x="11.5420%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="11.2920%" y="805" width="0.0525%" height="15" fill="rgb(250,110,10)" fg:x="215" fg:w="1"/><text x="11.5420%" y="815.50"></text></g><g><title>__rdl_alloc (1 samples, 0.05%)</title><rect x="11.3445%" y="869" width="0.0525%" height="15" fill="rgb(248,123,6)" fg:x="216" fg:w="1"/><text x="11.5945%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.11%)</title><rect x="11.3971%" y="869" width="0.1050%" height="15" fill="rgb(206,91,31)" fg:x="217" fg:w="2"/><text x="11.6471%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.11%)</title><rect x="11.3971%" y="853" width="0.1050%" height="15" fill="rgb(211,154,13)" fg:x="217" fg:w="2"/><text x="11.6471%" y="863.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.11%)</title><rect x="11.3971%" y="837" width="0.1050%" height="15" fill="rgb(225,148,7)" fg:x="217" fg:w="2"/><text x="11.6471%" y="847.50"></text></g><g><title>_int_realloc (2 samples, 0.11%)</title><rect x="11.3971%" y="821" width="0.1050%" height="15" fill="rgb(220,160,43)" fg:x="217" fg:w="2"/><text x="11.6471%" y="831.50"></text></g><g><title>_int_malloc (2 samples, 0.11%)</title><rect x="11.3971%" y="805" width="0.1050%" height="15" fill="rgb(213,52,39)" fg:x="217" fg:w="2"/><text x="11.6471%" y="815.50"></text></g><g><title>malloc_consolidate (1 samples, 0.05%)</title><rect x="11.4496%" y="789" width="0.0525%" height="15" fill="rgb(243,137,7)" fg:x="218" fg:w="1"/><text x="11.6996%" y="799.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.05%)</title><rect x="11.4496%" y="773" width="0.0525%" height="15" fill="rgb(230,79,13)" fg:x="218" fg:w="1"/><text x="11.6996%" y="783.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all (4 samples, 0.21%)</title><rect x="11.5021%" y="869" width="0.2101%" height="15" fill="rgb(247,105,23)" fg:x="219" fg:w="4"/><text x="11.7521%" y="879.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all_modern (4 samples, 0.21%)</title><rect x="11.5021%" y="853" width="0.2101%" height="15" fill="rgb(223,179,41)" fg:x="219" fg:w="4"/><text x="11.7521%" y="863.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (4 samples, 0.21%)</title><rect x="11.5021%" y="837" width="0.2101%" height="15" fill="rgb(218,9,34)" fg:x="219" fg:w="4"/><text x="11.7521%" y="847.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (4 samples, 0.21%)</title><rect x="11.5021%" y="821" width="0.2101%" height="15" fill="rgb(222,106,8)" fg:x="219" fg:w="4"/><text x="11.7521%" y="831.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all_modern::{{closure}} (4 samples, 0.21%)</title><rect x="11.5021%" y="805" width="0.2101%" height="15" fill="rgb(211,220,0)" fg:x="219" fg:w="4"/><text x="11.7521%" y="815.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all_recursive (4 samples, 0.21%)</title><rect x="11.5021%" y="789" width="0.2101%" height="15" fill="rgb(229,52,16)" fg:x="219" fg:w="4"/><text x="11.7521%" y="799.50"></text></g><g><title>__GI_unlinkat (4 samples, 0.21%)</title><rect x="11.5021%" y="773" width="0.2101%" height="15" fill="rgb(212,155,18)" fg:x="219" fg:w="4"/><text x="11.7521%" y="783.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="11.5021%" y="757" width="0.2101%" height="15" fill="rgb(242,21,14)" fg:x="219" fg:w="4"/><text x="11.7521%" y="767.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="11.5021%" y="741" width="0.2101%" height="15" fill="rgb(222,19,48)" fg:x="219" fg:w="4"/><text x="11.7521%" y="751.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="11.5021%" y="725" width="0.2101%" height="15" fill="rgb(232,45,27)" fg:x="219" fg:w="4"/><text x="11.7521%" y="735.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="11.5021%" y="709" width="0.2101%" height="15" fill="rgb(249,103,42)" fg:x="219" fg:w="4"/><text x="11.7521%" y="719.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="11.5021%" y="693" width="0.2101%" height="15" fill="rgb(246,81,33)" fg:x="219" fg:w="4"/><text x="11.7521%" y="703.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="11.5021%" y="677" width="0.2101%" height="15" fill="rgb(252,33,42)" fg:x="219" fg:w="4"/><text x="11.7521%" y="687.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="11.5021%" y="661" width="0.2101%" height="15" fill="rgb(209,212,41)" fg:x="219" fg:w="4"/><text x="11.7521%" y="671.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="11.5021%" y="645" width="0.2101%" height="15" fill="rgb(207,154,6)" fg:x="219" fg:w="4"/><text x="11.7521%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="11.5021%" y="629" width="0.2101%" height="15" fill="rgb(223,64,47)" fg:x="219" fg:w="4"/><text x="11.7521%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="11.5021%" y="613" width="0.2101%" height="15" fill="rgb(211,161,38)" fg:x="219" fg:w="4"/><text x="11.7521%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="11.5021%" y="597" width="0.2101%" height="15" fill="rgb(219,138,40)" fg:x="219" fg:w="4"/><text x="11.7521%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="11.6071%" y="581" width="0.1050%" height="15" fill="rgb(241,228,46)" fg:x="221" fg:w="2"/><text x="11.8571%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="11.6597%" y="565" width="0.0525%" height="15" fill="rgb(223,209,38)" fg:x="222" fg:w="1"/><text x="11.9097%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="11.6597%" y="549" width="0.0525%" height="15" fill="rgb(236,164,45)" fg:x="222" fg:w="1"/><text x="11.9097%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="11.6597%" y="533" width="0.0525%" height="15" fill="rgb(231,15,5)" fg:x="222" fg:w="1"/><text x="11.9097%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="11.6597%" y="517" width="0.0525%" height="15" fill="rgb(252,35,15)" fg:x="222" fg:w="1"/><text x="11.9097%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="11.6597%" y="501" width="0.0525%" height="15" fill="rgb(248,181,18)" fg:x="222" fg:w="1"/><text x="11.9097%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="11.6597%" y="485" width="0.0525%" height="15" fill="rgb(233,39,42)" fg:x="222" fg:w="1"/><text x="11.9097%" y="495.50"></text></g><g><title>yadb::storage::table::Table::get_index (30 samples, 1.58%)</title><rect x="11.7122%" y="869" width="1.5756%" height="15" fill="rgb(238,110,33)" fg:x="223" fg:w="30"/><text x="11.9622%" y="879.50"></text></g><g><title>std::io::default_read_exact (30 samples, 1.58%)</title><rect x="11.7122%" y="853" width="1.5756%" height="15" fill="rgb(233,195,10)" fg:x="223" fg:w="30"/><text x="11.9622%" y="863.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (30 samples, 1.58%)</title><rect x="11.7122%" y="837" width="1.5756%" height="15" fill="rgb(254,105,3)" fg:x="223" fg:w="30"/><text x="11.9622%" y="847.50"></text></g><g><title>std::sys::unix::fs::File::read (30 samples, 1.58%)</title><rect x="11.7122%" y="821" width="1.5756%" height="15" fill="rgb(221,225,9)" fg:x="223" fg:w="30"/><text x="11.9622%" y="831.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (30 samples, 1.58%)</title><rect x="11.7122%" y="805" width="1.5756%" height="15" fill="rgb(224,227,45)" fg:x="223" fg:w="30"/><text x="11.9622%" y="815.50"></text></g><g><title>__libc_read (30 samples, 1.58%)</title><rect x="11.7122%" y="789" width="1.5756%" height="15" fill="rgb(229,198,43)" fg:x="223" fg:w="30"/><text x="11.9622%" y="799.50"></text></g><g><title>__libc_read (30 samples, 1.58%)</title><rect x="11.7122%" y="773" width="1.5756%" height="15" fill="rgb(206,209,35)" fg:x="223" fg:w="30"/><text x="11.9622%" y="783.50"></text></g><g><title>[unknown] (20 samples, 1.05%)</title><rect x="12.2374%" y="757" width="1.0504%" height="15" fill="rgb(245,195,53)" fg:x="233" fg:w="20"/><text x="12.4874%" y="767.50"></text></g><g><title>[unknown] (20 samples, 1.05%)</title><rect x="12.2374%" y="741" width="1.0504%" height="15" fill="rgb(240,92,26)" fg:x="233" fg:w="20"/><text x="12.4874%" y="751.50"></text></g><g><title>[unknown] (20 samples, 1.05%)</title><rect x="12.2374%" y="725" width="1.0504%" height="15" fill="rgb(207,40,23)" fg:x="233" fg:w="20"/><text x="12.4874%" y="735.50"></text></g><g><title>[unknown] (14 samples, 0.74%)</title><rect x="12.5525%" y="709" width="0.7353%" height="15" fill="rgb(223,111,35)" fg:x="239" fg:w="14"/><text x="12.8025%" y="719.50"></text></g><g><title>[unknown] (13 samples, 0.68%)</title><rect x="12.6050%" y="693" width="0.6828%" height="15" fill="rgb(229,147,28)" fg:x="240" fg:w="13"/><text x="12.8550%" y="703.50"></text></g><g><title>[unknown] (11 samples, 0.58%)</title><rect x="12.7101%" y="677" width="0.5777%" height="15" fill="rgb(211,29,28)" fg:x="242" fg:w="11"/><text x="12.9601%" y="687.50"></text></g><g><title>[unknown] (10 samples, 0.53%)</title><rect x="12.7626%" y="661" width="0.5252%" height="15" fill="rgb(228,72,33)" fg:x="243" fg:w="10"/><text x="13.0126%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="13.0252%" y="645" width="0.2626%" height="15" fill="rgb(205,214,31)" fg:x="248" fg:w="5"/><text x="13.2752%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="13.0777%" y="629" width="0.2101%" height="15" fill="rgb(224,111,15)" fg:x="249" fg:w="4"/><text x="13.3277%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="13.0777%" y="613" width="0.2101%" height="15" fill="rgb(253,21,26)" fg:x="249" fg:w="4"/><text x="13.3277%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="13.1828%" y="597" width="0.1050%" height="15" fill="rgb(245,139,43)" fg:x="251" fg:w="2"/><text x="13.4328%" y="607.50"></text></g><g><title>&lt;crossbeam_skiplist::base::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.16%)</title><rect x="13.4454%" y="853" width="0.1576%" height="15" fill="rgb(252,170,7)" fg:x="256" fg:w="3"/><text x="13.6954%" y="863.50"></text></g><g><title>__GI___libc_free (1 samples, 0.05%)</title><rect x="13.5504%" y="837" width="0.0525%" height="15" fill="rgb(231,118,14)" fg:x="258" fg:w="1"/><text x="13.8004%" y="847.50"></text></g><g><title>__GI___libc_free (1 samples, 0.05%)</title><rect x="13.6029%" y="853" width="0.0525%" height="15" fill="rgb(238,83,0)" fg:x="259" fg:w="1"/><text x="13.8529%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (24 samples, 1.26%)</title><rect x="13.6555%" y="853" width="1.2605%" height="15" fill="rgb(221,39,39)" fg:x="260" fg:w="24"/><text x="13.9055%" y="863.50"></text></g><g><title>[unknown] (7 samples, 0.37%)</title><rect x="14.5483%" y="837" width="0.3676%" height="15" fill="rgb(222,119,46)" fg:x="277" fg:w="7"/><text x="14.7983%" y="847.50"></text></g><g><title>[unknown] (7 samples, 0.37%)</title><rect x="14.5483%" y="821" width="0.3676%" height="15" fill="rgb(222,165,49)" fg:x="277" fg:w="7"/><text x="14.7983%" y="831.50"></text></g><g><title>[unknown] (7 samples, 0.37%)</title><rect x="14.5483%" y="805" width="0.3676%" height="15" fill="rgb(219,113,52)" fg:x="277" fg:w="7"/><text x="14.7983%" y="815.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="14.7059%" y="789" width="0.2101%" height="15" fill="rgb(214,7,15)" fg:x="280" fg:w="4"/><text x="14.9559%" y="799.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="14.7059%" y="773" width="0.2101%" height="15" fill="rgb(235,32,4)" fg:x="280" fg:w="4"/><text x="14.9559%" y="783.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="14.7059%" y="757" width="0.2101%" height="15" fill="rgb(238,90,54)" fg:x="280" fg:w="4"/><text x="14.9559%" y="767.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="14.7059%" y="741" width="0.2101%" height="15" fill="rgb(213,208,19)" fg:x="280" fg:w="4"/><text x="14.9559%" y="751.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="14.7059%" y="725" width="0.2101%" height="15" fill="rgb(233,156,4)" fg:x="280" fg:w="4"/><text x="14.9559%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="14.8109%" y="709" width="0.1050%" height="15" fill="rgb(207,194,5)" fg:x="282" fg:w="2"/><text x="15.0609%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="14.8109%" y="693" width="0.1050%" height="15" fill="rgb(206,111,30)" fg:x="282" fg:w="2"/><text x="15.0609%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="14.8634%" y="677" width="0.0525%" height="15" fill="rgb(243,70,54)" fg:x="283" fg:w="1"/><text x="15.1134%" y="687.50"></text></g><g><title>_int_free (4 samples, 0.21%)</title><rect x="14.9160%" y="853" width="0.2101%" height="15" fill="rgb(242,28,8)" fg:x="284" fg:w="4"/><text x="15.1660%" y="863.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.05%)</title><rect x="15.0735%" y="837" width="0.0525%" height="15" fill="rgb(219,106,18)" fg:x="287" fg:w="1"/><text x="15.3235%" y="847.50"></text></g><g><title>std::fs::File::sync_all (13 samples, 0.68%)</title><rect x="15.1261%" y="853" width="0.6828%" height="15" fill="rgb(244,222,10)" fg:x="288" fg:w="13"/><text x="15.3761%" y="863.50"></text></g><g><title>std::sys::unix::fs::File::fsync (13 samples, 0.68%)</title><rect x="15.1261%" y="837" width="0.6828%" height="15" fill="rgb(236,179,52)" fg:x="288" fg:w="13"/><text x="15.3761%" y="847.50"></text></g><g><title>std::sys::unix::cvt_r (13 samples, 0.68%)</title><rect x="15.1261%" y="821" width="0.6828%" height="15" fill="rgb(213,23,39)" fg:x="288" fg:w="13"/><text x="15.3761%" y="831.50"></text></g><g><title>std::sys::unix::fs::File::fsync::{{closure}} (13 samples, 0.68%)</title><rect x="15.1261%" y="805" width="0.6828%" height="15" fill="rgb(238,48,10)" fg:x="288" fg:w="13"/><text x="15.3761%" y="815.50"></text></g><g><title>std::sys::unix::fs::File::fsync::os_fsync (13 samples, 0.68%)</title><rect x="15.1261%" y="789" width="0.6828%" height="15" fill="rgb(251,196,23)" fg:x="288" fg:w="13"/><text x="15.3761%" y="799.50"></text></g><g><title>fsync (13 samples, 0.68%)</title><rect x="15.1261%" y="773" width="0.6828%" height="15" fill="rgb(250,152,24)" fg:x="288" fg:w="13"/><text x="15.3761%" y="783.50"></text></g><g><title>[unknown] (13 samples, 0.68%)</title><rect x="15.1261%" y="757" width="0.6828%" height="15" fill="rgb(209,150,17)" fg:x="288" fg:w="13"/><text x="15.3761%" y="767.50"></text></g><g><title>[unknown] (13 samples, 0.68%)</title><rect x="15.1261%" y="741" width="0.6828%" height="15" fill="rgb(234,202,34)" fg:x="288" fg:w="13"/><text x="15.3761%" y="751.50"></text></g><g><title>[unknown] (13 samples, 0.68%)</title><rect x="15.1261%" y="725" width="0.6828%" height="15" fill="rgb(253,148,53)" fg:x="288" fg:w="13"/><text x="15.3761%" y="735.50"></text></g><g><title>[unknown] (13 samples, 0.68%)</title><rect x="15.1261%" y="709" width="0.6828%" height="15" fill="rgb(218,129,16)" fg:x="288" fg:w="13"/><text x="15.3761%" y="719.50"></text></g><g><title>[unknown] (13 samples, 0.68%)</title><rect x="15.1261%" y="693" width="0.6828%" height="15" fill="rgb(216,85,19)" fg:x="288" fg:w="13"/><text x="15.3761%" y="703.50"></text></g><g><title>[unknown] (13 samples, 0.68%)</title><rect x="15.1261%" y="677" width="0.6828%" height="15" fill="rgb(235,228,7)" fg:x="288" fg:w="13"/><text x="15.3761%" y="687.50"></text></g><g><title>[unknown] (13 samples, 0.68%)</title><rect x="15.1261%" y="661" width="0.6828%" height="15" fill="rgb(245,175,0)" fg:x="288" fg:w="13"/><text x="15.3761%" y="671.50"></text></g><g><title>[unknown] (13 samples, 0.68%)</title><rect x="15.1261%" y="645" width="0.6828%" height="15" fill="rgb(208,168,36)" fg:x="288" fg:w="13"/><text x="15.3761%" y="655.50"></text></g><g><title>[unknown] (13 samples, 0.68%)</title><rect x="15.1261%" y="629" width="0.6828%" height="15" fill="rgb(246,171,24)" fg:x="288" fg:w="13"/><text x="15.3761%" y="639.50"></text></g><g><title>[unknown] (13 samples, 0.68%)</title><rect x="15.1261%" y="613" width="0.6828%" height="15" fill="rgb(215,142,24)" fg:x="288" fg:w="13"/><text x="15.3761%" y="623.50"></text></g><g><title>[unknown] (13 samples, 0.68%)</title><rect x="15.1261%" y="597" width="0.6828%" height="15" fill="rgb(250,187,7)" fg:x="288" fg:w="13"/><text x="15.3761%" y="607.50"></text></g><g><title>[unknown] (11 samples, 0.58%)</title><rect x="15.2311%" y="581" width="0.5777%" height="15" fill="rgb(228,66,33)" fg:x="290" fg:w="11"/><text x="15.4811%" y="591.50"></text></g><g><title>[unknown] (9 samples, 0.47%)</title><rect x="15.3361%" y="565" width="0.4727%" height="15" fill="rgb(234,215,21)" fg:x="292" fg:w="9"/><text x="15.5861%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="15.4937%" y="549" width="0.3151%" height="15" fill="rgb(222,191,20)" fg:x="295" fg:w="6"/><text x="15.7437%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="15.5987%" y="533" width="0.2101%" height="15" fill="rgb(245,79,54)" fg:x="297" fg:w="4"/><text x="15.8487%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="15.5987%" y="517" width="0.2101%" height="15" fill="rgb(240,10,37)" fg:x="297" fg:w="4"/><text x="15.8487%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="15.7038%" y="501" width="0.1050%" height="15" fill="rgb(214,192,32)" fg:x="299" fg:w="2"/><text x="15.9538%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="15.7038%" y="485" width="0.1050%" height="15" fill="rgb(209,36,54)" fg:x="299" fg:w="2"/><text x="15.9538%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="15.7038%" y="469" width="0.1050%" height="15" fill="rgb(220,10,11)" fg:x="299" fg:w="2"/><text x="15.9538%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="15.7038%" y="453" width="0.1050%" height="15" fill="rgb(221,106,17)" fg:x="299" fg:w="2"/><text x="15.9538%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="15.7038%" y="437" width="0.1050%" height="15" fill="rgb(251,142,44)" fg:x="299" fg:w="2"/><text x="15.9538%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="15.7038%" y="421" width="0.1050%" height="15" fill="rgb(238,13,15)" fg:x="299" fg:w="2"/><text x="15.9538%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="15.7038%" y="405" width="0.1050%" height="15" fill="rgb(208,107,27)" fg:x="299" fg:w="2"/><text x="15.9538%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="15.7038%" y="389" width="0.1050%" height="15" fill="rgb(205,136,37)" fg:x="299" fg:w="2"/><text x="15.9538%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="15.7038%" y="373" width="0.1050%" height="15" fill="rgb(250,205,27)" fg:x="299" fg:w="2"/><text x="15.9538%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="15.7038%" y="357" width="0.1050%" height="15" fill="rgb(210,80,43)" fg:x="299" fg:w="2"/><text x="15.9538%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="15.7038%" y="341" width="0.1050%" height="15" fill="rgb(247,160,36)" fg:x="299" fg:w="2"/><text x="15.9538%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="15.7038%" y="325" width="0.1050%" height="15" fill="rgb(234,13,49)" fg:x="299" fg:w="2"/><text x="15.9538%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="15.7563%" y="309" width="0.0525%" height="15" fill="rgb(234,122,0)" fg:x="300" fg:w="1"/><text x="16.0063%" y="319.50"></text></g><g><title>yadb::storage::Tree::write_skipmap_as_sstable::{{closure}} (135 samples, 7.09%)</title><rect x="11.3445%" y="885" width="7.0903%" height="15" fill="rgb(207,146,38)" fg:x="216" fg:w="135"/><text x="11.5945%" y="895.50">yadb::stor..</text></g><g><title>yadb::storage::table::Table::write_table (98 samples, 5.15%)</title><rect x="13.2878%" y="869" width="5.1471%" height="15" fill="rgb(207,177,25)" fg:x="253" fg:w="98"/><text x="13.5378%" y="879.50">yadb::..</text></g><g><title>std::io::Write::write_all (50 samples, 2.63%)</title><rect x="15.8088%" y="853" width="2.6261%" height="15" fill="rgb(211,178,42)" fg:x="301" fg:w="50"/><text x="16.0588%" y="863.50">st..</text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (50 samples, 2.63%)</title><rect x="15.8088%" y="837" width="2.6261%" height="15" fill="rgb(230,69,54)" fg:x="301" fg:w="50"/><text x="16.0588%" y="847.50">st..</text></g><g><title>std::sys::unix::net::Socket::write (50 samples, 2.63%)</title><rect x="15.8088%" y="821" width="2.6261%" height="15" fill="rgb(214,135,41)" fg:x="301" fg:w="50"/><text x="16.0588%" y="831.50">st..</text></g><g><title>std::sys::unix::fd::FileDesc::write (50 samples, 2.63%)</title><rect x="15.8088%" y="805" width="2.6261%" height="15" fill="rgb(237,67,25)" fg:x="301" fg:w="50"/><text x="16.0588%" y="815.50">st..</text></g><g><title>__libc_write (50 samples, 2.63%)</title><rect x="15.8088%" y="789" width="2.6261%" height="15" fill="rgb(222,189,50)" fg:x="301" fg:w="50"/><text x="16.0588%" y="799.50">__..</text></g><g><title>__libc_write (50 samples, 2.63%)</title><rect x="15.8088%" y="773" width="2.6261%" height="15" fill="rgb(245,148,34)" fg:x="301" fg:w="50"/><text x="16.0588%" y="783.50">__..</text></g><g><title>[unknown] (50 samples, 2.63%)</title><rect x="15.8088%" y="757" width="2.6261%" height="15" fill="rgb(222,29,6)" fg:x="301" fg:w="50"/><text x="16.0588%" y="767.50">[u..</text></g><g><title>[unknown] (50 samples, 2.63%)</title><rect x="15.8088%" y="741" width="2.6261%" height="15" fill="rgb(221,189,43)" fg:x="301" fg:w="50"/><text x="16.0588%" y="751.50">[u..</text></g><g><title>[unknown] (50 samples, 2.63%)</title><rect x="15.8088%" y="725" width="2.6261%" height="15" fill="rgb(207,36,27)" fg:x="301" fg:w="50"/><text x="16.0588%" y="735.50">[u..</text></g><g><title>[unknown] (50 samples, 2.63%)</title><rect x="15.8088%" y="709" width="2.6261%" height="15" fill="rgb(217,90,24)" fg:x="301" fg:w="50"/><text x="16.0588%" y="719.50">[u..</text></g><g><title>[unknown] (50 samples, 2.63%)</title><rect x="15.8088%" y="693" width="2.6261%" height="15" fill="rgb(224,66,35)" fg:x="301" fg:w="50"/><text x="16.0588%" y="703.50">[u..</text></g><g><title>[unknown] (50 samples, 2.63%)</title><rect x="15.8088%" y="677" width="2.6261%" height="15" fill="rgb(221,13,50)" fg:x="301" fg:w="50"/><text x="16.0588%" y="687.50">[u..</text></g><g><title>[unknown] (50 samples, 2.63%)</title><rect x="15.8088%" y="661" width="2.6261%" height="15" fill="rgb(236,68,49)" fg:x="301" fg:w="50"/><text x="16.0588%" y="671.50">[u..</text></g><g><title>[unknown] (50 samples, 2.63%)</title><rect x="15.8088%" y="645" width="2.6261%" height="15" fill="rgb(229,146,28)" fg:x="301" fg:w="50"/><text x="16.0588%" y="655.50">[u..</text></g><g><title>[unknown] (50 samples, 2.63%)</title><rect x="15.8088%" y="629" width="2.6261%" height="15" fill="rgb(225,31,38)" fg:x="301" fg:w="50"/><text x="16.0588%" y="639.50">[u..</text></g><g><title>[unknown] (50 samples, 2.63%)</title><rect x="15.8088%" y="613" width="2.6261%" height="15" fill="rgb(250,208,3)" fg:x="301" fg:w="50"/><text x="16.0588%" y="623.50">[u..</text></g><g><title>[unknown] (45 samples, 2.36%)</title><rect x="16.0714%" y="597" width="2.3634%" height="15" fill="rgb(246,54,23)" fg:x="306" fg:w="45"/><text x="16.3214%" y="607.50">[u..</text></g><g><title>[unknown] (40 samples, 2.10%)</title><rect x="16.3340%" y="581" width="2.1008%" height="15" fill="rgb(243,76,11)" fg:x="311" fg:w="40"/><text x="16.5840%" y="591.50">[..</text></g><g><title>[unknown] (39 samples, 2.05%)</title><rect x="16.3866%" y="565" width="2.0483%" height="15" fill="rgb(245,21,50)" fg:x="312" fg:w="39"/><text x="16.6366%" y="575.50">[..</text></g><g><title>[unknown] (34 samples, 1.79%)</title><rect x="16.6492%" y="549" width="1.7857%" height="15" fill="rgb(228,9,43)" fg:x="317" fg:w="34"/><text x="16.8992%" y="559.50">[..</text></g><g><title>[unknown] (27 samples, 1.42%)</title><rect x="17.0168%" y="533" width="1.4181%" height="15" fill="rgb(208,100,47)" fg:x="324" fg:w="27"/><text x="17.2668%" y="543.50"></text></g><g><title>[unknown] (22 samples, 1.16%)</title><rect x="17.2794%" y="517" width="1.1555%" height="15" fill="rgb(232,26,8)" fg:x="329" fg:w="22"/><text x="17.5294%" y="527.50"></text></g><g><title>[unknown] (16 samples, 0.84%)</title><rect x="17.5945%" y="501" width="0.8403%" height="15" fill="rgb(216,166,38)" fg:x="335" fg:w="16"/><text x="17.8445%" y="511.50"></text></g><g><title>[unknown] (7 samples, 0.37%)</title><rect x="18.0672%" y="485" width="0.3676%" height="15" fill="rgb(251,202,51)" fg:x="344" fg:w="7"/><text x="18.3172%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="18.3298%" y="469" width="0.1050%" height="15" fill="rgb(254,216,34)" fg:x="349" fg:w="2"/><text x="18.5798%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="18.3298%" y="453" width="0.1050%" height="15" fill="rgb(251,32,27)" fg:x="349" fg:w="2"/><text x="18.5798%" y="463.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.21%)</title><rect x="18.5399%" y="837" width="0.2101%" height="15" fill="rgb(208,127,28)" fg:x="353" fg:w="4"/><text x="18.7899%" y="847.50"></text></g><g><title>_int_malloc (2 samples, 0.11%)</title><rect x="18.6450%" y="821" width="0.1050%" height="15" fill="rgb(224,137,22)" fg:x="355" fg:w="2"/><text x="18.8950%" y="831.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.05%)</title><rect x="18.6975%" y="805" width="0.0525%" height="15" fill="rgb(254,70,32)" fg:x="356" fg:w="1"/><text x="18.9475%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="18.7500%" y="837" width="0.0525%" height="15" fill="rgb(229,75,37)" fg:x="357" fg:w="1"/><text x="19.0000%" y="847.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.05%)</title><rect x="18.9076%" y="821" width="0.0525%" height="15" fill="rgb(252,64,23)" fg:x="360" fg:w="1"/><text x="19.1576%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.11%)</title><rect x="18.9601%" y="821" width="0.1050%" height="15" fill="rgb(232,162,48)" fg:x="361" fg:w="2"/><text x="19.2101%" y="831.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (157 samples, 8.25%)</title><rect x="10.9244%" y="1221" width="8.2458%" height="15" fill="rgb(246,160,12)" fg:x="208" fg:w="157"/><text x="11.1744%" y="1231.50">test::run_t..</text></g><g><title>test::run_test_in_process (157 samples, 8.25%)</title><rect x="10.9244%" y="1205" width="8.2458%" height="15" fill="rgb(247,166,0)" fg:x="208" fg:w="157"/><text x="11.1744%" y="1215.50">test::run_t..</text></g><g><title>std::panic::catch_unwind (157 samples, 8.25%)</title><rect x="10.9244%" y="1189" width="8.2458%" height="15" fill="rgb(249,219,21)" fg:x="208" fg:w="157"/><text x="11.1744%" y="1199.50">std::panic:..</text></g><g><title>std::panicking::try (157 samples, 8.25%)</title><rect x="10.9244%" y="1173" width="8.2458%" height="15" fill="rgb(205,209,3)" fg:x="208" fg:w="157"/><text x="11.1744%" y="1183.50">std::panick..</text></g><g><title>std::panicking::try::do_call (157 samples, 8.25%)</title><rect x="10.9244%" y="1157" width="8.2458%" height="15" fill="rgb(243,44,1)" fg:x="208" fg:w="157"/><text x="11.1744%" y="1167.50">std::panick..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (157 samples, 8.25%)</title><rect x="10.9244%" y="1141" width="8.2458%" height="15" fill="rgb(206,159,16)" fg:x="208" fg:w="157"/><text x="11.1744%" y="1151.50">&lt;core::pani..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (157 samples, 8.25%)</title><rect x="10.9244%" y="1125" width="8.2458%" height="15" fill="rgb(244,77,30)" fg:x="208" fg:w="157"/><text x="11.1744%" y="1135.50">&lt;alloc::box..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (157 samples, 8.25%)</title><rect x="10.9244%" y="1109" width="8.2458%" height="15" fill="rgb(218,69,12)" fg:x="208" fg:w="157"/><text x="11.1744%" y="1119.50">core::ops::..</text></g><g><title>test::run_test::{{closure}} (157 samples, 8.25%)</title><rect x="10.9244%" y="1093" width="8.2458%" height="15" fill="rgb(212,87,7)" fg:x="208" fg:w="157"/><text x="11.1744%" y="1103.50">test::run_t..</text></g><g><title>test::__rust_begin_short_backtrace (157 samples, 8.25%)</title><rect x="10.9244%" y="1077" width="8.2458%" height="15" fill="rgb(245,114,25)" fg:x="208" fg:w="157"/><text x="11.1744%" y="1087.50">test::__rus..</text></g><g><title>core::ops::function::FnOnce::call_once (157 samples, 8.25%)</title><rect x="10.9244%" y="1061" width="8.2458%" height="15" fill="rgb(210,61,42)" fg:x="208" fg:w="157"/><text x="11.1744%" y="1071.50">core::ops::..</text></g><g><title>core::ops::function::FnOnce::call_once (157 samples, 8.25%)</title><rect x="10.9244%" y="1045" width="8.2458%" height="15" fill="rgb(211,52,33)" fg:x="208" fg:w="157"/><text x="11.1744%" y="1055.50">core::ops::..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (157 samples, 8.25%)</title><rect x="10.9244%" y="1029" width="8.2458%" height="15" fill="rgb(234,58,33)" fg:x="208" fg:w="157"/><text x="11.1744%" y="1039.50">tokio::runt..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (157 samples, 8.25%)</title><rect x="10.9244%" y="1013" width="8.2458%" height="15" fill="rgb(220,115,36)" fg:x="208" fg:w="157"/><text x="11.1744%" y="1023.50">tokio::runt..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (157 samples, 8.25%)</title><rect x="10.9244%" y="997" width="8.2458%" height="15" fill="rgb(243,153,54)" fg:x="208" fg:w="157"/><text x="11.1744%" y="1007.50">tokio::runt..</text></g><g><title>tokio::runtime::context::set_scheduler (157 samples, 8.25%)</title><rect x="10.9244%" y="981" width="8.2458%" height="15" fill="rgb(251,47,18)" fg:x="208" fg:w="157"/><text x="11.1744%" y="991.50">tokio::runt..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (157 samples, 8.25%)</title><rect x="10.9244%" y="965" width="8.2458%" height="15" fill="rgb(242,102,42)" fg:x="208" fg:w="157"/><text x="11.1744%" y="975.50">tokio::runt..</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (149 samples, 7.83%)</title><rect x="11.3445%" y="949" width="7.8256%" height="15" fill="rgb(234,31,38)" fg:x="216" fg:w="149"/><text x="11.5945%" y="959.50">tokio::runt..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (149 samples, 7.83%)</title><rect x="11.3445%" y="933" width="7.8256%" height="15" fill="rgb(221,117,51)" fg:x="216" fg:w="149"/><text x="11.5945%" y="943.50">tokio::runt..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (149 samples, 7.83%)</title><rect x="11.3445%" y="917" width="7.8256%" height="15" fill="rgb(212,20,18)" fg:x="216" fg:w="149"/><text x="11.5945%" y="927.50">tokio::runt..</text></g><g><title>yadb::storage::Tree::start_write::_{{closure}} (149 samples, 7.83%)</title><rect x="11.3445%" y="901" width="7.8256%" height="15" fill="rgb(245,133,36)" fg:x="216" fg:w="149"/><text x="11.5945%" y="911.50">yadb::stora..</text></g><g><title>yadb::storage::memtable::Memtable::insert_or_delete (14 samples, 0.74%)</title><rect x="18.4349%" y="885" width="0.7353%" height="15" fill="rgb(212,6,19)" fg:x="351" fg:w="14"/><text x="18.6849%" y="895.50"></text></g><g><title>crossbeam_skiplist::map::SkipMap&lt;K,V&gt;::insert (14 samples, 0.74%)</title><rect x="18.4349%" y="869" width="0.7353%" height="15" fill="rgb(218,1,36)" fg:x="351" fg:w="14"/><text x="18.6849%" y="879.50"></text></g><g><title>crossbeam_skiplist::base::SkipList&lt;K,V&gt;::insert_internal (14 samples, 0.74%)</title><rect x="18.4349%" y="853" width="0.7353%" height="15" fill="rgb(246,84,54)" fg:x="351" fg:w="14"/><text x="18.6849%" y="863.50"></text></g><g><title>crossbeam_skiplist::base::SkipList&lt;K,V&gt;::search_position (7 samples, 0.37%)</title><rect x="18.8025%" y="837" width="0.3676%" height="15" fill="rgb(242,110,6)" fg:x="358" fg:w="7"/><text x="19.0525%" y="847.50"></text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.11%)</title><rect x="19.0651%" y="821" width="0.1050%" height="15" fill="rgb(214,47,5)" fg:x="363" fg:w="2"/><text x="19.3151%" y="831.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.05%)</title><rect x="19.1702%" y="1221" width="0.0525%" height="15" fill="rgb(218,159,25)" fg:x="365" fg:w="1"/><text x="19.4202%" y="1231.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.05%)</title><rect x="19.1702%" y="1205" width="0.0525%" height="15" fill="rgb(215,211,28)" fg:x="365" fg:w="1"/><text x="19.4202%" y="1215.50"></text></g><g><title>yadb::storage::Tree::start_write::_{{closure}} (1 samples, 0.05%)</title><rect x="19.1702%" y="1189" width="0.0525%" height="15" fill="rgb(238,59,32)" fg:x="365" fg:w="1"/><text x="19.4202%" y="1199.50"></text></g><g><title>yadb::storage::memtable::Memtable::insert_or_delete (1 samples, 0.05%)</title><rect x="19.1702%" y="1173" width="0.0525%" height="15" fill="rgb(226,82,3)" fg:x="365" fg:w="1"/><text x="19.4202%" y="1183.50"></text></g><g><title>crossbeam_skiplist::map::SkipMap&lt;K,V&gt;::contains_key (1 samples, 0.05%)</title><rect x="19.1702%" y="1157" width="0.0525%" height="15" fill="rgb(240,164,32)" fg:x="365" fg:w="1"/><text x="19.4202%" y="1167.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.05%)</title><rect x="19.1702%" y="1141" width="0.0525%" height="15" fill="rgb(232,46,7)" fg:x="365" fg:w="1"/><text x="19.4202%" y="1151.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (1 samples, 0.05%)</title><rect x="19.1702%" y="1125" width="0.0525%" height="15" fill="rgb(229,129,53)" fg:x="365" fg:w="1"/><text x="19.4202%" y="1135.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (1 samples, 0.05%)</title><rect x="19.1702%" y="1109" width="0.0525%" height="15" fill="rgb(234,188,29)" fg:x="365" fg:w="1"/><text x="19.4202%" y="1119.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="19.2227%" y="1157" width="0.0525%" height="15" fill="rgb(246,141,4)" fg:x="366" fg:w="1"/><text x="19.4727%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.2227%" y="1141" width="0.0525%" height="15" fill="rgb(229,23,39)" fg:x="366" fg:w="1"/><text x="19.4727%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.2227%" y="1125" width="0.0525%" height="15" fill="rgb(206,12,3)" fg:x="366" fg:w="1"/><text x="19.4727%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.2227%" y="1109" width="0.0525%" height="15" fill="rgb(252,226,20)" fg:x="366" fg:w="1"/><text x="19.4727%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.2227%" y="1093" width="0.0525%" height="15" fill="rgb(216,123,35)" fg:x="366" fg:w="1"/><text x="19.4727%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.2227%" y="1077" width="0.0525%" height="15" fill="rgb(212,68,40)" fg:x="366" fg:w="1"/><text x="19.4727%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.2227%" y="1061" width="0.0525%" height="15" fill="rgb(254,125,32)" fg:x="366" fg:w="1"/><text x="19.4727%" y="1071.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="19.4853%" y="1077" width="0.0525%" height="15" fill="rgb(253,97,22)" fg:x="371" fg:w="1"/><text x="19.7353%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.6429%" y="1061" width="0.0525%" height="15" fill="rgb(241,101,14)" fg:x="374" fg:w="1"/><text x="19.8929%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.6429%" y="1045" width="0.0525%" height="15" fill="rgb(238,103,29)" fg:x="374" fg:w="1"/><text x="19.8929%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.6429%" y="1029" width="0.0525%" height="15" fill="rgb(233,195,47)" fg:x="374" fg:w="1"/><text x="19.8929%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.6429%" y="1013" width="0.0525%" height="15" fill="rgb(246,218,30)" fg:x="374" fg:w="1"/><text x="19.8929%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.6429%" y="997" width="0.0525%" height="15" fill="rgb(219,145,47)" fg:x="374" fg:w="1"/><text x="19.8929%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.6429%" y="981" width="0.0525%" height="15" fill="rgb(243,12,26)" fg:x="374" fg:w="1"/><text x="19.8929%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.6429%" y="965" width="0.0525%" height="15" fill="rgb(214,87,16)" fg:x="374" fg:w="1"/><text x="19.8929%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.6429%" y="949" width="0.0525%" height="15" fill="rgb(208,99,42)" fg:x="374" fg:w="1"/><text x="19.8929%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.6429%" y="933" width="0.0525%" height="15" fill="rgb(253,99,2)" fg:x="374" fg:w="1"/><text x="19.8929%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.6429%" y="917" width="0.0525%" height="15" fill="rgb(220,168,23)" fg:x="374" fg:w="1"/><text x="19.8929%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.6429%" y="901" width="0.0525%" height="15" fill="rgb(242,38,24)" fg:x="374" fg:w="1"/><text x="19.8929%" y="911.50"></text></g><g><title>malloc_consolidate (4 samples, 0.21%)</title><rect x="19.6954%" y="1061" width="0.2101%" height="15" fill="rgb(225,182,9)" fg:x="375" fg:w="4"/><text x="19.9454%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.8529%" y="1045" width="0.0525%" height="15" fill="rgb(243,178,37)" fg:x="378" fg:w="1"/><text x="20.1029%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.8529%" y="1029" width="0.0525%" height="15" fill="rgb(232,139,19)" fg:x="378" fg:w="1"/><text x="20.1029%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.8529%" y="1013" width="0.0525%" height="15" fill="rgb(225,201,24)" fg:x="378" fg:w="1"/><text x="20.1029%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.8529%" y="997" width="0.0525%" height="15" fill="rgb(221,47,46)" fg:x="378" fg:w="1"/><text x="20.1029%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.8529%" y="981" width="0.0525%" height="15" fill="rgb(249,23,13)" fg:x="378" fg:w="1"/><text x="20.1029%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="19.8529%" y="965" width="0.0525%" height="15" fill="rgb(219,9,5)" fg:x="378" fg:w="1"/><text x="20.1029%" y="975.50"></text></g><g><title>[unknown] (36 samples, 1.89%)</title><rect x="20.2206%" y="1045" width="1.8908%" height="15" fill="rgb(254,171,16)" fg:x="385" fg:w="36"/><text x="20.4706%" y="1055.50">[..</text></g><g><title>[unknown] (36 samples, 1.89%)</title><rect x="20.2206%" y="1029" width="1.8908%" height="15" fill="rgb(230,171,20)" fg:x="385" fg:w="36"/><text x="20.4706%" y="1039.50">[..</text></g><g><title>[unknown] (36 samples, 1.89%)</title><rect x="20.2206%" y="1013" width="1.8908%" height="15" fill="rgb(210,71,41)" fg:x="385" fg:w="36"/><text x="20.4706%" y="1023.50">[..</text></g><g><title>[unknown] (30 samples, 1.58%)</title><rect x="20.5357%" y="997" width="1.5756%" height="15" fill="rgb(206,173,20)" fg:x="391" fg:w="30"/><text x="20.7857%" y="1007.50"></text></g><g><title>[unknown] (29 samples, 1.52%)</title><rect x="20.5882%" y="981" width="1.5231%" height="15" fill="rgb(233,88,34)" fg:x="392" fg:w="29"/><text x="20.8382%" y="991.50"></text></g><g><title>[unknown] (28 samples, 1.47%)</title><rect x="20.6408%" y="965" width="1.4706%" height="15" fill="rgb(223,209,46)" fg:x="393" fg:w="28"/><text x="20.8908%" y="975.50"></text></g><g><title>[unknown] (27 samples, 1.42%)</title><rect x="20.6933%" y="949" width="1.4181%" height="15" fill="rgb(250,43,18)" fg:x="394" fg:w="27"/><text x="20.9433%" y="959.50"></text></g><g><title>[unknown] (25 samples, 1.31%)</title><rect x="20.7983%" y="933" width="1.3130%" height="15" fill="rgb(208,13,10)" fg:x="396" fg:w="25"/><text x="21.0483%" y="943.50"></text></g><g><title>[unknown] (24 samples, 1.26%)</title><rect x="20.8508%" y="917" width="1.2605%" height="15" fill="rgb(212,200,36)" fg:x="397" fg:w="24"/><text x="21.1008%" y="927.50"></text></g><g><title>[unknown] (20 samples, 1.05%)</title><rect x="21.0609%" y="901" width="1.0504%" height="15" fill="rgb(225,90,30)" fg:x="401" fg:w="20"/><text x="21.3109%" y="911.50"></text></g><g><title>[unknown] (14 samples, 0.74%)</title><rect x="21.3761%" y="885" width="0.7353%" height="15" fill="rgb(236,182,39)" fg:x="407" fg:w="14"/><text x="21.6261%" y="895.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (74 samples, 3.89%)</title><rect x="19.2227%" y="1173" width="3.8866%" height="15" fill="rgb(212,144,35)" fg:x="366" fg:w="74"/><text x="19.4727%" y="1183.50">toki..</text></g><g><title>__rdl_alloc (73 samples, 3.83%)</title><rect x="19.2752%" y="1157" width="3.8340%" height="15" fill="rgb(228,63,44)" fg:x="367" fg:w="73"/><text x="19.5252%" y="1167.50">__rd..</text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (71 samples, 3.73%)</title><rect x="19.3803%" y="1141" width="3.7290%" height="15" fill="rgb(228,109,6)" fg:x="369" fg:w="71"/><text x="19.6303%" y="1151.50">std:..</text></g><g><title>std::sys::unix::alloc::aligned_malloc (71 samples, 3.73%)</title><rect x="19.3803%" y="1125" width="3.7290%" height="15" fill="rgb(238,117,24)" fg:x="369" fg:w="71"/><text x="19.6303%" y="1135.50">std:..</text></g><g><title>__posix_memalign (71 samples, 3.73%)</title><rect x="19.3803%" y="1109" width="3.7290%" height="15" fill="rgb(242,26,26)" fg:x="369" fg:w="71"/><text x="19.6303%" y="1119.50">__po..</text></g><g><title>_int_memalign (71 samples, 3.73%)</title><rect x="19.3803%" y="1093" width="3.7290%" height="15" fill="rgb(221,92,48)" fg:x="369" fg:w="71"/><text x="19.6303%" y="1103.50">_int..</text></g><g><title>_int_malloc (68 samples, 3.57%)</title><rect x="19.5378%" y="1077" width="3.5714%" height="15" fill="rgb(209,209,32)" fg:x="372" fg:w="68"/><text x="19.7878%" y="1087.50">_int..</text></g><g><title>sysmalloc (61 samples, 3.20%)</title><rect x="19.9055%" y="1061" width="3.2038%" height="15" fill="rgb(221,70,22)" fg:x="379" fg:w="61"/><text x="20.1555%" y="1071.50">sys..</text></g><g><title>__GI___mprotect (19 samples, 1.00%)</title><rect x="22.1113%" y="1045" width="0.9979%" height="15" fill="rgb(248,145,5)" fg:x="421" fg:w="19"/><text x="22.3613%" y="1055.50"></text></g><g><title>[unknown] (15 samples, 0.79%)</title><rect x="22.3214%" y="1029" width="0.7878%" height="15" fill="rgb(226,116,26)" fg:x="425" fg:w="15"/><text x="22.5714%" y="1039.50"></text></g><g><title>[unknown] (15 samples, 0.79%)</title><rect x="22.3214%" y="1013" width="0.7878%" height="15" fill="rgb(244,5,17)" fg:x="425" fg:w="15"/><text x="22.5714%" y="1023.50"></text></g><g><title>[unknown] (15 samples, 0.79%)</title><rect x="22.3214%" y="997" width="0.7878%" height="15" fill="rgb(252,159,33)" fg:x="425" fg:w="15"/><text x="22.5714%" y="1007.50"></text></g><g><title>[unknown] (14 samples, 0.74%)</title><rect x="22.3739%" y="981" width="0.7353%" height="15" fill="rgb(206,71,0)" fg:x="426" fg:w="14"/><text x="22.6239%" y="991.50"></text></g><g><title>[unknown] (11 samples, 0.58%)</title><rect x="22.5315%" y="965" width="0.5777%" height="15" fill="rgb(233,118,54)" fg:x="429" fg:w="11"/><text x="22.7815%" y="975.50"></text></g><g><title>[unknown] (10 samples, 0.53%)</title><rect x="22.5840%" y="949" width="0.5252%" height="15" fill="rgb(234,83,48)" fg:x="430" fg:w="10"/><text x="22.8340%" y="959.50"></text></g><g><title>[unknown] (10 samples, 0.53%)</title><rect x="22.5840%" y="933" width="0.5252%" height="15" fill="rgb(228,3,54)" fg:x="430" fg:w="10"/><text x="22.8340%" y="943.50"></text></g><g><title>[unknown] (8 samples, 0.42%)</title><rect x="22.6891%" y="917" width="0.4202%" height="15" fill="rgb(226,155,13)" fg:x="432" fg:w="8"/><text x="22.9391%" y="927.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="22.7941%" y="901" width="0.3151%" height="15" fill="rgb(241,28,37)" fg:x="434" fg:w="6"/><text x="23.0441%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="22.7941%" y="885" width="0.3151%" height="15" fill="rgb(233,93,10)" fg:x="434" fg:w="6"/><text x="23.0441%" y="895.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="22.8992%" y="869" width="0.2101%" height="15" fill="rgb(225,113,19)" fg:x="436" fg:w="4"/><text x="23.1492%" y="879.50"></text></g><g><title>tokio::task::spawn::spawn (77 samples, 4.04%)</title><rect x="19.2227%" y="1221" width="4.0441%" height="15" fill="rgb(241,2,18)" fg:x="366" fg:w="77"/><text x="19.4727%" y="1231.50">toki..</text></g><g><title>tokio::runtime::context::current::with_current (77 samples, 4.04%)</title><rect x="19.2227%" y="1205" width="4.0441%" height="15" fill="rgb(228,207,21)" fg:x="366" fg:w="77"/><text x="19.4727%" y="1215.50">toki..</text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (77 samples, 4.04%)</title><rect x="19.2227%" y="1189" width="4.0441%" height="15" fill="rgb(213,211,35)" fg:x="366" fg:w="77"/><text x="19.4727%" y="1199.50">toki..</text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (3 samples, 0.16%)</title><rect x="23.1092%" y="1173" width="0.1576%" height="15" fill="rgb(209,83,10)" fg:x="440" fg:w="3"/><text x="23.3592%" y="1183.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (2 samples, 0.11%)</title><rect x="23.1618%" y="1157" width="0.1050%" height="15" fill="rgb(209,164,1)" fg:x="441" fg:w="2"/><text x="23.4118%" y="1167.50"></text></g><g><title>tokio::runtime::task::core::Header::get_trailer (1 samples, 0.05%)</title><rect x="23.2143%" y="1141" width="0.0525%" height="15" fill="rgb(213,184,43)" fg:x="442" fg:w="1"/><text x="23.4643%" y="1151.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.63%)</title><rect x="23.3193%" y="1173" width="0.6303%" height="15" fill="rgb(231,61,34)" fg:x="444" fg:w="12"/><text x="23.5693%" y="1183.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (1 samples, 0.05%)</title><rect x="23.9496%" y="1173" width="0.0525%" height="15" fill="rgb(235,75,3)" fg:x="456" fg:w="1"/><text x="24.1996%" y="1183.50"></text></g><g><title>tokio::runtime::context::with_scheduler (1 samples, 0.05%)</title><rect x="24.0021%" y="1173" width="0.0525%" height="15" fill="rgb(220,106,47)" fg:x="457" fg:w="1"/><text x="24.2521%" y="1183.50"></text></g><g><title>[unknown] (459 samples, 24.11%)</title><rect x="0.0000%" y="1237" width="24.1071%" height="15" fill="rgb(210,196,33)" fg:x="0" fg:w="459"/><text x="0.2500%" y="1247.50">[unknown]</text></g><g><title>yadb::storage::Tree::put (16 samples, 0.84%)</title><rect x="23.2668%" y="1221" width="0.8403%" height="15" fill="rgb(229,154,42)" fg:x="443" fg:w="16"/><text x="23.5168%" y="1231.50"></text></g><g><title>tokio::task::spawn::spawn (16 samples, 0.84%)</title><rect x="23.2668%" y="1205" width="0.8403%" height="15" fill="rgb(228,114,26)" fg:x="443" fg:w="16"/><text x="23.5168%" y="1215.50"></text></g><g><title>tokio::runtime::context::current::with_current (16 samples, 0.84%)</title><rect x="23.2668%" y="1189" width="0.8403%" height="15" fill="rgb(208,144,1)" fg:x="443" fg:w="16"/><text x="23.5168%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule (1 samples, 0.05%)</title><rect x="24.0546%" y="1173" width="0.0525%" height="15" fill="rgb(239,112,37)" fg:x="458" fg:w="1"/><text x="24.3046%" y="1183.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.21%)</title><rect x="25.3676%" y="629" width="0.2101%" height="15" fill="rgb(210,96,50)" fg:x="483" fg:w="4"/><text x="25.6176%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (7 samples, 0.37%)</title><rect x="25.3676%" y="645" width="0.3676%" height="15" fill="rgb(222,178,2)" fg:x="483" fg:w="7"/><text x="25.6176%" y="655.50"></text></g><g><title>tokio::runtime::task::harness::can_read_output (3 samples, 0.16%)</title><rect x="25.5777%" y="629" width="0.1576%" height="15" fill="rgb(226,74,18)" fg:x="487" fg:w="3"/><text x="25.8277%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::set_join_waker (3 samples, 0.16%)</title><rect x="25.5777%" y="613" width="0.1576%" height="15" fill="rgb(225,67,54)" fg:x="487" fg:w="3"/><text x="25.8277%" y="623.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.63%)</title><rect x="25.3151%" y="661" width="0.6303%" height="15" fill="rgb(251,92,32)" fg:x="482" fg:w="12"/><text x="25.5651%" y="671.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::try_read_output (4 samples, 0.21%)</title><rect x="25.7353%" y="645" width="0.2101%" height="15" fill="rgb(228,149,22)" fg:x="490" fg:w="4"/><text x="25.9853%" y="655.50"></text></g><g><title>std::panicking::try (2 samples, 0.11%)</title><rect x="25.9454%" y="645" width="0.1050%" height="15" fill="rgb(243,54,13)" fg:x="494" fg:w="2"/><text x="26.1954%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.11%)</title><rect x="25.9454%" y="629" width="0.1050%" height="15" fill="rgb(243,180,28)" fg:x="494" fg:w="2"/><text x="26.1954%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (5 samples, 0.26%)</title><rect x="25.9454%" y="661" width="0.2626%" height="15" fill="rgb(208,167,24)" fg:x="494" fg:w="5"/><text x="26.1954%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (3 samples, 0.16%)</title><rect x="26.0504%" y="645" width="0.1576%" height="15" fill="rgb(245,73,45)" fg:x="496" fg:w="3"/><text x="26.3004%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;yadb::storage::Tree::start_write::{{closure}}&gt;&gt; (2 samples, 0.11%)</title><rect x="26.1029%" y="629" width="0.1050%" height="15" fill="rgb(237,203,48)" fg:x="497" fg:w="2"/><text x="26.3529%" y="639.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (21 samples, 1.10%)</title><rect x="25.1576%" y="693" width="1.1029%" height="15" fill="rgb(211,197,16)" fg:x="479" fg:w="21"/><text x="25.4076%" y="703.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (20 samples, 1.05%)</title><rect x="25.2101%" y="677" width="1.0504%" height="15" fill="rgb(243,99,51)" fg:x="480" fg:w="20"/><text x="25.4601%" y="687.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (1 samples, 0.05%)</title><rect x="26.2080%" y="661" width="0.0525%" height="15" fill="rgb(215,123,29)" fg:x="499" fg:w="1"/><text x="26.4580%" y="671.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="26.3130%" y="677" width="0.1050%" height="15" fill="rgb(239,186,37)" fg:x="501" fg:w="2"/><text x="26.5630%" y="687.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (41 samples, 2.15%)</title><rect x="24.3697%" y="709" width="2.1534%" height="15" fill="rgb(252,136,39)" fg:x="464" fg:w="41"/><text x="24.6197%" y="719.50">&lt;..</text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (5 samples, 0.26%)</title><rect x="26.2605%" y="693" width="0.2626%" height="15" fill="rgb(223,213,32)" fg:x="500" fg:w="5"/><text x="26.5105%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.11%)</title><rect x="26.4181%" y="677" width="0.1050%" height="15" fill="rgb(233,115,5)" fg:x="503" fg:w="2"/><text x="26.6681%" y="687.50"></text></g><g><title>&lt;tempfile::dir::TempDir as core::ops::drop::Drop&gt;::drop (3 samples, 0.16%)</title><rect x="26.5231%" y="709" width="0.1576%" height="15" fill="rgb(207,226,44)" fg:x="505" fg:w="3"/><text x="26.7731%" y="719.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all (3 samples, 0.16%)</title><rect x="26.5231%" y="693" width="0.1576%" height="15" fill="rgb(208,126,0)" fg:x="505" fg:w="3"/><text x="26.7731%" y="703.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all_modern (3 samples, 0.16%)</title><rect x="26.5231%" y="677" width="0.1576%" height="15" fill="rgb(244,66,21)" fg:x="505" fg:w="3"/><text x="26.7731%" y="687.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (3 samples, 0.16%)</title><rect x="26.5231%" y="661" width="0.1576%" height="15" fill="rgb(222,97,12)" fg:x="505" fg:w="3"/><text x="26.7731%" y="671.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (3 samples, 0.16%)</title><rect x="26.5231%" y="645" width="0.1576%" height="15" fill="rgb(219,213,19)" fg:x="505" fg:w="3"/><text x="26.7731%" y="655.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all_modern::{{closure}} (3 samples, 0.16%)</title><rect x="26.5231%" y="629" width="0.1576%" height="15" fill="rgb(252,169,30)" fg:x="505" fg:w="3"/><text x="26.7731%" y="639.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all_recursive (3 samples, 0.16%)</title><rect x="26.5231%" y="613" width="0.1576%" height="15" fill="rgb(206,32,51)" fg:x="505" fg:w="3"/><text x="26.7731%" y="623.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all_recursive (3 samples, 0.16%)</title><rect x="26.5231%" y="597" width="0.1576%" height="15" fill="rgb(250,172,42)" fg:x="505" fg:w="3"/><text x="26.7731%" y="607.50"></text></g><g><title>__GI_unlinkat (3 samples, 0.16%)</title><rect x="26.5231%" y="581" width="0.1576%" height="15" fill="rgb(209,34,43)" fg:x="505" fg:w="3"/><text x="26.7731%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="26.5231%" y="565" width="0.1576%" height="15" fill="rgb(223,11,35)" fg:x="505" fg:w="3"/><text x="26.7731%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="26.5231%" y="549" width="0.1576%" height="15" fill="rgb(251,219,26)" fg:x="505" fg:w="3"/><text x="26.7731%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="26.5231%" y="533" width="0.1576%" height="15" fill="rgb(231,119,3)" fg:x="505" fg:w="3"/><text x="26.7731%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="26.5231%" y="517" width="0.1576%" height="15" fill="rgb(216,97,11)" fg:x="505" fg:w="3"/><text x="26.7731%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="26.5231%" y="501" width="0.1576%" height="15" fill="rgb(223,59,9)" fg:x="505" fg:w="3"/><text x="26.7731%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="26.5231%" y="485" width="0.1576%" height="15" fill="rgb(233,93,31)" fg:x="505" fg:w="3"/><text x="26.7731%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="26.5231%" y="469" width="0.1576%" height="15" fill="rgb(239,81,33)" fg:x="505" fg:w="3"/><text x="26.7731%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="26.5231%" y="453" width="0.1576%" height="15" fill="rgb(213,120,34)" fg:x="505" fg:w="3"/><text x="26.7731%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="26.5231%" y="437" width="0.1576%" height="15" fill="rgb(243,49,53)" fg:x="505" fg:w="3"/><text x="26.7731%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="26.5756%" y="421" width="0.1050%" height="15" fill="rgb(247,216,33)" fg:x="506" fg:w="2"/><text x="26.8256%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="26.5756%" y="405" width="0.1050%" height="15" fill="rgb(226,26,14)" fg:x="506" fg:w="2"/><text x="26.8256%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="26.5756%" y="389" width="0.1050%" height="15" fill="rgb(215,49,53)" fg:x="506" fg:w="2"/><text x="26.8256%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="26.5756%" y="373" width="0.1050%" height="15" fill="rgb(245,162,40)" fg:x="506" fg:w="2"/><text x="26.8256%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="26.5756%" y="357" width="0.1050%" height="15" fill="rgb(229,68,17)" fg:x="506" fg:w="2"/><text x="26.8256%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="26.5756%" y="341" width="0.1050%" height="15" fill="rgb(213,182,10)" fg:x="506" fg:w="2"/><text x="26.8256%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="26.5756%" y="325" width="0.1050%" height="15" fill="rgb(245,125,30)" fg:x="506" fg:w="2"/><text x="26.8256%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="26.5756%" y="309" width="0.1050%" height="15" fill="rgb(232,202,2)" fg:x="506" fg:w="2"/><text x="26.8256%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="26.6282%" y="293" width="0.0525%" height="15" fill="rgb(237,140,51)" fg:x="507" fg:w="1"/><text x="26.8782%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="26.6282%" y="277" width="0.0525%" height="15" fill="rgb(236,157,25)" fg:x="507" fg:w="1"/><text x="26.8782%" y="287.50"></text></g><g><title>__GI___libc_free (1 samples, 0.05%)</title><rect x="26.6807%" y="709" width="0.0525%" height="15" fill="rgb(219,209,0)" fg:x="508" fg:w="1"/><text x="26.9307%" y="719.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.32%)</title><rect x="26.8908%" y="693" width="0.3151%" height="15" fill="rgb(240,116,54)" fg:x="512" fg:w="6"/><text x="27.1408%" y="703.50"></text></g><g><title>_int_malloc (3 samples, 0.16%)</title><rect x="27.0483%" y="677" width="0.1576%" height="15" fill="rgb(216,10,36)" fg:x="515" fg:w="3"/><text x="27.2983%" y="687.50"></text></g><g><title>[unknown] (8 samples, 0.42%)</title><rect x="27.3634%" y="645" width="0.4202%" height="15" fill="rgb(222,72,44)" fg:x="521" fg:w="8"/><text x="27.6134%" y="655.50"></text></g><g><title>[unknown] (8 samples, 0.42%)</title><rect x="27.3634%" y="629" width="0.4202%" height="15" fill="rgb(232,159,9)" fg:x="521" fg:w="8"/><text x="27.6134%" y="639.50"></text></g><g><title>[unknown] (8 samples, 0.42%)</title><rect x="27.3634%" y="613" width="0.4202%" height="15" fill="rgb(210,39,32)" fg:x="521" fg:w="8"/><text x="27.6134%" y="623.50"></text></g><g><title>[unknown] (7 samples, 0.37%)</title><rect x="27.4160%" y="597" width="0.3676%" height="15" fill="rgb(216,194,45)" fg:x="522" fg:w="7"/><text x="27.6660%" y="607.50"></text></g><g><title>[unknown] (7 samples, 0.37%)</title><rect x="27.4160%" y="581" width="0.3676%" height="15" fill="rgb(218,18,35)" fg:x="522" fg:w="7"/><text x="27.6660%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="27.5210%" y="565" width="0.2626%" height="15" fill="rgb(207,83,51)" fg:x="524" fg:w="5"/><text x="27.7710%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="27.5210%" y="549" width="0.2626%" height="15" fill="rgb(225,63,43)" fg:x="524" fg:w="5"/><text x="27.7710%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="27.5735%" y="533" width="0.2101%" height="15" fill="rgb(207,57,36)" fg:x="525" fg:w="4"/><text x="27.8235%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="27.6261%" y="517" width="0.1576%" height="15" fill="rgb(216,99,33)" fg:x="526" fg:w="3"/><text x="27.8761%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="27.6786%" y="501" width="0.1050%" height="15" fill="rgb(225,42,16)" fg:x="527" fg:w="2"/><text x="27.9286%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="27.6786%" y="485" width="0.1050%" height="15" fill="rgb(220,201,45)" fg:x="527" fg:w="2"/><text x="27.9286%" y="495.50"></text></g><g><title>sysmalloc (18 samples, 0.95%)</title><rect x="27.3634%" y="661" width="0.9454%" height="15" fill="rgb(225,33,4)" fg:x="521" fg:w="18"/><text x="27.6134%" y="671.50"></text></g><g><title>__GI___mprotect (10 samples, 0.53%)</title><rect x="27.7836%" y="645" width="0.5252%" height="15" fill="rgb(224,33,50)" fg:x="529" fg:w="10"/><text x="28.0336%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="28.0987%" y="629" width="0.2101%" height="15" fill="rgb(246,198,51)" fg:x="535" fg:w="4"/><text x="28.3487%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="28.0987%" y="613" width="0.2101%" height="15" fill="rgb(205,22,4)" fg:x="535" fg:w="4"/><text x="28.3487%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="28.0987%" y="597" width="0.2101%" height="15" fill="rgb(206,3,8)" fg:x="535" fg:w="4"/><text x="28.3487%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="28.0987%" y="581" width="0.2101%" height="15" fill="rgb(251,23,15)" fg:x="535" fg:w="4"/><text x="28.3487%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="28.0987%" y="565" width="0.2101%" height="15" fill="rgb(252,88,28)" fg:x="535" fg:w="4"/><text x="28.3487%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="28.0987%" y="549" width="0.2101%" height="15" fill="rgb(212,127,14)" fg:x="535" fg:w="4"/><text x="28.3487%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="28.1513%" y="533" width="0.1576%" height="15" fill="rgb(247,145,37)" fg:x="536" fg:w="3"/><text x="28.4013%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="28.1513%" y="517" width="0.1576%" height="15" fill="rgb(209,117,53)" fg:x="536" fg:w="3"/><text x="28.4013%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.2563%" y="501" width="0.0525%" height="15" fill="rgb(212,90,42)" fg:x="538" fg:w="1"/><text x="28.5063%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.2563%" y="485" width="0.0525%" height="15" fill="rgb(218,164,37)" fg:x="538" fg:w="1"/><text x="28.5063%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.2563%" y="469" width="0.0525%" height="15" fill="rgb(246,65,34)" fg:x="538" fg:w="1"/><text x="28.5063%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.2563%" y="453" width="0.0525%" height="15" fill="rgb(231,100,33)" fg:x="538" fg:w="1"/><text x="28.5063%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.2563%" y="437" width="0.0525%" height="15" fill="rgb(228,126,14)" fg:x="538" fg:w="1"/><text x="28.5063%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.2563%" y="421" width="0.0525%" height="15" fill="rgb(215,173,21)" fg:x="538" fg:w="1"/><text x="28.5063%" y="431.50"></text></g><g><title>__calloc (22 samples, 1.16%)</title><rect x="27.2059%" y="693" width="1.1555%" height="15" fill="rgb(210,6,40)" fg:x="518" fg:w="22"/><text x="27.4559%" y="703.50"></text></g><g><title>_int_malloc (20 samples, 1.05%)</title><rect x="27.3109%" y="677" width="1.0504%" height="15" fill="rgb(212,48,18)" fg:x="520" fg:w="20"/><text x="27.5609%" y="687.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.05%)</title><rect x="28.3088%" y="661" width="0.0525%" height="15" fill="rgb(230,214,11)" fg:x="539" fg:w="1"/><text x="28.5588%" y="671.50"></text></g><g><title>__rdl_alloc (1 samples, 0.05%)</title><rect x="28.3613%" y="693" width="0.0525%" height="15" fill="rgb(254,105,39)" fg:x="540" fg:w="1"/><text x="28.6113%" y="703.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="28.4139%" y="693" width="0.1050%" height="15" fill="rgb(245,158,5)" fg:x="541" fg:w="2"/><text x="28.6639%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.4664%" y="677" width="0.0525%" height="15" fill="rgb(249,208,11)" fg:x="542" fg:w="1"/><text x="28.7164%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.4664%" y="661" width="0.0525%" height="15" fill="rgb(210,39,28)" fg:x="542" fg:w="1"/><text x="28.7164%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.4664%" y="645" width="0.0525%" height="15" fill="rgb(211,56,53)" fg:x="542" fg:w="1"/><text x="28.7164%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.4664%" y="629" width="0.0525%" height="15" fill="rgb(226,201,30)" fg:x="542" fg:w="1"/><text x="28.7164%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.4664%" y="613" width="0.0525%" height="15" fill="rgb(239,101,34)" fg:x="542" fg:w="1"/><text x="28.7164%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.4664%" y="597" width="0.0525%" height="15" fill="rgb(226,209,5)" fg:x="542" fg:w="1"/><text x="28.7164%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.5189%" y="677" width="0.0525%" height="15" fill="rgb(250,105,47)" fg:x="543" fg:w="1"/><text x="28.7689%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.5189%" y="661" width="0.0525%" height="15" fill="rgb(230,72,3)" fg:x="543" fg:w="1"/><text x="28.7689%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.5189%" y="645" width="0.0525%" height="15" fill="rgb(232,218,39)" fg:x="543" fg:w="1"/><text x="28.7689%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.5189%" y="629" width="0.0525%" height="15" fill="rgb(248,166,6)" fg:x="543" fg:w="1"/><text x="28.7689%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.5189%" y="613" width="0.0525%" height="15" fill="rgb(247,89,20)" fg:x="543" fg:w="1"/><text x="28.7689%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.5189%" y="597" width="0.0525%" height="15" fill="rgb(248,130,54)" fg:x="543" fg:w="1"/><text x="28.7689%" y="607.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (2 samples, 0.11%)</title><rect x="28.5189%" y="693" width="0.1050%" height="15" fill="rgb(234,196,4)" fg:x="543" fg:w="2"/><text x="28.7689%" y="703.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.05%)</title><rect x="28.5714%" y="677" width="0.0525%" height="15" fill="rgb(250,143,31)" fg:x="544" fg:w="1"/><text x="28.8214%" y="687.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.05%)</title><rect x="28.5714%" y="661" width="0.0525%" height="15" fill="rgb(211,110,34)" fg:x="544" fg:w="1"/><text x="28.8214%" y="671.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (3 samples, 0.16%)</title><rect x="28.6239%" y="693" width="0.1576%" height="15" fill="rgb(215,124,48)" fg:x="545" fg:w="3"/><text x="28.8739%" y="703.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.16%)</title><rect x="28.6239%" y="677" width="0.1576%" height="15" fill="rgb(216,46,13)" fg:x="545" fg:w="3"/><text x="28.8739%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.05%)</title><rect x="28.7290%" y="661" width="0.0525%" height="15" fill="rgb(205,184,25)" fg:x="547" fg:w="1"/><text x="28.9790%" y="671.50"></text></g><g><title>yadb::storage::Tree::get (2 samples, 0.11%)</title><rect x="28.7815%" y="693" width="0.1050%" height="15" fill="rgb(228,1,10)" fg:x="548" fg:w="2"/><text x="29.0315%" y="703.50"></text></g><g><title>tokio::task::spawn::spawn (1 samples, 0.05%)</title><rect x="28.8340%" y="677" width="0.0525%" height="15" fill="rgb(213,116,27)" fg:x="549" fg:w="1"/><text x="29.0840%" y="687.50"></text></g><g><title>tokio::runtime::task::id::Id::next (1 samples, 0.05%)</title><rect x="28.8340%" y="661" width="0.0525%" height="15" fill="rgb(241,95,50)" fg:x="549" fg:w="1"/><text x="29.0840%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (94 samples, 4.94%)</title><rect x="24.1597%" y="741" width="4.9370%" height="15" fill="rgb(238,48,32)" fg:x="460" fg:w="94"/><text x="24.4097%" y="751.50">tokio:..</text></g><g><title>test_storage::split_bench_big_value::{{closure}} (93 samples, 4.88%)</title><rect x="24.2122%" y="725" width="4.8845%" height="15" fill="rgb(235,113,49)" fg:x="461" fg:w="93"/><text x="24.4622%" y="735.50">test_s..</text></g><g><title>test_storage::generate_benchmark (45 samples, 2.36%)</title><rect x="26.7332%" y="709" width="2.3634%" height="15" fill="rgb(205,127,43)" fg:x="509" fg:w="45"/><text x="26.9832%" y="719.50">te..</text></g><g><title>yadb::storage::Tree::put (4 samples, 0.21%)</title><rect x="28.8866%" y="693" width="0.2101%" height="15" fill="rgb(250,162,2)" fg:x="550" fg:w="4"/><text x="29.1366%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="29.0441%" y="677" width="0.0525%" height="15" fill="rgb(220,13,41)" fg:x="553" fg:w="1"/><text x="29.2941%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (1 samples, 0.05%)</title><rect x="29.2017%" y="709" width="0.0525%" height="15" fill="rgb(249,221,25)" fg:x="556" fg:w="1"/><text x="29.4517%" y="719.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (3 samples, 0.16%)</title><rect x="29.1492%" y="725" width="0.1576%" height="15" fill="rgb(215,208,19)" fg:x="555" fg:w="3"/><text x="29.3992%" y="735.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (1 samples, 0.05%)</title><rect x="29.2542%" y="709" width="0.0525%" height="15" fill="rgb(236,175,2)" fg:x="557" fg:w="1"/><text x="29.5042%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.05%)</title><rect x="29.3067%" y="709" width="0.0525%" height="15" fill="rgb(241,52,2)" fg:x="558" fg:w="1"/><text x="29.5567%" y="719.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.05%)</title><rect x="29.3067%" y="693" width="0.0525%" height="15" fill="rgb(248,140,14)" fg:x="558" fg:w="1"/><text x="29.5567%" y="703.50"></text></g><g><title>[[vdso]] (1 samples, 0.05%)</title><rect x="29.3067%" y="677" width="0.0525%" height="15" fill="rgb(253,22,42)" fg:x="558" fg:w="1"/><text x="29.5567%" y="687.50"></text></g><g><title>[[vdso]] (1 samples, 0.05%)</title><rect x="29.3067%" y="661" width="0.0525%" height="15" fill="rgb(234,61,47)" fg:x="558" fg:w="1"/><text x="29.5567%" y="671.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.11%)</title><rect x="29.3592%" y="709" width="0.1050%" height="15" fill="rgb(208,226,15)" fg:x="559" fg:w="2"/><text x="29.6092%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.11%)</title><rect x="29.3592%" y="693" width="0.1050%" height="15" fill="rgb(217,221,4)" fg:x="559" fg:w="2"/><text x="29.6092%" y="703.50"></text></g><g><title>tokio::runtime::park::Inner::park (1 samples, 0.05%)</title><rect x="29.4643%" y="709" width="0.0525%" height="15" fill="rgb(212,174,34)" fg:x="561" fg:w="1"/><text x="29.7143%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (1 samples, 0.05%)</title><rect x="29.4643%" y="693" width="0.0525%" height="15" fill="rgb(253,83,4)" fg:x="561" fg:w="1"/><text x="29.7143%" y="703.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (1 samples, 0.05%)</title><rect x="29.4643%" y="677" width="0.0525%" height="15" fill="rgb(250,195,49)" fg:x="561" fg:w="1"/><text x="29.7143%" y="687.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.05%)</title><rect x="29.4643%" y="661" width="0.0525%" height="15" fill="rgb(241,192,25)" fg:x="561" fg:w="1"/><text x="29.7143%" y="671.50"></text></g><g><title>syscall (1 samples, 0.05%)</title><rect x="29.4643%" y="645" width="0.0525%" height="15" fill="rgb(208,124,10)" fg:x="561" fg:w="1"/><text x="29.7143%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.4643%" y="629" width="0.0525%" height="15" fill="rgb(222,33,0)" fg:x="561" fg:w="1"/><text x="29.7143%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.4643%" y="613" width="0.0525%" height="15" fill="rgb(234,209,28)" fg:x="561" fg:w="1"/><text x="29.7143%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.4643%" y="597" width="0.0525%" height="15" fill="rgb(224,11,23)" fg:x="561" fg:w="1"/><text x="29.7143%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.4643%" y="581" width="0.0525%" height="15" fill="rgb(232,99,1)" fg:x="561" fg:w="1"/><text x="29.7143%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.4643%" y="565" width="0.0525%" height="15" fill="rgb(237,95,45)" fg:x="561" fg:w="1"/><text x="29.7143%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.4643%" y="549" width="0.0525%" height="15" fill="rgb(208,109,11)" fg:x="561" fg:w="1"/><text x="29.7143%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.4643%" y="533" width="0.0525%" height="15" fill="rgb(216,190,48)" fg:x="561" fg:w="1"/><text x="29.7143%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.05%)</title><rect x="29.5168%" y="645" width="0.0525%" height="15" fill="rgb(251,171,36)" fg:x="562" fg:w="1"/><text x="29.7668%" y="655.50"></text></g><g><title>std::sys::unix::futex::futex_wait::{{closure}} (1 samples, 0.05%)</title><rect x="29.5168%" y="629" width="0.0525%" height="15" fill="rgb(230,62,22)" fg:x="562" fg:w="1"/><text x="29.7668%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.05%)</title><rect x="29.5168%" y="613" width="0.0525%" height="15" fill="rgb(225,114,35)" fg:x="562" fg:w="1"/><text x="29.7668%" y="623.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.05%)</title><rect x="29.5168%" y="597" width="0.0525%" height="15" fill="rgb(215,118,42)" fg:x="562" fg:w="1"/><text x="29.7668%" y="607.50"></text></g><g><title>[[vdso]] (1 samples, 0.05%)</title><rect x="29.5168%" y="581" width="0.0525%" height="15" fill="rgb(243,119,21)" fg:x="562" fg:w="1"/><text x="29.7668%" y="591.50"></text></g><g><title>[[vdso]] (1 samples, 0.05%)</title><rect x="29.5168%" y="565" width="0.0525%" height="15" fill="rgb(252,177,53)" fg:x="562" fg:w="1"/><text x="29.7668%" y="575.50"></text></g><g><title>tokio::runtime::park::Inner::park_timeout (39 samples, 2.05%)</title><rect x="29.5168%" y="709" width="2.0483%" height="15" fill="rgb(237,209,29)" fg:x="562" fg:w="39"/><text x="29.7668%" y="719.50">t..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_timeout (39 samples, 2.05%)</title><rect x="29.5168%" y="693" width="2.0483%" height="15" fill="rgb(212,65,23)" fg:x="562" fg:w="39"/><text x="29.7668%" y="703.50">s..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (39 samples, 2.05%)</title><rect x="29.5168%" y="677" width="2.0483%" height="15" fill="rgb(230,222,46)" fg:x="562" fg:w="39"/><text x="29.7668%" y="687.50">s..</text></g><g><title>std::sys::unix::futex::futex_wait (39 samples, 2.05%)</title><rect x="29.5168%" y="661" width="2.0483%" height="15" fill="rgb(215,135,32)" fg:x="562" fg:w="39"/><text x="29.7668%" y="671.50">s..</text></g><g><title>syscall (38 samples, 2.00%)</title><rect x="29.5693%" y="645" width="1.9958%" height="15" fill="rgb(246,101,22)" fg:x="563" fg:w="38"/><text x="29.8193%" y="655.50">s..</text></g><g><title>[unknown] (28 samples, 1.47%)</title><rect x="30.0945%" y="629" width="1.4706%" height="15" fill="rgb(206,107,13)" fg:x="573" fg:w="28"/><text x="30.3445%" y="639.50"></text></g><g><title>[unknown] (28 samples, 1.47%)</title><rect x="30.0945%" y="613" width="1.4706%" height="15" fill="rgb(250,100,44)" fg:x="573" fg:w="28"/><text x="30.3445%" y="623.50"></text></g><g><title>[unknown] (28 samples, 1.47%)</title><rect x="30.0945%" y="597" width="1.4706%" height="15" fill="rgb(231,147,38)" fg:x="573" fg:w="28"/><text x="30.3445%" y="607.50"></text></g><g><title>[unknown] (26 samples, 1.37%)</title><rect x="30.1996%" y="581" width="1.3655%" height="15" fill="rgb(229,8,40)" fg:x="575" fg:w="26"/><text x="30.4496%" y="591.50"></text></g><g><title>[unknown] (26 samples, 1.37%)</title><rect x="30.1996%" y="565" width="1.3655%" height="15" fill="rgb(221,135,30)" fg:x="575" fg:w="26"/><text x="30.4496%" y="575.50"></text></g><g><title>[unknown] (24 samples, 1.26%)</title><rect x="30.3046%" y="549" width="1.2605%" height="15" fill="rgb(249,193,18)" fg:x="577" fg:w="24"/><text x="30.5546%" y="559.50"></text></g><g><title>[unknown] (22 samples, 1.16%)</title><rect x="30.4097%" y="533" width="1.1555%" height="15" fill="rgb(209,133,39)" fg:x="579" fg:w="22"/><text x="30.6597%" y="543.50"></text></g><g><title>[unknown] (20 samples, 1.05%)</title><rect x="30.5147%" y="517" width="1.0504%" height="15" fill="rgb(232,100,14)" fg:x="581" fg:w="20"/><text x="30.7647%" y="527.50"></text></g><g><title>[unknown] (16 samples, 0.84%)</title><rect x="30.7248%" y="501" width="0.8403%" height="15" fill="rgb(224,185,1)" fg:x="585" fg:w="16"/><text x="30.9748%" y="511.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park (48 samples, 2.52%)</title><rect x="29.0966%" y="741" width="2.5210%" height="15" fill="rgb(223,139,8)" fg:x="554" fg:w="48"/><text x="29.3466%" y="751.50">to..</text></g><g><title>tokio::runtime::time::Driver::park_internal (44 samples, 2.31%)</title><rect x="29.3067%" y="725" width="2.3109%" height="15" fill="rgb(232,213,38)" fg:x="558" fg:w="44"/><text x="29.5567%" y="735.50">t..</text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.05%)</title><rect x="31.5651%" y="709" width="0.0525%" height="15" fill="rgb(207,94,22)" fg:x="601" fg:w="1"/><text x="31.8151%" y="719.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.05%)</title><rect x="31.5651%" y="693" width="0.0525%" height="15" fill="rgb(219,183,54)" fg:x="601" fg:w="1"/><text x="31.8151%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park_yield (1 samples, 0.05%)</title><rect x="31.6176%" y="741" width="0.0525%" height="15" fill="rgb(216,185,54)" fg:x="602" fg:w="1"/><text x="31.8676%" y="751.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (1 samples, 0.05%)</title><rect x="31.6176%" y="725" width="0.0525%" height="15" fill="rgb(254,217,39)" fg:x="602" fg:w="1"/><text x="31.8676%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (1 samples, 0.05%)</title><rect x="31.6176%" y="709" width="0.0525%" height="15" fill="rgb(240,178,23)" fg:x="602" fg:w="1"/><text x="31.8676%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="31.6176%" y="693" width="0.0525%" height="15" fill="rgb(218,11,47)" fg:x="602" fg:w="1"/><text x="31.8676%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="31.6176%" y="677" width="0.0525%" height="15" fill="rgb(218,51,51)" fg:x="602" fg:w="1"/><text x="31.8676%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="31.6176%" y="661" width="0.0525%" height="15" fill="rgb(238,126,27)" fg:x="602" fg:w="1"/><text x="31.8676%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="31.6176%" y="645" width="0.0525%" height="15" fill="rgb(249,202,22)" fg:x="602" fg:w="1"/><text x="31.8676%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="31.6176%" y="629" width="0.0525%" height="15" fill="rgb(254,195,49)" fg:x="602" fg:w="1"/><text x="31.8676%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="31.6176%" y="613" width="0.0525%" height="15" fill="rgb(208,123,14)" fg:x="602" fg:w="1"/><text x="31.8676%" y="623.50"></text></g><g><title>&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="31.7752%" y="725" width="0.0525%" height="15" fill="rgb(224,200,8)" fg:x="605" fg:w="1"/><text x="32.0252%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.11%)</title><rect x="32.2479%" y="693" width="0.1050%" height="15" fill="rgb(217,61,36)" fg:x="614" fg:w="2"/><text x="32.4979%" y="703.50"></text></g><g><title>std::panicking::try (6 samples, 0.32%)</title><rect x="32.0903%" y="709" width="0.3151%" height="15" fill="rgb(206,35,45)" fg:x="611" fg:w="6"/><text x="32.3403%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;yadb::storage::Tree::start_write::{{closure}}&gt;&gt; (1 samples, 0.05%)</title><rect x="32.3529%" y="693" width="0.0525%" height="15" fill="rgb(217,65,33)" fg:x="616" fg:w="1"/><text x="32.6029%" y="703.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (5 samples, 0.26%)</title><rect x="32.6681%" y="693" width="0.2626%" height="15" fill="rgb(222,158,48)" fg:x="622" fg:w="5"/><text x="32.9181%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="32.9307%" y="693" width="0.0525%" height="15" fill="rgb(254,2,54)" fg:x="627" fg:w="1"/><text x="33.1807%" y="703.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.05%)</title><rect x="32.9832%" y="693" width="0.0525%" height="15" fill="rgb(250,143,38)" fg:x="628" fg:w="1"/><text x="33.2332%" y="703.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="33.0882%" y="677" width="0.0525%" height="15" fill="rgb(248,25,0)" fg:x="630" fg:w="1"/><text x="33.3382%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="33.6134%" y="629" width="0.0525%" height="15" fill="rgb(206,152,27)" fg:x="640" fg:w="1"/><text x="33.8634%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="33.6134%" y="613" width="0.0525%" height="15" fill="rgb(240,77,30)" fg:x="640" fg:w="1"/><text x="33.8634%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="33.6134%" y="597" width="0.0525%" height="15" fill="rgb(231,5,3)" fg:x="640" fg:w="1"/><text x="33.8634%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="33.6134%" y="581" width="0.0525%" height="15" fill="rgb(207,226,32)" fg:x="640" fg:w="1"/><text x="33.8634%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="33.6134%" y="565" width="0.0525%" height="15" fill="rgb(222,207,47)" fg:x="640" fg:w="1"/><text x="33.8634%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="33.6134%" y="549" width="0.0525%" height="15" fill="rgb(229,115,45)" fg:x="640" fg:w="1"/><text x="33.8634%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="33.6134%" y="533" width="0.0525%" height="15" fill="rgb(224,191,6)" fg:x="640" fg:w="1"/><text x="33.8634%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="33.6134%" y="517" width="0.0525%" height="15" fill="rgb(230,227,24)" fg:x="640" fg:w="1"/><text x="33.8634%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="33.6134%" y="501" width="0.0525%" height="15" fill="rgb(228,80,19)" fg:x="640" fg:w="1"/><text x="33.8634%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="33.6134%" y="485" width="0.0525%" height="15" fill="rgb(247,229,0)" fg:x="640" fg:w="1"/><text x="33.8634%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="33.6134%" y="469" width="0.0525%" height="15" fill="rgb(237,194,15)" fg:x="640" fg:w="1"/><text x="33.8634%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="33.6134%" y="453" width="0.0525%" height="15" fill="rgb(219,203,20)" fg:x="640" fg:w="1"/><text x="33.8634%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="33.6134%" y="437" width="0.0525%" height="15" fill="rgb(234,128,8)" fg:x="640" fg:w="1"/><text x="33.8634%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="33.6134%" y="421" width="0.0525%" height="15" fill="rgb(248,202,8)" fg:x="640" fg:w="1"/><text x="33.8634%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="33.6134%" y="405" width="0.0525%" height="15" fill="rgb(206,104,37)" fg:x="640" fg:w="1"/><text x="33.8634%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="33.6134%" y="389" width="0.0525%" height="15" fill="rgb(223,8,27)" fg:x="640" fg:w="1"/><text x="33.8634%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="33.6134%" y="373" width="0.0525%" height="15" fill="rgb(216,217,28)" fg:x="640" fg:w="1"/><text x="33.8634%" y="383.50"></text></g><g><title>crossbeam_skiplist::map::SkipMap&lt;K,V&gt;::get (15 samples, 0.79%)</title><rect x="33.1408%" y="677" width="0.7878%" height="15" fill="rgb(249,199,1)" fg:x="631" fg:w="15"/><text x="33.3908%" y="687.50"></text></g><g><title>crossbeam_skiplist::base::try_pin_loop (15 samples, 0.79%)</title><rect x="33.1408%" y="661" width="0.7878%" height="15" fill="rgb(240,85,17)" fg:x="631" fg:w="15"/><text x="33.3908%" y="671.50"></text></g><g><title>crossbeam_skiplist::base::SkipList&lt;K,V&gt;::get (14 samples, 0.74%)</title><rect x="33.1933%" y="645" width="0.7353%" height="15" fill="rgb(206,108,45)" fg:x="632" fg:w="14"/><text x="33.4433%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.26%)</title><rect x="33.6660%" y="629" width="0.2626%" height="15" fill="rgb(245,210,41)" fg:x="641" fg:w="5"/><text x="33.9160%" y="639.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::acquire (1 samples, 0.05%)</title><rect x="33.9286%" y="677" width="0.0525%" height="15" fill="rgb(206,13,37)" fg:x="646" fg:w="1"/><text x="34.1786%" y="687.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (2 samples, 0.11%)</title><rect x="33.9811%" y="677" width="0.1050%" height="15" fill="rgb(250,61,18)" fg:x="647" fg:w="2"/><text x="34.2311%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="35.6618%" y="661" width="0.0525%" height="15" fill="rgb(235,172,48)" fg:x="679" fg:w="1"/><text x="35.9118%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="35.6618%" y="645" width="0.0525%" height="15" fill="rgb(249,201,17)" fg:x="679" fg:w="1"/><text x="35.9118%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.05%)</title><rect x="35.6618%" y="629" width="0.0525%" height="15" fill="rgb(219,208,6)" fg:x="679" fg:w="1"/><text x="35.9118%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.05%)</title><rect x="35.6618%" y="613" width="0.0525%" height="15" fill="rgb(248,31,23)" fg:x="679" fg:w="1"/><text x="35.9118%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.05%)</title><rect x="35.6618%" y="597" width="0.0525%" height="15" fill="rgb(245,15,42)" fg:x="679" fg:w="1"/><text x="35.9118%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="35.6618%" y="581" width="0.0525%" height="15" fill="rgb(222,217,39)" fg:x="679" fg:w="1"/><text x="35.9118%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="35.6618%" y="565" width="0.0525%" height="15" fill="rgb(210,219,27)" fg:x="679" fg:w="1"/><text x="35.9118%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="35.6618%" y="549" width="0.0525%" height="15" fill="rgb(252,166,36)" fg:x="679" fg:w="1"/><text x="35.9118%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="35.7143%" y="661" width="0.0525%" height="15" fill="rgb(245,132,34)" fg:x="680" fg:w="1"/><text x="35.9643%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="35.7143%" y="645" width="0.0525%" height="15" fill="rgb(236,54,3)" fg:x="680" fg:w="1"/><text x="35.9643%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="35.7143%" y="629" width="0.0525%" height="15" fill="rgb(241,173,43)" fg:x="680" fg:w="1"/><text x="35.9643%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="35.7143%" y="613" width="0.0525%" height="15" fill="rgb(215,190,9)" fg:x="680" fg:w="1"/><text x="35.9643%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="35.7143%" y="597" width="0.0525%" height="15" fill="rgb(242,101,16)" fg:x="680" fg:w="1"/><text x="35.9643%" y="607.50"></text></g><g><title>__GI___libc_free (6 samples, 0.32%)</title><rect x="35.7668%" y="661" width="0.3151%" height="15" fill="rgb(223,190,21)" fg:x="681" fg:w="6"/><text x="36.0168%" y="671.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.26%)</title><rect x="36.0819%" y="661" width="0.2626%" height="15" fill="rgb(215,228,25)" fg:x="687" fg:w="5"/><text x="36.3319%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="36.2920%" y="645" width="0.0525%" height="15" fill="rgb(225,36,22)" fg:x="691" fg:w="1"/><text x="36.5420%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="36.2920%" y="629" width="0.0525%" height="15" fill="rgb(251,106,46)" fg:x="691" fg:w="1"/><text x="36.5420%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="36.2920%" y="613" width="0.0525%" height="15" fill="rgb(208,90,1)" fg:x="691" fg:w="1"/><text x="36.5420%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="36.2920%" y="597" width="0.0525%" height="15" fill="rgb(243,10,4)" fg:x="691" fg:w="1"/><text x="36.5420%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="36.2920%" y="581" width="0.0525%" height="15" fill="rgb(212,137,27)" fg:x="691" fg:w="1"/><text x="36.5420%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="36.2920%" y="565" width="0.0525%" height="15" fill="rgb(231,220,49)" fg:x="691" fg:w="1"/><text x="36.5420%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="36.2920%" y="549" width="0.0525%" height="15" fill="rgb(237,96,20)" fg:x="691" fg:w="1"/><text x="36.5420%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="36.2920%" y="533" width="0.0525%" height="15" fill="rgb(239,229,30)" fg:x="691" fg:w="1"/><text x="36.5420%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="36.2920%" y="517" width="0.0525%" height="15" fill="rgb(219,65,33)" fg:x="691" fg:w="1"/><text x="36.5420%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="36.2920%" y="501" width="0.0525%" height="15" fill="rgb(243,134,7)" fg:x="691" fg:w="1"/><text x="36.5420%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="36.2920%" y="485" width="0.0525%" height="15" fill="rgb(216,177,54)" fg:x="691" fg:w="1"/><text x="36.5420%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="36.2920%" y="469" width="0.0525%" height="15" fill="rgb(211,160,20)" fg:x="691" fg:w="1"/><text x="36.5420%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="36.2920%" y="453" width="0.0525%" height="15" fill="rgb(239,85,39)" fg:x="691" fg:w="1"/><text x="36.5420%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="36.2920%" y="437" width="0.0525%" height="15" fill="rgb(232,125,22)" fg:x="691" fg:w="1"/><text x="36.5420%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="36.2920%" y="421" width="0.0525%" height="15" fill="rgb(244,57,34)" fg:x="691" fg:w="1"/><text x="36.5420%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="36.2920%" y="405" width="0.0525%" height="15" fill="rgb(214,203,32)" fg:x="691" fg:w="1"/><text x="36.5420%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="36.2920%" y="389" width="0.0525%" height="15" fill="rgb(207,58,43)" fg:x="691" fg:w="1"/><text x="36.5420%" y="399.50"></text></g><g><title>[unknown] (46 samples, 2.42%)</title><rect x="37.5000%" y="645" width="2.4160%" height="15" fill="rgb(215,193,15)" fg:x="714" fg:w="46"/><text x="37.7500%" y="655.50">[u..</text></g><g><title>[unknown] (46 samples, 2.42%)</title><rect x="37.5000%" y="629" width="2.4160%" height="15" fill="rgb(232,15,44)" fg:x="714" fg:w="46"/><text x="37.7500%" y="639.50">[u..</text></g><g><title>[unknown] (44 samples, 2.31%)</title><rect x="37.6050%" y="613" width="2.3109%" height="15" fill="rgb(212,3,48)" fg:x="716" fg:w="44"/><text x="37.8550%" y="623.50">[..</text></g><g><title>[unknown] (34 samples, 1.79%)</title><rect x="38.1303%" y="597" width="1.7857%" height="15" fill="rgb(218,128,7)" fg:x="726" fg:w="34"/><text x="38.3803%" y="607.50">[..</text></g><g><title>[unknown] (32 samples, 1.68%)</title><rect x="38.2353%" y="581" width="1.6807%" height="15" fill="rgb(226,216,39)" fg:x="728" fg:w="32"/><text x="38.4853%" y="591.50"></text></g><g><title>[unknown] (24 samples, 1.26%)</title><rect x="38.6555%" y="565" width="1.2605%" height="15" fill="rgb(243,47,51)" fg:x="736" fg:w="24"/><text x="38.9055%" y="575.50"></text></g><g><title>[unknown] (20 samples, 1.05%)</title><rect x="38.8655%" y="549" width="1.0504%" height="15" fill="rgb(241,183,40)" fg:x="740" fg:w="20"/><text x="39.1155%" y="559.50"></text></g><g><title>[unknown] (18 samples, 0.95%)</title><rect x="38.9706%" y="533" width="0.9454%" height="15" fill="rgb(231,217,32)" fg:x="742" fg:w="18"/><text x="39.2206%" y="543.50"></text></g><g><title>[unknown] (10 samples, 0.53%)</title><rect x="39.3908%" y="517" width="0.5252%" height="15" fill="rgb(229,61,38)" fg:x="750" fg:w="10"/><text x="39.6408%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="39.7059%" y="501" width="0.2101%" height="15" fill="rgb(225,210,5)" fg:x="756" fg:w="4"/><text x="39.9559%" y="511.50"></text></g><g><title>__close (70 samples, 3.68%)</title><rect x="36.3445%" y="661" width="3.6765%" height="15" fill="rgb(231,79,45)" fg:x="692" fg:w="70"/><text x="36.5945%" y="671.50">__cl..</text></g><g><title>__pthread_disable_asynccancel (2 samples, 0.11%)</title><rect x="39.9160%" y="645" width="0.1050%" height="15" fill="rgb(224,100,7)" fg:x="760" fg:w="2"/><text x="40.1660%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (8 samples, 0.42%)</title><rect x="40.0210%" y="661" width="0.4202%" height="15" fill="rgb(241,198,18)" fg:x="762" fg:w="8"/><text x="40.2710%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.21%)</title><rect x="40.4412%" y="661" width="0.2101%" height="15" fill="rgb(252,97,53)" fg:x="770" fg:w="4"/><text x="40.6912%" y="671.50"></text></g><g><title>_int_free (3 samples, 0.16%)</title><rect x="40.6513%" y="661" width="0.1576%" height="15" fill="rgb(220,88,7)" fg:x="774" fg:w="3"/><text x="40.9013%" y="671.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.05%)</title><rect x="40.9139%" y="629" width="0.0525%" height="15" fill="rgb(213,176,14)" fg:x="779" fg:w="1"/><text x="41.1639%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.21%)</title><rect x="40.8088%" y="661" width="0.2101%" height="15" fill="rgb(246,73,7)" fg:x="777" fg:w="4"/><text x="41.0588%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.11%)</title><rect x="40.9139%" y="645" width="0.1050%" height="15" fill="rgb(245,64,36)" fg:x="779" fg:w="2"/><text x="41.1639%" y="655.50"></text></g><g><title>__rdl_realloc (1 samples, 0.05%)</title><rect x="40.9664%" y="629" width="0.0525%" height="15" fill="rgb(245,80,10)" fg:x="780" fg:w="1"/><text x="41.2164%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.05%)</title><rect x="40.9664%" y="613" width="0.0525%" height="15" fill="rgb(232,107,50)" fg:x="780" fg:w="1"/><text x="41.2164%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.16%)</title><rect x="41.0189%" y="629" width="0.1576%" height="15" fill="rgb(253,3,0)" fg:x="781" fg:w="3"/><text x="41.2689%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.11%)</title><rect x="41.0714%" y="613" width="0.1050%" height="15" fill="rgb(212,99,53)" fg:x="782" fg:w="2"/><text x="41.3214%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.11%)</title><rect x="41.0714%" y="597" width="0.1050%" height="15" fill="rgb(249,111,54)" fg:x="782" fg:w="2"/><text x="41.3214%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="41.0714%" y="581" width="0.1050%" height="15" fill="rgb(249,55,30)" fg:x="782" fg:w="2"/><text x="41.3214%" y="591.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.05%)</title><rect x="41.1765%" y="629" width="0.0525%" height="15" fill="rgb(237,47,42)" fg:x="784" fg:w="1"/><text x="41.4265%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (5 samples, 0.26%)</title><rect x="41.0189%" y="661" width="0.2626%" height="15" fill="rgb(211,20,18)" fg:x="781" fg:w="5"/><text x="41.2689%" y="671.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (5 samples, 0.26%)</title><rect x="41.0189%" y="645" width="0.2626%" height="15" fill="rgb(231,203,46)" fg:x="781" fg:w="5"/><text x="41.2689%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.05%)</title><rect x="41.2290%" y="629" width="0.0525%" height="15" fill="rgb(237,142,3)" fg:x="785" fg:w="1"/><text x="41.4790%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="41.3866%" y="645" width="0.0525%" height="15" fill="rgb(241,107,1)" fg:x="788" fg:w="1"/><text x="41.6366%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="629" width="0.0525%" height="15" fill="rgb(229,83,13)" fg:x="796" fg:w="1"/><text x="42.0567%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="613" width="0.0525%" height="15" fill="rgb(241,91,40)" fg:x="796" fg:w="1"/><text x="42.0567%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="597" width="0.0525%" height="15" fill="rgb(225,3,45)" fg:x="796" fg:w="1"/><text x="42.0567%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="581" width="0.0525%" height="15" fill="rgb(244,223,14)" fg:x="796" fg:w="1"/><text x="42.0567%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="565" width="0.0525%" height="15" fill="rgb(224,124,37)" fg:x="796" fg:w="1"/><text x="42.0567%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="549" width="0.0525%" height="15" fill="rgb(251,171,30)" fg:x="796" fg:w="1"/><text x="42.0567%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="533" width="0.0525%" height="15" fill="rgb(236,46,54)" fg:x="796" fg:w="1"/><text x="42.0567%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="517" width="0.0525%" height="15" fill="rgb(245,213,5)" fg:x="796" fg:w="1"/><text x="42.0567%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="501" width="0.0525%" height="15" fill="rgb(230,144,27)" fg:x="796" fg:w="1"/><text x="42.0567%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="485" width="0.0525%" height="15" fill="rgb(220,86,6)" fg:x="796" fg:w="1"/><text x="42.0567%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="469" width="0.0525%" height="15" fill="rgb(240,20,13)" fg:x="796" fg:w="1"/><text x="42.0567%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="453" width="0.0525%" height="15" fill="rgb(217,89,34)" fg:x="796" fg:w="1"/><text x="42.0567%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="437" width="0.0525%" height="15" fill="rgb(229,13,5)" fg:x="796" fg:w="1"/><text x="42.0567%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="421" width="0.0525%" height="15" fill="rgb(244,67,35)" fg:x="796" fg:w="1"/><text x="42.0567%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="405" width="0.0525%" height="15" fill="rgb(221,40,2)" fg:x="796" fg:w="1"/><text x="42.0567%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="389" width="0.0525%" height="15" fill="rgb(237,157,21)" fg:x="796" fg:w="1"/><text x="42.0567%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="373" width="0.0525%" height="15" fill="rgb(222,94,11)" fg:x="796" fg:w="1"/><text x="42.0567%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="357" width="0.0525%" height="15" fill="rgb(249,113,6)" fg:x="796" fg:w="1"/><text x="42.0567%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.8067%" y="341" width="0.0525%" height="15" fill="rgb(238,137,36)" fg:x="796" fg:w="1"/><text x="42.0567%" y="351.50"></text></g><g><title>__memcmp_avx2_movbe (10 samples, 0.53%)</title><rect x="41.8592%" y="629" width="0.5252%" height="15" fill="rgb(210,102,26)" fg:x="797" fg:w="10"/><text x="42.1092%" y="639.50"></text></g><g><title>yadb::storage::LSMCache::block_callback (20 samples, 1.05%)</title><rect x="41.4391%" y="645" width="1.0504%" height="15" fill="rgb(218,30,30)" fg:x="789" fg:w="20"/><text x="41.6891%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.11%)</title><rect x="42.3845%" y="629" width="0.1050%" height="15" fill="rgb(214,67,26)" fg:x="807" fg:w="2"/><text x="42.6345%" y="639.50"></text></g><g><title>core::ops::function::Fn::call (70 samples, 3.68%)</title><rect x="41.2815%" y="661" width="3.6765%" height="15" fill="rgb(251,9,53)" fg:x="786" fg:w="70"/><text x="41.5315%" y="671.50">core..</text></g><g><title>yadb::storage::table::search_index (47 samples, 2.47%)</title><rect x="42.4895%" y="645" width="2.4685%" height="15" fill="rgb(228,204,25)" fg:x="809" fg:w="47"/><text x="42.7395%" y="655.50">ya..</text></g><g><title>__memcmp_avx2_movbe (30 samples, 1.58%)</title><rect x="43.3824%" y="629" width="1.5756%" height="15" fill="rgb(207,153,8)" fg:x="826" fg:w="30"/><text x="43.6324%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.05%)</title><rect x="44.9580%" y="661" width="0.0525%" height="15" fill="rgb(242,9,16)" fg:x="856" fg:w="1"/><text x="45.2080%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.05%)</title><rect x="45.0105%" y="661" width="0.0525%" height="15" fill="rgb(217,211,10)" fg:x="857" fg:w="1"/><text x="45.2605%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.05%)</title><rect x="45.0105%" y="645" width="0.0525%" height="15" fill="rgb(219,228,52)" fg:x="857" fg:w="1"/><text x="45.2605%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (2 samples, 0.11%)</title><rect x="45.0630%" y="661" width="0.1050%" height="15" fill="rgb(231,92,29)" fg:x="858" fg:w="2"/><text x="45.3130%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="45.1155%" y="645" width="0.0525%" height="15" fill="rgb(232,8,23)" fg:x="859" fg:w="1"/><text x="45.3655%" y="655.50"></text></g><g><title>schnellru::LruMap&lt;K,V,L,S&gt;::try_grow_and_insert (4 samples, 0.21%)</title><rect x="45.1681%" y="661" width="0.2101%" height="15" fill="rgb(216,211,34)" fg:x="860" fg:w="4"/><text x="45.4181%" y="671.50"></text></g><g><title>schnellru::LruMap&lt;K,V,L,S&gt;::try_grow (4 samples, 0.21%)</title><rect x="45.1681%" y="645" width="0.2101%" height="15" fill="rgb(236,151,0)" fg:x="860" fg:w="4"/><text x="45.4181%" y="655.50"></text></g><g><title>std::path::Path::to_path_buf (5 samples, 0.26%)</title><rect x="45.3782%" y="645" width="0.2626%" height="15" fill="rgb(209,168,3)" fg:x="864" fg:w="5"/><text x="45.6282%" y="655.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (5 samples, 0.26%)</title><rect x="45.3782%" y="629" width="0.2626%" height="15" fill="rgb(208,129,28)" fg:x="864" fg:w="5"/><text x="45.6282%" y="639.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (5 samples, 0.26%)</title><rect x="45.3782%" y="613" width="0.2626%" height="15" fill="rgb(229,78,22)" fg:x="864" fg:w="5"/><text x="45.6282%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.26%)</title><rect x="45.3782%" y="597" width="0.2626%" height="15" fill="rgb(228,187,13)" fg:x="864" fg:w="5"/><text x="45.6282%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.26%)</title><rect x="45.3782%" y="581" width="0.2626%" height="15" fill="rgb(240,119,24)" fg:x="864" fg:w="5"/><text x="45.6282%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.26%)</title><rect x="45.3782%" y="565" width="0.2626%" height="15" fill="rgb(209,194,42)" fg:x="864" fg:w="5"/><text x="45.6282%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.26%)</title><rect x="45.3782%" y="549" width="0.2626%" height="15" fill="rgb(247,200,46)" fg:x="864" fg:w="5"/><text x="45.6282%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.26%)</title><rect x="45.3782%" y="533" width="0.2626%" height="15" fill="rgb(218,76,16)" fg:x="864" fg:w="5"/><text x="45.6282%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.26%)</title><rect x="45.3782%" y="517" width="0.2626%" height="15" fill="rgb(225,21,48)" fg:x="864" fg:w="5"/><text x="45.6282%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.26%)</title><rect x="45.3782%" y="501" width="0.2626%" height="15" fill="rgb(239,223,50)" fg:x="864" fg:w="5"/><text x="45.6282%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.26%)</title><rect x="45.3782%" y="485" width="0.2626%" height="15" fill="rgb(244,45,21)" fg:x="864" fg:w="5"/><text x="45.6282%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.26%)</title><rect x="45.3782%" y="469" width="0.2626%" height="15" fill="rgb(232,33,43)" fg:x="864" fg:w="5"/><text x="45.6282%" y="479.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.26%)</title><rect x="45.3782%" y="453" width="0.2626%" height="15" fill="rgb(209,8,3)" fg:x="864" fg:w="5"/><text x="45.6282%" y="463.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.26%)</title><rect x="45.3782%" y="437" width="0.2626%" height="15" fill="rgb(214,25,53)" fg:x="864" fg:w="5"/><text x="45.6282%" y="447.50"></text></g><g><title>_int_malloc (3 samples, 0.16%)</title><rect x="45.4832%" y="421" width="0.1576%" height="15" fill="rgb(254,186,54)" fg:x="866" fg:w="3"/><text x="45.7332%" y="431.50"></text></g><g><title>unlink_chunk.isra.0 (3 samples, 0.16%)</title><rect x="45.4832%" y="405" width="0.1576%" height="15" fill="rgb(208,174,49)" fg:x="866" fg:w="3"/><text x="45.7332%" y="415.50"></text></g><g><title>std::path::Path::_join (14 samples, 0.74%)</title><rect x="45.3782%" y="661" width="0.7353%" height="15" fill="rgb(233,191,51)" fg:x="864" fg:w="14"/><text x="45.6282%" y="671.50"></text></g><g><title>std::path::PathBuf::push (9 samples, 0.47%)</title><rect x="45.6408%" y="645" width="0.4727%" height="15" fill="rgb(222,134,10)" fg:x="869" fg:w="9"/><text x="45.8908%" y="655.50"></text></g><g><title>std::path::PathBuf::_push (9 samples, 0.47%)</title><rect x="45.6408%" y="629" width="0.4727%" height="15" fill="rgb(230,226,20)" fg:x="869" fg:w="9"/><text x="45.8908%" y="639.50"></text></g><g><title>std::ffi::os_str::OsString::push (9 samples, 0.47%)</title><rect x="45.6408%" y="613" width="0.4727%" height="15" fill="rgb(251,111,25)" fg:x="869" fg:w="9"/><text x="45.8908%" y="623.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (9 samples, 0.47%)</title><rect x="45.6408%" y="597" width="0.4727%" height="15" fill="rgb(224,40,46)" fg:x="869" fg:w="9"/><text x="45.8908%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.47%)</title><rect x="45.6408%" y="581" width="0.4727%" height="15" fill="rgb(236,108,47)" fg:x="869" fg:w="9"/><text x="45.8908%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.47%)</title><rect x="45.6408%" y="565" width="0.4727%" height="15" fill="rgb(234,93,0)" fg:x="869" fg:w="9"/><text x="45.8908%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.47%)</title><rect x="45.6408%" y="549" width="0.4727%" height="15" fill="rgb(224,213,32)" fg:x="869" fg:w="9"/><text x="45.8908%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.47%)</title><rect x="45.6408%" y="533" width="0.4727%" height="15" fill="rgb(251,11,48)" fg:x="869" fg:w="9"/><text x="45.8908%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.47%)</title><rect x="45.6408%" y="517" width="0.4727%" height="15" fill="rgb(236,173,5)" fg:x="869" fg:w="9"/><text x="45.8908%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.47%)</title><rect x="45.6408%" y="501" width="0.4727%" height="15" fill="rgb(230,95,12)" fg:x="869" fg:w="9"/><text x="45.8908%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.47%)</title><rect x="45.6408%" y="485" width="0.4727%" height="15" fill="rgb(232,209,1)" fg:x="869" fg:w="9"/><text x="45.8908%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.47%)</title><rect x="45.6408%" y="469" width="0.4727%" height="15" fill="rgb(232,6,1)" fg:x="869" fg:w="9"/><text x="45.8908%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.47%)</title><rect x="45.6408%" y="453" width="0.4727%" height="15" fill="rgb(210,224,50)" fg:x="869" fg:w="9"/><text x="45.8908%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.47%)</title><rect x="45.6408%" y="437" width="0.4727%" height="15" fill="rgb(228,127,35)" fg:x="869" fg:w="9"/><text x="45.8908%" y="447.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.47%)</title><rect x="45.6408%" y="421" width="0.4727%" height="15" fill="rgb(245,102,45)" fg:x="869" fg:w="9"/><text x="45.8908%" y="431.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.47%)</title><rect x="45.6408%" y="405" width="0.4727%" height="15" fill="rgb(214,1,49)" fg:x="869" fg:w="9"/><text x="45.8908%" y="415.50"></text></g><g><title>_int_realloc (5 samples, 0.26%)</title><rect x="45.8508%" y="389" width="0.2626%" height="15" fill="rgb(226,163,40)" fg:x="873" fg:w="5"/><text x="46.1008%" y="399.50"></text></g><g><title>_int_malloc (3 samples, 0.16%)</title><rect x="45.9559%" y="373" width="0.1576%" height="15" fill="rgb(239,212,28)" fg:x="875" fg:w="3"/><text x="46.2059%" y="383.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (2 samples, 0.11%)</title><rect x="46.1134%" y="661" width="0.1050%" height="15" fill="rgb(220,20,13)" fg:x="878" fg:w="2"/><text x="46.3634%" y="671.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (2 samples, 0.11%)</title><rect x="46.2185%" y="661" width="0.1050%" height="15" fill="rgb(210,164,35)" fg:x="880" fg:w="2"/><text x="46.4685%" y="671.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (3 samples, 0.16%)</title><rect x="46.4286%" y="645" width="0.1576%" height="15" fill="rgb(248,109,41)" fg:x="884" fg:w="3"/><text x="46.6786%" y="655.50"></text></g><g><title>tokio::sync::mutex::Mutex&lt;T&gt;::lock::{{closure}} (6 samples, 0.32%)</title><rect x="46.3235%" y="661" width="0.3151%" height="15" fill="rgb(238,23,50)" fg:x="882" fg:w="6"/><text x="46.5735%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="46.5861%" y="645" width="0.0525%" height="15" fill="rgb(211,48,49)" fg:x="887" fg:w="1"/><text x="46.8361%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="46.5861%" y="629" width="0.0525%" height="15" fill="rgb(223,36,21)" fg:x="887" fg:w="1"/><text x="46.8361%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="46.5861%" y="613" width="0.0525%" height="15" fill="rgb(207,123,46)" fg:x="887" fg:w="1"/><text x="46.8361%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="46.5861%" y="597" width="0.0525%" height="15" fill="rgb(240,218,32)" fg:x="887" fg:w="1"/><text x="46.8361%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="46.5861%" y="581" width="0.0525%" height="15" fill="rgb(252,5,43)" fg:x="887" fg:w="1"/><text x="46.8361%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="46.5861%" y="565" width="0.0525%" height="15" fill="rgb(252,84,19)" fg:x="887" fg:w="1"/><text x="46.8361%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="46.5861%" y="549" width="0.0525%" height="15" fill="rgb(243,152,39)" fg:x="887" fg:w="1"/><text x="46.8361%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="46.5861%" y="533" width="0.0525%" height="15" fill="rgb(234,160,15)" fg:x="887" fg:w="1"/><text x="46.8361%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="46.5861%" y="517" width="0.0525%" height="15" fill="rgb(237,34,20)" fg:x="887" fg:w="1"/><text x="46.8361%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="46.5861%" y="501" width="0.0525%" height="15" fill="rgb(229,97,13)" fg:x="887" fg:w="1"/><text x="46.8361%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="46.5861%" y="485" width="0.0525%" height="15" fill="rgb(234,71,50)" fg:x="887" fg:w="1"/><text x="46.8361%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="46.5861%" y="469" width="0.0525%" height="15" fill="rgb(253,155,4)" fg:x="887" fg:w="1"/><text x="46.8361%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="46.5861%" y="453" width="0.0525%" height="15" fill="rgb(222,185,37)" fg:x="887" fg:w="1"/><text x="46.8361%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="46.5861%" y="437" width="0.0525%" height="15" fill="rgb(251,177,13)" fg:x="887" fg:w="1"/><text x="46.8361%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="46.5861%" y="421" width="0.0525%" height="15" fill="rgb(250,179,40)" fg:x="887" fg:w="1"/><text x="46.8361%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="46.5861%" y="405" width="0.0525%" height="15" fill="rgb(242,44,2)" fg:x="887" fg:w="1"/><text x="46.8361%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="46.5861%" y="389" width="0.0525%" height="15" fill="rgb(216,177,13)" fg:x="887" fg:w="1"/><text x="46.8361%" y="399.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (12 samples, 0.63%)</title><rect x="46.6387%" y="629" width="0.6303%" height="15" fill="rgb(216,106,43)" fg:x="888" fg:w="12"/><text x="46.8887%" y="639.50"></text></g><g><title>std::sys::unix::fs::File::seek (12 samples, 0.63%)</title><rect x="46.6387%" y="613" width="0.6303%" height="15" fill="rgb(216,183,2)" fg:x="888" fg:w="12"/><text x="46.8887%" y="623.50"></text></g><g><title>__lseek64 (11 samples, 0.58%)</title><rect x="46.6912%" y="597" width="0.5777%" height="15" fill="rgb(249,75,3)" fg:x="889" fg:w="11"/><text x="46.9412%" y="607.50"></text></g><g><title>[unknown] (7 samples, 0.37%)</title><rect x="46.9013%" y="581" width="0.3676%" height="15" fill="rgb(219,67,39)" fg:x="893" fg:w="7"/><text x="47.1513%" y="591.50"></text></g><g><title>[unknown] (7 samples, 0.37%)</title><rect x="46.9013%" y="565" width="0.3676%" height="15" fill="rgb(253,228,2)" fg:x="893" fg:w="7"/><text x="47.1513%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.37%)</title><rect x="46.9013%" y="549" width="0.3676%" height="15" fill="rgb(235,138,27)" fg:x="893" fg:w="7"/><text x="47.1513%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="47.0063%" y="533" width="0.2626%" height="15" fill="rgb(236,97,51)" fg:x="895" fg:w="5"/><text x="47.2563%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="47.0588%" y="517" width="0.2101%" height="15" fill="rgb(240,80,30)" fg:x="896" fg:w="4"/><text x="47.3088%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="47.1639%" y="501" width="0.1050%" height="15" fill="rgb(230,178,19)" fg:x="898" fg:w="2"/><text x="47.4139%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="47.1639%" y="485" width="0.1050%" height="15" fill="rgb(210,190,27)" fg:x="898" fg:w="2"/><text x="47.4139%" y="495.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.05%)</title><rect x="47.9517%" y="597" width="0.0525%" height="15" fill="rgb(222,107,31)" fg:x="913" fg:w="1"/><text x="48.2017%" y="607.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.05%)</title><rect x="48.0042%" y="597" width="0.0525%" height="15" fill="rgb(216,127,34)" fg:x="914" fg:w="1"/><text x="48.2542%" y="607.50"></text></g><g><title>malloc_consolidate (2 samples, 0.11%)</title><rect x="48.2668%" y="581" width="0.1050%" height="15" fill="rgb(234,116,52)" fg:x="919" fg:w="2"/><text x="48.5168%" y="591.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.05%)</title><rect x="48.3193%" y="565" width="0.0525%" height="15" fill="rgb(222,124,15)" fg:x="920" fg:w="1"/><text x="48.5693%" y="575.50"></text></g><g><title>__calloc (21 samples, 1.10%)</title><rect x="47.4790%" y="613" width="1.1029%" height="15" fill="rgb(231,179,28)" fg:x="904" fg:w="21"/><text x="47.7290%" y="623.50"></text></g><g><title>_int_malloc (10 samples, 0.53%)</title><rect x="48.0567%" y="597" width="0.5252%" height="15" fill="rgb(226,93,45)" fg:x="915" fg:w="10"/><text x="48.3067%" y="607.50"></text></g><g><title>unlink_chunk.isra.0 (4 samples, 0.21%)</title><rect x="48.3718%" y="581" width="0.2101%" height="15" fill="rgb(215,8,51)" fg:x="921" fg:w="4"/><text x="48.6218%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="48.5819%" y="613" width="0.0525%" height="15" fill="rgb(223,106,5)" fg:x="925" fg:w="1"/><text x="48.8319%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.11%)</title><rect x="48.6345%" y="613" width="0.1050%" height="15" fill="rgb(250,191,5)" fg:x="926" fg:w="2"/><text x="48.8845%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.11%)</title><rect x="48.6345%" y="597" width="0.1050%" height="15" fill="rgb(242,132,44)" fg:x="926" fg:w="2"/><text x="48.8845%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="48.6345%" y="581" width="0.1050%" height="15" fill="rgb(251,152,29)" fg:x="926" fg:w="2"/><text x="48.8845%" y="591.50"></text></g><g><title>_int_malloc (2 samples, 0.11%)</title><rect x="48.6345%" y="565" width="0.1050%" height="15" fill="rgb(218,179,5)" fg:x="926" fg:w="2"/><text x="48.8845%" y="575.50"></text></g><g><title>[unknown] (23 samples, 1.21%)</title><rect x="49.5798%" y="517" width="1.2080%" height="15" fill="rgb(227,67,19)" fg:x="944" fg:w="23"/><text x="49.8298%" y="527.50"></text></g><g><title>[unknown] (23 samples, 1.21%)</title><rect x="49.5798%" y="501" width="1.2080%" height="15" fill="rgb(233,119,31)" fg:x="944" fg:w="23"/><text x="49.8298%" y="511.50"></text></g><g><title>[unknown] (23 samples, 1.21%)</title><rect x="49.5798%" y="485" width="1.2080%" height="15" fill="rgb(241,120,22)" fg:x="944" fg:w="23"/><text x="49.8298%" y="495.50"></text></g><g><title>[unknown] (21 samples, 1.10%)</title><rect x="49.6849%" y="469" width="1.1029%" height="15" fill="rgb(224,102,30)" fg:x="946" fg:w="21"/><text x="49.9349%" y="479.50"></text></g><g><title>[unknown] (20 samples, 1.05%)</title><rect x="49.7374%" y="453" width="1.0504%" height="15" fill="rgb(210,164,37)" fg:x="947" fg:w="20"/><text x="49.9874%" y="463.50"></text></g><g><title>[unknown] (18 samples, 0.95%)</title><rect x="49.8424%" y="437" width="0.9454%" height="15" fill="rgb(226,191,16)" fg:x="949" fg:w="18"/><text x="50.0924%" y="447.50"></text></g><g><title>[unknown] (18 samples, 0.95%)</title><rect x="49.8424%" y="421" width="0.9454%" height="15" fill="rgb(214,40,45)" fg:x="949" fg:w="18"/><text x="50.0924%" y="431.50"></text></g><g><title>[unknown] (16 samples, 0.84%)</title><rect x="49.9475%" y="405" width="0.8403%" height="15" fill="rgb(244,29,26)" fg:x="951" fg:w="16"/><text x="50.1975%" y="415.50"></text></g><g><title>[unknown] (16 samples, 0.84%)</title><rect x="49.9475%" y="389" width="0.8403%" height="15" fill="rgb(216,16,5)" fg:x="951" fg:w="16"/><text x="50.1975%" y="399.50"></text></g><g><title>[unknown] (16 samples, 0.84%)</title><rect x="49.9475%" y="373" width="0.8403%" height="15" fill="rgb(249,76,35)" fg:x="951" fg:w="16"/><text x="50.1975%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="50.4727%" y="357" width="0.3151%" height="15" fill="rgb(207,11,44)" fg:x="961" fg:w="6"/><text x="50.7227%" y="367.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="50.6303%" y="341" width="0.1576%" height="15" fill="rgb(228,190,49)" fg:x="964" fg:w="3"/><text x="50.8803%" y="351.50"></text></g><g><title>yadb::storage::LSMCache::get_block::{{closure}} (80 samples, 4.20%)</title><rect x="46.6387%" y="661" width="4.2017%" height="15" fill="rgb(214,173,12)" fg:x="888" fg:w="80"/><text x="46.8887%" y="671.50">yadb:..</text></g><g><title>yadb::storage::table::Table::get_datablock (80 samples, 4.20%)</title><rect x="46.6387%" y="645" width="4.2017%" height="15" fill="rgb(218,26,35)" fg:x="888" fg:w="80"/><text x="46.8887%" y="655.50">yadb:..</text></g><g><title>yadb::storage::table::DataBlock::deserialize (68 samples, 3.57%)</title><rect x="47.2689%" y="629" width="3.5714%" height="15" fill="rgb(220,200,19)" fg:x="900" fg:w="68"/><text x="47.5189%" y="639.50">yadb..</text></g><g><title>std::io::default_read_exact (40 samples, 2.10%)</title><rect x="48.7395%" y="613" width="2.1008%" height="15" fill="rgb(239,95,49)" fg:x="928" fg:w="40"/><text x="48.9895%" y="623.50">s..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (38 samples, 2.00%)</title><rect x="48.8445%" y="597" width="1.9958%" height="15" fill="rgb(235,85,53)" fg:x="930" fg:w="38"/><text x="49.0945%" y="607.50">&lt;..</text></g><g><title>std::sys::unix::fs::File::read (38 samples, 2.00%)</title><rect x="48.8445%" y="581" width="1.9958%" height="15" fill="rgb(233,133,31)" fg:x="930" fg:w="38"/><text x="49.0945%" y="591.50">s..</text></g><g><title>std::sys::unix::fd::FileDesc::read (38 samples, 2.00%)</title><rect x="48.8445%" y="565" width="1.9958%" height="15" fill="rgb(218,25,20)" fg:x="930" fg:w="38"/><text x="49.0945%" y="575.50">s..</text></g><g><title>__libc_read (38 samples, 2.00%)</title><rect x="48.8445%" y="549" width="1.9958%" height="15" fill="rgb(252,210,38)" fg:x="930" fg:w="38"/><text x="49.0945%" y="559.50">_..</text></g><g><title>__libc_read (38 samples, 2.00%)</title><rect x="48.8445%" y="533" width="1.9958%" height="15" fill="rgb(242,134,21)" fg:x="930" fg:w="38"/><text x="49.0945%" y="543.50">_..</text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="50.7878%" y="517" width="0.0525%" height="15" fill="rgb(213,28,48)" fg:x="967" fg:w="1"/><text x="51.0378%" y="527.50"></text></g><g><title>__calloc (1 samples, 0.05%)</title><rect x="50.8403%" y="629" width="0.0525%" height="15" fill="rgb(250,196,2)" fg:x="968" fg:w="1"/><text x="51.0903%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.05%)</title><rect x="50.8403%" y="613" width="0.0525%" height="15" fill="rgb(227,5,17)" fg:x="968" fg:w="1"/><text x="51.0903%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.42%)</title><rect x="50.8929%" y="629" width="0.4202%" height="15" fill="rgb(221,226,24)" fg:x="969" fg:w="8"/><text x="51.1429%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.42%)</title><rect x="50.8929%" y="613" width="0.4202%" height="15" fill="rgb(211,5,48)" fg:x="969" fg:w="8"/><text x="51.1429%" y="623.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.42%)</title><rect x="50.8929%" y="597" width="0.4202%" height="15" fill="rgb(219,150,6)" fg:x="969" fg:w="8"/><text x="51.1429%" y="607.50"></text></g><g><title>_int_realloc (8 samples, 0.42%)</title><rect x="50.8929%" y="581" width="0.4202%" height="15" fill="rgb(251,46,16)" fg:x="969" fg:w="8"/><text x="51.1429%" y="591.50"></text></g><g><title>_int_malloc (8 samples, 0.42%)</title><rect x="50.8929%" y="565" width="0.4202%" height="15" fill="rgb(220,204,40)" fg:x="969" fg:w="8"/><text x="51.1429%" y="575.50"></text></g><g><title>malloc_consolidate (5 samples, 0.26%)</title><rect x="51.0504%" y="549" width="0.2626%" height="15" fill="rgb(211,85,2)" fg:x="972" fg:w="5"/><text x="51.3004%" y="559.50"></text></g><g><title>unlink_chunk.isra.0 (2 samples, 0.11%)</title><rect x="51.2080%" y="533" width="0.1050%" height="15" fill="rgb(229,17,7)" fg:x="975" fg:w="2"/><text x="51.4580%" y="543.50"></text></g><g><title>[unknown] (20 samples, 1.05%)</title><rect x="51.9958%" y="533" width="1.0504%" height="15" fill="rgb(239,72,28)" fg:x="990" fg:w="20"/><text x="52.2458%" y="543.50"></text></g><g><title>[unknown] (20 samples, 1.05%)</title><rect x="51.9958%" y="517" width="1.0504%" height="15" fill="rgb(230,47,54)" fg:x="990" fg:w="20"/><text x="52.2458%" y="527.50"></text></g><g><title>[unknown] (20 samples, 1.05%)</title><rect x="51.9958%" y="501" width="1.0504%" height="15" fill="rgb(214,50,8)" fg:x="990" fg:w="20"/><text x="52.2458%" y="511.50"></text></g><g><title>[unknown] (16 samples, 0.84%)</title><rect x="52.2059%" y="485" width="0.8403%" height="15" fill="rgb(216,198,43)" fg:x="994" fg:w="16"/><text x="52.4559%" y="495.50"></text></g><g><title>[unknown] (16 samples, 0.84%)</title><rect x="52.2059%" y="469" width="0.8403%" height="15" fill="rgb(234,20,35)" fg:x="994" fg:w="16"/><text x="52.4559%" y="479.50"></text></g><g><title>[unknown] (14 samples, 0.74%)</title><rect x="52.3109%" y="453" width="0.7353%" height="15" fill="rgb(254,45,19)" fg:x="996" fg:w="14"/><text x="52.5609%" y="463.50"></text></g><g><title>[unknown] (11 samples, 0.58%)</title><rect x="52.4685%" y="437" width="0.5777%" height="15" fill="rgb(219,14,44)" fg:x="999" fg:w="11"/><text x="52.7185%" y="447.50"></text></g><g><title>[unknown] (10 samples, 0.53%)</title><rect x="52.5210%" y="421" width="0.5252%" height="15" fill="rgb(217,220,26)" fg:x="1000" fg:w="10"/><text x="52.7710%" y="431.50"></text></g><g><title>[unknown] (8 samples, 0.42%)</title><rect x="52.6261%" y="405" width="0.4202%" height="15" fill="rgb(213,158,28)" fg:x="1002" fg:w="8"/><text x="52.8761%" y="415.50"></text></g><g><title>[unknown] (7 samples, 0.37%)</title><rect x="52.6786%" y="389" width="0.3676%" height="15" fill="rgb(252,51,52)" fg:x="1003" fg:w="7"/><text x="52.9286%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="52.9412%" y="373" width="0.1050%" height="15" fill="rgb(246,89,16)" fg:x="1008" fg:w="2"/><text x="53.1912%" y="383.50"></text></g><g><title>yadb::storage::LSMCache::get_index::{{closure}} (43 samples, 2.26%)</title><rect x="50.8403%" y="661" width="2.2584%" height="15" fill="rgb(216,158,49)" fg:x="968" fg:w="43"/><text x="51.0903%" y="671.50">y..</text></g><g><title>yadb::storage::table::Table::get_index (43 samples, 2.26%)</title><rect x="50.8403%" y="645" width="2.2584%" height="15" fill="rgb(236,107,19)" fg:x="968" fg:w="43"/><text x="51.0903%" y="655.50">y..</text></g><g><title>std::io::default_read_exact (34 samples, 1.79%)</title><rect x="51.3130%" y="629" width="1.7857%" height="15" fill="rgb(228,185,30)" fg:x="977" fg:w="34"/><text x="51.5630%" y="639.50">s..</text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (34 samples, 1.79%)</title><rect x="51.3130%" y="613" width="1.7857%" height="15" fill="rgb(246,134,8)" fg:x="977" fg:w="34"/><text x="51.5630%" y="623.50">&lt;..</text></g><g><title>std::sys::unix::fs::File::read (34 samples, 1.79%)</title><rect x="51.3130%" y="597" width="1.7857%" height="15" fill="rgb(214,143,50)" fg:x="977" fg:w="34"/><text x="51.5630%" y="607.50">s..</text></g><g><title>std::sys::unix::fd::FileDesc::read (34 samples, 1.79%)</title><rect x="51.3130%" y="581" width="1.7857%" height="15" fill="rgb(228,75,8)" fg:x="977" fg:w="34"/><text x="51.5630%" y="591.50">s..</text></g><g><title>__libc_read (34 samples, 1.79%)</title><rect x="51.3130%" y="565" width="1.7857%" height="15" fill="rgb(207,175,4)" fg:x="977" fg:w="34"/><text x="51.5630%" y="575.50">_..</text></g><g><title>__libc_read (34 samples, 1.79%)</title><rect x="51.3130%" y="549" width="1.7857%" height="15" fill="rgb(205,108,24)" fg:x="977" fg:w="34"/><text x="51.5630%" y="559.50">_..</text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="53.0462%" y="533" width="0.0525%" height="15" fill="rgb(244,120,49)" fg:x="1010" fg:w="1"/><text x="53.2962%" y="543.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (94 samples, 4.94%)</title><rect x="53.1513%" y="645" width="4.9370%" height="15" fill="rgb(223,47,38)" fg:x="1012" fg:w="94"/><text x="53.4013%" y="655.50">&lt;std::..</text></g><g><title>std::sys::unix::fs::File::seek (94 samples, 4.94%)</title><rect x="53.1513%" y="629" width="4.9370%" height="15" fill="rgb(229,179,11)" fg:x="1012" fg:w="94"/><text x="53.4013%" y="639.50">std::s..</text></g><g><title>__lseek64 (91 samples, 4.78%)</title><rect x="53.3088%" y="613" width="4.7794%" height="15" fill="rgb(231,122,1)" fg:x="1015" fg:w="91"/><text x="53.5588%" y="623.50">__lsee..</text></g><g><title>[unknown] (38 samples, 2.00%)</title><rect x="56.0924%" y="597" width="1.9958%" height="15" fill="rgb(245,119,9)" fg:x="1068" fg:w="38"/><text x="56.3424%" y="607.50">[..</text></g><g><title>[unknown] (38 samples, 2.00%)</title><rect x="56.0924%" y="581" width="1.9958%" height="15" fill="rgb(241,163,25)" fg:x="1068" fg:w="38"/><text x="56.3424%" y="591.50">[..</text></g><g><title>[unknown] (37 samples, 1.94%)</title><rect x="56.1450%" y="565" width="1.9433%" height="15" fill="rgb(217,214,3)" fg:x="1069" fg:w="37"/><text x="56.3950%" y="575.50">[..</text></g><g><title>[unknown] (20 samples, 1.05%)</title><rect x="57.0378%" y="549" width="1.0504%" height="15" fill="rgb(240,86,28)" fg:x="1086" fg:w="20"/><text x="57.2878%" y="559.50"></text></g><g><title>[unknown] (19 samples, 1.00%)</title><rect x="57.0903%" y="533" width="0.9979%" height="15" fill="rgb(215,47,9)" fg:x="1087" fg:w="19"/><text x="57.3403%" y="543.50"></text></g><g><title>[unknown] (8 samples, 0.42%)</title><rect x="57.6681%" y="517" width="0.4202%" height="15" fill="rgb(252,25,45)" fg:x="1098" fg:w="8"/><text x="57.9181%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="57.8256%" y="501" width="0.2626%" height="15" fill="rgb(251,164,9)" fg:x="1101" fg:w="5"/><text x="58.0756%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="58.0357%" y="485" width="0.0525%" height="15" fill="rgb(233,194,0)" fg:x="1105" fg:w="1"/><text x="58.2857%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="58.0357%" y="469" width="0.0525%" height="15" fill="rgb(249,111,24)" fg:x="1105" fg:w="1"/><text x="58.2857%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="58.0357%" y="453" width="0.0525%" height="15" fill="rgb(250,223,3)" fg:x="1105" fg:w="1"/><text x="58.2857%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="58.0357%" y="437" width="0.0525%" height="15" fill="rgb(236,178,37)" fg:x="1105" fg:w="1"/><text x="58.2857%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="58.0357%" y="421" width="0.0525%" height="15" fill="rgb(241,158,50)" fg:x="1105" fg:w="1"/><text x="58.2857%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="58.0357%" y="405" width="0.0525%" height="15" fill="rgb(213,121,41)" fg:x="1105" fg:w="1"/><text x="58.2857%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="58.0357%" y="389" width="0.0525%" height="15" fill="rgb(240,92,3)" fg:x="1105" fg:w="1"/><text x="58.2857%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="58.0357%" y="373" width="0.0525%" height="15" fill="rgb(205,123,3)" fg:x="1105" fg:w="1"/><text x="58.2857%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="58.0357%" y="357" width="0.0525%" height="15" fill="rgb(205,97,47)" fg:x="1105" fg:w="1"/><text x="58.2857%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="58.0357%" y="341" width="0.0525%" height="15" fill="rgb(247,152,14)" fg:x="1105" fg:w="1"/><text x="58.2857%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="58.0357%" y="325" width="0.0525%" height="15" fill="rgb(248,195,53)" fg:x="1105" fg:w="1"/><text x="58.2857%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="58.0357%" y="309" width="0.0525%" height="15" fill="rgb(226,201,16)" fg:x="1105" fg:w="1"/><text x="58.2857%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="58.0882%" y="645" width="0.0525%" height="15" fill="rgb(205,98,0)" fg:x="1106" fg:w="1"/><text x="58.3382%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="58.0882%" y="629" width="0.0525%" height="15" fill="rgb(214,191,48)" fg:x="1106" fg:w="1"/><text x="58.3382%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="58.0882%" y="613" width="0.0525%" height="15" fill="rgb(237,112,39)" fg:x="1106" fg:w="1"/><text x="58.3382%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="58.0882%" y="597" width="0.0525%" height="15" fill="rgb(247,203,27)" fg:x="1106" fg:w="1"/><text x="58.3382%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="58.0882%" y="581" width="0.0525%" height="15" fill="rgb(235,124,28)" fg:x="1106" fg:w="1"/><text x="58.3382%" y="591.50"></text></g><g><title>__GI___libc_free (2 samples, 0.11%)</title><rect x="58.1408%" y="645" width="0.1050%" height="15" fill="rgb(208,207,46)" fg:x="1107" fg:w="2"/><text x="58.3908%" y="655.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="58.2458%" y="645" width="0.1050%" height="15" fill="rgb(234,176,4)" fg:x="1109" fg:w="2"/><text x="58.4958%" y="655.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.05%)</title><rect x="58.3508%" y="581" width="0.0525%" height="15" fill="rgb(230,133,28)" fg:x="1111" fg:w="1"/><text x="58.6008%" y="591.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.05%)</title><rect x="58.3508%" y="565" width="0.0525%" height="15" fill="rgb(211,137,40)" fg:x="1111" fg:w="1"/><text x="58.6008%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.05%)</title><rect x="58.4034%" y="581" width="0.0525%" height="15" fill="rgb(254,35,13)" fg:x="1112" fg:w="1"/><text x="58.6534%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="58.4034%" y="565" width="0.0525%" height="15" fill="rgb(225,49,51)" fg:x="1112" fg:w="1"/><text x="58.6534%" y="575.50"></text></g><g><title>[unknown] (137 samples, 7.20%)</title><rect x="59.6113%" y="501" width="7.1954%" height="15" fill="rgb(251,10,15)" fg:x="1135" fg:w="137"/><text x="59.8613%" y="511.50">[unknown]</text></g><g><title>[unknown] (137 samples, 7.20%)</title><rect x="59.6113%" y="485" width="7.1954%" height="15" fill="rgb(228,207,15)" fg:x="1135" fg:w="137"/><text x="59.8613%" y="495.50">[unknown]</text></g><g><title>[unknown] (136 samples, 7.14%)</title><rect x="59.6639%" y="469" width="7.1429%" height="15" fill="rgb(241,99,19)" fg:x="1136" fg:w="136"/><text x="59.9139%" y="479.50">[unknown]</text></g><g><title>[unknown] (124 samples, 6.51%)</title><rect x="60.2941%" y="453" width="6.5126%" height="15" fill="rgb(207,104,49)" fg:x="1148" fg:w="124"/><text x="60.5441%" y="463.50">[unknown]</text></g><g><title>[unknown] (121 samples, 6.36%)</title><rect x="60.4517%" y="437" width="6.3550%" height="15" fill="rgb(234,99,18)" fg:x="1151" fg:w="121"/><text x="60.7017%" y="447.50">[unknown]</text></g><g><title>[unknown] (120 samples, 6.30%)</title><rect x="60.5042%" y="421" width="6.3025%" height="15" fill="rgb(213,191,49)" fg:x="1152" fg:w="120"/><text x="60.7542%" y="431.50">[unknown]</text></g><g><title>[unknown] (114 samples, 5.99%)</title><rect x="60.8193%" y="405" width="5.9874%" height="15" fill="rgb(210,226,19)" fg:x="1158" fg:w="114"/><text x="61.0693%" y="415.50">[unknown]</text></g><g><title>[unknown] (95 samples, 4.99%)</title><rect x="61.8172%" y="389" width="4.9895%" height="15" fill="rgb(229,97,18)" fg:x="1177" fg:w="95"/><text x="62.0672%" y="399.50">[unkno..</text></g><g><title>[unknown] (77 samples, 4.04%)</title><rect x="62.7626%" y="373" width="4.0441%" height="15" fill="rgb(211,167,15)" fg:x="1195" fg:w="77"/><text x="63.0126%" y="383.50">[unk..</text></g><g><title>[unknown] (58 samples, 3.05%)</title><rect x="63.7605%" y="357" width="3.0462%" height="15" fill="rgb(210,169,34)" fg:x="1214" fg:w="58"/><text x="64.0105%" y="367.50">[un..</text></g><g><title>[unknown] (30 samples, 1.58%)</title><rect x="65.2311%" y="341" width="1.5756%" height="15" fill="rgb(241,121,31)" fg:x="1242" fg:w="30"/><text x="65.4811%" y="351.50"></text></g><g><title>[unknown] (14 samples, 0.74%)</title><rect x="66.0714%" y="325" width="0.7353%" height="15" fill="rgb(232,40,11)" fg:x="1258" fg:w="14"/><text x="66.3214%" y="335.50"></text></g><g><title>[unknown] (10 samples, 0.53%)</title><rect x="66.2815%" y="309" width="0.5252%" height="15" fill="rgb(205,86,26)" fg:x="1262" fg:w="10"/><text x="66.5315%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="66.5441%" y="293" width="0.2626%" height="15" fill="rgb(231,126,28)" fg:x="1267" fg:w="5"/><text x="66.7941%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="66.6492%" y="277" width="0.1576%" height="15" fill="rgb(219,221,18)" fg:x="1269" fg:w="3"/><text x="66.8992%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="66.6492%" y="261" width="0.1576%" height="15" fill="rgb(211,40,0)" fg:x="1269" fg:w="3"/><text x="66.8992%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="66.7017%" y="245" width="0.1050%" height="15" fill="rgb(239,85,43)" fg:x="1270" fg:w="2"/><text x="66.9517%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="66.7542%" y="229" width="0.0525%" height="15" fill="rgb(231,55,21)" fg:x="1271" fg:w="1"/><text x="67.0042%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="66.7542%" y="213" width="0.0525%" height="15" fill="rgb(225,184,43)" fg:x="1271" fg:w="1"/><text x="67.0042%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="66.7542%" y="197" width="0.0525%" height="15" fill="rgb(251,158,41)" fg:x="1271" fg:w="1"/><text x="67.0042%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="66.7542%" y="181" width="0.0525%" height="15" fill="rgb(234,159,37)" fg:x="1271" fg:w="1"/><text x="67.0042%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="66.7542%" y="165" width="0.0525%" height="15" fill="rgb(216,204,22)" fg:x="1271" fg:w="1"/><text x="67.0042%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="66.7542%" y="149" width="0.0525%" height="15" fill="rgb(214,17,3)" fg:x="1271" fg:w="1"/><text x="67.0042%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="66.7542%" y="133" width="0.0525%" height="15" fill="rgb(212,111,17)" fg:x="1271" fg:w="1"/><text x="67.0042%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="66.7542%" y="117" width="0.0525%" height="15" fill="rgb(221,157,24)" fg:x="1271" fg:w="1"/><text x="67.0042%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="66.7542%" y="101" width="0.0525%" height="15" fill="rgb(252,16,13)" fg:x="1271" fg:w="1"/><text x="67.0042%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="66.7542%" y="85" width="0.0525%" height="15" fill="rgb(221,62,2)" fg:x="1271" fg:w="1"/><text x="67.0042%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="66.7542%" y="69" width="0.0525%" height="15" fill="rgb(247,87,22)" fg:x="1271" fg:w="1"/><text x="67.0042%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="66.7542%" y="53" width="0.0525%" height="15" fill="rgb(215,73,9)" fg:x="1271" fg:w="1"/><text x="67.0042%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="66.7542%" y="37" width="0.0525%" height="15" fill="rgb(207,175,33)" fg:x="1271" fg:w="1"/><text x="67.0042%" y="47.50"></text></g><g><title>__pthread_disable_asynccancel (3 samples, 0.16%)</title><rect x="66.8067%" y="501" width="0.1576%" height="15" fill="rgb(243,129,54)" fg:x="1272" fg:w="3"/><text x="67.0567%" y="511.50"></text></g><g><title>std::fs::OpenOptions::_open (165 samples, 8.67%)</title><rect x="58.3508%" y="645" width="8.6660%" height="15" fill="rgb(227,119,45)" fg:x="1111" fg:w="165"/><text x="58.6008%" y="655.50">std::fs::Ope..</text></g><g><title>std::sys::unix::fs::File::open (165 samples, 8.67%)</title><rect x="58.3508%" y="629" width="8.6660%" height="15" fill="rgb(205,109,36)" fg:x="1111" fg:w="165"/><text x="58.6008%" y="639.50">std::sys::un..</text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (165 samples, 8.67%)</title><rect x="58.3508%" y="613" width="8.6660%" height="15" fill="rgb(205,6,39)" fg:x="1111" fg:w="165"/><text x="58.6008%" y="623.50">std::sys::co..</text></g><g><title>std::sys::common::small_c_string::run_with_cstr (165 samples, 8.67%)</title><rect x="58.3508%" y="597" width="8.6660%" height="15" fill="rgb(221,32,16)" fg:x="1111" fg:w="165"/><text x="58.6008%" y="607.50">std::sys::co..</text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (163 samples, 8.56%)</title><rect x="58.4559%" y="581" width="8.5609%" height="15" fill="rgb(228,144,50)" fg:x="1113" fg:w="163"/><text x="58.7059%" y="591.50">std::sys::un..</text></g><g><title>std::sys::unix::fs::File::open_c (163 samples, 8.56%)</title><rect x="58.4559%" y="565" width="8.5609%" height="15" fill="rgb(229,201,53)" fg:x="1113" fg:w="163"/><text x="58.7059%" y="575.50">std::sys::un..</text></g><g><title>std::sys::unix::cvt_r (163 samples, 8.56%)</title><rect x="58.4559%" y="549" width="8.5609%" height="15" fill="rgb(249,153,27)" fg:x="1113" fg:w="163"/><text x="58.7059%" y="559.50">std::sys::un..</text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (163 samples, 8.56%)</title><rect x="58.4559%" y="533" width="8.5609%" height="15" fill="rgb(227,106,25)" fg:x="1113" fg:w="163"/><text x="58.7059%" y="543.50">std::sys::un..</text></g><g><title>__libc_open64 (163 samples, 8.56%)</title><rect x="58.4559%" y="517" width="8.5609%" height="15" fill="rgb(230,65,29)" fg:x="1113" fg:w="163"/><text x="58.7059%" y="527.50">__libc_open64</text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="66.9643%" y="501" width="0.0525%" height="15" fill="rgb(221,57,46)" fg:x="1275" fg:w="1"/><text x="67.2143%" y="511.50"></text></g><g><title>[unknown] (31 samples, 1.63%)</title><rect x="68.9601%" y="549" width="1.6282%" height="15" fill="rgb(229,161,17)" fg:x="1313" fg:w="31"/><text x="69.2101%" y="559.50"></text></g><g><title>[unknown] (31 samples, 1.63%)</title><rect x="68.9601%" y="533" width="1.6282%" height="15" fill="rgb(222,213,11)" fg:x="1313" fg:w="31"/><text x="69.2101%" y="543.50"></text></g><g><title>[unknown] (29 samples, 1.52%)</title><rect x="69.0651%" y="517" width="1.5231%" height="15" fill="rgb(235,35,13)" fg:x="1315" fg:w="29"/><text x="69.3151%" y="527.50"></text></g><g><title>[unknown] (23 samples, 1.21%)</title><rect x="69.3803%" y="501" width="1.2080%" height="15" fill="rgb(233,158,34)" fg:x="1321" fg:w="23"/><text x="69.6303%" y="511.50"></text></g><g><title>[unknown] (23 samples, 1.21%)</title><rect x="69.3803%" y="485" width="1.2080%" height="15" fill="rgb(215,151,48)" fg:x="1321" fg:w="23"/><text x="69.6303%" y="495.50"></text></g><g><title>[unknown] (20 samples, 1.05%)</title><rect x="69.5378%" y="469" width="1.0504%" height="15" fill="rgb(229,84,14)" fg:x="1324" fg:w="20"/><text x="69.7878%" y="479.50"></text></g><g><title>[unknown] (19 samples, 1.00%)</title><rect x="69.5903%" y="453" width="0.9979%" height="15" fill="rgb(229,68,14)" fg:x="1325" fg:w="19"/><text x="69.8403%" y="463.50"></text></g><g><title>[unknown] (15 samples, 0.79%)</title><rect x="69.8004%" y="437" width="0.7878%" height="15" fill="rgb(243,106,26)" fg:x="1329" fg:w="15"/><text x="70.0504%" y="447.50"></text></g><g><title>[unknown] (13 samples, 0.68%)</title><rect x="69.9055%" y="421" width="0.6828%" height="15" fill="rgb(206,45,38)" fg:x="1331" fg:w="13"/><text x="70.1555%" y="431.50"></text></g><g><title>[unknown] (10 samples, 0.53%)</title><rect x="70.0630%" y="405" width="0.5252%" height="15" fill="rgb(226,6,15)" fg:x="1334" fg:w="10"/><text x="70.3130%" y="415.50"></text></g><g><title>[unknown] (7 samples, 0.37%)</title><rect x="70.2206%" y="389" width="0.3676%" height="15" fill="rgb(232,22,54)" fg:x="1337" fg:w="7"/><text x="70.4706%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="70.4307%" y="373" width="0.1576%" height="15" fill="rgb(229,222,32)" fg:x="1341" fg:w="3"/><text x="70.6807%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="70.4832%" y="357" width="0.1050%" height="15" fill="rgb(228,62,29)" fg:x="1342" fg:w="2"/><text x="70.7332%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="70.4832%" y="341" width="0.1050%" height="15" fill="rgb(251,103,34)" fg:x="1342" fg:w="2"/><text x="70.7332%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="70.4832%" y="325" width="0.1050%" height="15" fill="rgb(233,12,30)" fg:x="1342" fg:w="2"/><text x="70.7332%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="70.5357%" y="309" width="0.0525%" height="15" fill="rgb(238,52,0)" fg:x="1343" fg:w="1"/><text x="70.7857%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="70.5357%" y="293" width="0.0525%" height="15" fill="rgb(223,98,5)" fg:x="1343" fg:w="1"/><text x="70.7857%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="70.5357%" y="277" width="0.0525%" height="15" fill="rgb(228,75,37)" fg:x="1343" fg:w="1"/><text x="70.7857%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="70.5357%" y="261" width="0.0525%" height="15" fill="rgb(205,115,49)" fg:x="1343" fg:w="1"/><text x="70.7857%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="70.5357%" y="245" width="0.0525%" height="15" fill="rgb(250,154,43)" fg:x="1343" fg:w="1"/><text x="70.7857%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="70.5357%" y="229" width="0.0525%" height="15" fill="rgb(226,43,29)" fg:x="1343" fg:w="1"/><text x="70.7857%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="70.5357%" y="213" width="0.0525%" height="15" fill="rgb(249,228,39)" fg:x="1343" fg:w="1"/><text x="70.7857%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="70.5357%" y="197" width="0.0525%" height="15" fill="rgb(216,79,43)" fg:x="1343" fg:w="1"/><text x="70.7857%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="70.5357%" y="181" width="0.0525%" height="15" fill="rgb(228,95,12)" fg:x="1343" fg:w="1"/><text x="70.7857%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="70.5357%" y="165" width="0.0525%" height="15" fill="rgb(249,221,15)" fg:x="1343" fg:w="1"/><text x="70.7857%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="70.5357%" y="149" width="0.0525%" height="15" fill="rgb(233,34,13)" fg:x="1343" fg:w="1"/><text x="70.7857%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="70.5357%" y="133" width="0.0525%" height="15" fill="rgb(214,103,39)" fg:x="1343" fg:w="1"/><text x="70.7857%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="70.5357%" y="117" width="0.0525%" height="15" fill="rgb(251,126,39)" fg:x="1343" fg:w="1"/><text x="70.7857%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="70.5357%" y="101" width="0.0525%" height="15" fill="rgb(214,216,36)" fg:x="1343" fg:w="1"/><text x="70.7857%" y="111.50"></text></g><g><title>yadb::storage::Tree::get::_{{closure}} (716 samples, 37.61%)</title><rect x="33.0357%" y="693" width="37.6050%" height="15" fill="rgb(220,221,8)" fg:x="629" fg:w="716"/><text x="33.2857%" y="703.50">yadb::storage::Tree::get::_{{closure}}</text></g><g><title>yadb::storage::Tree::search_table::{{closure}} (696 samples, 36.55%)</title><rect x="34.0861%" y="677" width="36.5546%" height="15" fill="rgb(240,216,3)" fg:x="649" fg:w="696"/><text x="34.3361%" y="687.50">yadb::storage::Tree::search_table::{{closure}}</text></g><g><title>yadb::storage::table::Table::new (334 samples, 17.54%)</title><rect x="53.0987%" y="661" width="17.5420%" height="15" fill="rgb(232,218,17)" fg:x="1011" fg:w="334"/><text x="53.3487%" y="671.50">yadb::storage::table::Table..</text></g><g><title>std::io::default_read_exact (69 samples, 3.62%)</title><rect x="67.0168%" y="645" width="3.6239%" height="15" fill="rgb(229,163,45)" fg:x="1276" fg:w="69"/><text x="67.2668%" y="655.50">std:..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (69 samples, 3.62%)</title><rect x="67.0168%" y="629" width="3.6239%" height="15" fill="rgb(231,110,42)" fg:x="1276" fg:w="69"/><text x="67.2668%" y="639.50">&lt;std..</text></g><g><title>std::sys::unix::fs::File::read (68 samples, 3.57%)</title><rect x="67.0693%" y="613" width="3.5714%" height="15" fill="rgb(208,170,48)" fg:x="1277" fg:w="68"/><text x="67.3193%" y="623.50">std:..</text></g><g><title>std::sys::unix::fd::FileDesc::read (68 samples, 3.57%)</title><rect x="67.0693%" y="597" width="3.5714%" height="15" fill="rgb(239,116,25)" fg:x="1277" fg:w="68"/><text x="67.3193%" y="607.50">std:..</text></g><g><title>__libc_read (68 samples, 3.57%)</title><rect x="67.0693%" y="581" width="3.5714%" height="15" fill="rgb(219,200,50)" fg:x="1277" fg:w="68"/><text x="67.3193%" y="591.50">__li..</text></g><g><title>__libc_read (68 samples, 3.57%)</title><rect x="67.0693%" y="565" width="3.5714%" height="15" fill="rgb(245,200,0)" fg:x="1277" fg:w="68"/><text x="67.3193%" y="575.50">__li..</text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="70.5882%" y="549" width="0.0525%" height="15" fill="rgb(245,119,33)" fg:x="1344" fg:w="1"/><text x="70.8382%" y="559.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (2 samples, 0.11%)</title><rect x="71.1660%" y="677" width="0.1050%" height="15" fill="rgb(231,125,12)" fg:x="1355" fg:w="2"/><text x="71.4160%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="71.2185%" y="661" width="0.0525%" height="15" fill="rgb(216,96,41)" fg:x="1356" fg:w="1"/><text x="71.4685%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="71.2185%" y="645" width="0.0525%" height="15" fill="rgb(248,43,45)" fg:x="1356" fg:w="1"/><text x="71.4685%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="71.2185%" y="629" width="0.0525%" height="15" fill="rgb(217,222,7)" fg:x="1356" fg:w="1"/><text x="71.4685%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="71.2185%" y="613" width="0.0525%" height="15" fill="rgb(233,28,6)" fg:x="1356" fg:w="1"/><text x="71.4685%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="71.2185%" y="597" width="0.0525%" height="15" fill="rgb(231,218,15)" fg:x="1356" fg:w="1"/><text x="71.4685%" y="607.50"></text></g><g><title>__GI___libc_free (1 samples, 0.05%)</title><rect x="71.3235%" y="661" width="0.0525%" height="15" fill="rgb(226,171,48)" fg:x="1358" fg:w="1"/><text x="71.5735%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.05%)</title><rect x="71.3761%" y="661" width="0.0525%" height="15" fill="rgb(235,201,9)" fg:x="1359" fg:w="1"/><text x="71.6261%" y="671.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (1 samples, 0.05%)</title><rect x="71.3761%" y="645" width="0.0525%" height="15" fill="rgb(217,80,15)" fg:x="1359" fg:w="1"/><text x="71.6261%" y="655.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.26%)</title><rect x="71.2710%" y="677" width="0.2626%" height="15" fill="rgb(219,152,8)" fg:x="1357" fg:w="5"/><text x="71.5210%" y="687.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (2 samples, 0.11%)</title><rect x="71.4286%" y="661" width="0.1050%" height="15" fill="rgb(243,107,38)" fg:x="1360" fg:w="2"/><text x="71.6786%" y="671.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="71.4811%" y="645" width="0.0525%" height="15" fill="rgb(231,17,5)" fg:x="1361" fg:w="1"/><text x="71.7311%" y="655.50"></text></g><g><title>__GI___libc_free (4 samples, 0.21%)</title><rect x="71.5336%" y="677" width="0.2101%" height="15" fill="rgb(209,25,54)" fg:x="1362" fg:w="4"/><text x="71.7836%" y="687.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="71.7437%" y="677" width="0.1050%" height="15" fill="rgb(219,0,2)" fg:x="1366" fg:w="2"/><text x="71.9937%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="71.8487%" y="677" width="0.0525%" height="15" fill="rgb(246,9,5)" fg:x="1368" fg:w="1"/><text x="72.0987%" y="687.50"></text></g><g><title>_int_free (5 samples, 0.26%)</title><rect x="71.9013%" y="677" width="0.2626%" height="15" fill="rgb(226,159,4)" fg:x="1369" fg:w="5"/><text x="72.1513%" y="687.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.05%)</title><rect x="72.1113%" y="661" width="0.0525%" height="15" fill="rgb(219,175,34)" fg:x="1373" fg:w="1"/><text x="72.3613%" y="671.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::acquire (1 samples, 0.05%)</title><rect x="72.1639%" y="677" width="0.0525%" height="15" fill="rgb(236,10,46)" fg:x="1374" fg:w="1"/><text x="72.4139%" y="687.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (1 samples, 0.05%)</title><rect x="72.2164%" y="677" width="0.0525%" height="15" fill="rgb(240,211,16)" fg:x="1375" fg:w="1"/><text x="72.4664%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="72.2689%" y="661" width="0.0525%" height="15" fill="rgb(205,3,43)" fg:x="1376" fg:w="1"/><text x="72.5189%" y="671.50"></text></g><g><title>yadb::storage::memtable::Memtable::insert_or_delete (2 samples, 0.11%)</title><rect x="72.2689%" y="677" width="0.1050%" height="15" fill="rgb(245,7,22)" fg:x="1376" fg:w="2"/><text x="72.5189%" y="687.50"></text></g><g><title>crossbeam_skiplist::map::SkipMap&lt;K,V&gt;::contains_key (1 samples, 0.05%)</title><rect x="72.3214%" y="661" width="0.0525%" height="15" fill="rgb(239,132,32)" fg:x="1377" fg:w="1"/><text x="72.5714%" y="671.50"></text></g><g><title>yadb::storage::Tree::start_write::_{{closure}} (34 samples, 1.79%)</title><rect x="70.6408%" y="693" width="1.7857%" height="15" fill="rgb(228,202,34)" fg:x="1345" fg:w="34"/><text x="70.8908%" y="703.50">y..</text></g><g><title>yadb::storage::wal::WALFile::append_to_wal (1 samples, 0.05%)</title><rect x="72.3739%" y="677" width="0.0525%" height="15" fill="rgb(254,200,22)" fg:x="1378" fg:w="1"/><text x="72.6239%" y="687.50"></text></g><g><title>yadb::storage::wal::WALEntry::serialize (1 samples, 0.05%)</title><rect x="72.3739%" y="661" width="0.0525%" height="15" fill="rgb(219,10,39)" fg:x="1378" fg:w="1"/><text x="72.6239%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.05%)</title><rect x="72.3739%" y="645" width="0.0525%" height="15" fill="rgb(226,210,39)" fg:x="1378" fg:w="1"/><text x="72.6239%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="72.5315%" y="661" width="0.0525%" height="15" fill="rgb(208,219,16)" fg:x="1381" fg:w="1"/><text x="72.7815%" y="671.50"></text></g><g><title>__rdl_alloc (8 samples, 0.42%)</title><rect x="72.5840%" y="661" width="0.4202%" height="15" fill="rgb(216,158,51)" fg:x="1382" fg:w="8"/><text x="72.8340%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (8 samples, 0.42%)</title><rect x="72.5840%" y="645" width="0.4202%" height="15" fill="rgb(233,14,44)" fg:x="1382" fg:w="8"/><text x="72.8340%" y="655.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (8 samples, 0.42%)</title><rect x="72.5840%" y="629" width="0.4202%" height="15" fill="rgb(237,97,39)" fg:x="1382" fg:w="8"/><text x="72.8340%" y="639.50"></text></g><g><title>__posix_memalign (8 samples, 0.42%)</title><rect x="72.5840%" y="613" width="0.4202%" height="15" fill="rgb(218,198,43)" fg:x="1382" fg:w="8"/><text x="72.8340%" y="623.50"></text></g><g><title>_int_memalign (8 samples, 0.42%)</title><rect x="72.5840%" y="597" width="0.4202%" height="15" fill="rgb(231,104,20)" fg:x="1382" fg:w="8"/><text x="72.8340%" y="607.50"></text></g><g><title>_int_malloc (8 samples, 0.42%)</title><rect x="72.5840%" y="581" width="0.4202%" height="15" fill="rgb(254,36,13)" fg:x="1382" fg:w="8"/><text x="72.8340%" y="591.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_write::AsyncWrite&gt;::poll_write (29 samples, 1.52%)</title><rect x="72.5315%" y="677" width="1.5231%" height="15" fill="rgb(248,14,50)" fg:x="1381" fg:w="29"/><text x="72.7815%" y="687.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (20 samples, 1.05%)</title><rect x="73.0042%" y="661" width="1.0504%" height="15" fill="rgb(217,107,29)" fg:x="1390" fg:w="20"/><text x="73.2542%" y="671.50"></text></g><g><title>syscall (20 samples, 1.05%)</title><rect x="73.0042%" y="645" width="1.0504%" height="15" fill="rgb(251,169,33)" fg:x="1390" fg:w="20"/><text x="73.2542%" y="655.50"></text></g><g><title>[unknown] (19 samples, 1.00%)</title><rect x="73.0567%" y="629" width="0.9979%" height="15" fill="rgb(217,108,32)" fg:x="1391" fg:w="19"/><text x="73.3067%" y="639.50"></text></g><g><title>[unknown] (19 samples, 1.00%)</title><rect x="73.0567%" y="613" width="0.9979%" height="15" fill="rgb(219,66,42)" fg:x="1391" fg:w="19"/><text x="73.3067%" y="623.50"></text></g><g><title>[unknown] (19 samples, 1.00%)</title><rect x="73.0567%" y="597" width="0.9979%" height="15" fill="rgb(206,180,7)" fg:x="1391" fg:w="19"/><text x="73.3067%" y="607.50"></text></g><g><title>[unknown] (19 samples, 1.00%)</title><rect x="73.0567%" y="581" width="0.9979%" height="15" fill="rgb(208,226,31)" fg:x="1391" fg:w="19"/><text x="73.3067%" y="591.50"></text></g><g><title>[unknown] (19 samples, 1.00%)</title><rect x="73.0567%" y="565" width="0.9979%" height="15" fill="rgb(218,26,49)" fg:x="1391" fg:w="19"/><text x="73.3067%" y="575.50"></text></g><g><title>[unknown] (18 samples, 0.95%)</title><rect x="73.1092%" y="549" width="0.9454%" height="15" fill="rgb(233,197,48)" fg:x="1392" fg:w="18"/><text x="73.3592%" y="559.50"></text></g><g><title>[unknown] (18 samples, 0.95%)</title><rect x="73.1092%" y="533" width="0.9454%" height="15" fill="rgb(252,181,51)" fg:x="1392" fg:w="18"/><text x="73.3592%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="74.0021%" y="517" width="0.0525%" height="15" fill="rgb(253,90,19)" fg:x="1409" fg:w="1"/><text x="74.2521%" y="527.50"></text></g><g><title>tokio::macros::support::thread_rng_n (1 samples, 0.05%)</title><rect x="74.0546%" y="661" width="0.0525%" height="15" fill="rgb(215,171,30)" fg:x="1410" fg:w="1"/><text x="74.3046%" y="671.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="74.1071%" y="645" width="0.0525%" height="15" fill="rgb(214,222,9)" fg:x="1411" fg:w="1"/><text x="74.3571%" y="655.50"></text></g><g><title>&lt;tokio::sync::mpsc::unbounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (1 samples, 0.05%)</title><rect x="74.1597%" y="645" width="0.0525%" height="15" fill="rgb(223,3,22)" fg:x="1412" fg:w="1"/><text x="74.4097%" y="655.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (3 samples, 0.16%)</title><rect x="74.1071%" y="661" width="0.1576%" height="15" fill="rgb(225,196,46)" fg:x="1411" fg:w="3"/><text x="74.3571%" y="671.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1 samples, 0.05%)</title><rect x="74.2122%" y="645" width="0.0525%" height="15" fill="rgb(209,110,37)" fg:x="1413" fg:w="1"/><text x="74.4622%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="74.2122%" y="629" width="0.0525%" height="15" fill="rgb(249,89,12)" fg:x="1413" fg:w="1"/><text x="74.4622%" y="639.50"></text></g><g><title>malloc_consolidate (1 samples, 0.05%)</title><rect x="74.2122%" y="613" width="0.0525%" height="15" fill="rgb(226,27,33)" fg:x="1413" fg:w="1"/><text x="74.4622%" y="623.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.05%)</title><rect x="74.2122%" y="597" width="0.0525%" height="15" fill="rgb(213,82,22)" fg:x="1413" fg:w="1"/><text x="74.4622%" y="607.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (7 samples, 0.37%)</title><rect x="74.0546%" y="677" width="0.3676%" height="15" fill="rgb(248,140,0)" fg:x="1410" fg:w="7"/><text x="74.3046%" y="687.50"></text></g><g><title>tokio::time::interval::Interval::poll_tick (3 samples, 0.16%)</title><rect x="74.2647%" y="661" width="0.1576%" height="15" fill="rgb(228,106,3)" fg:x="1414" fg:w="3"/><text x="74.5147%" y="671.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (3 samples, 0.16%)</title><rect x="74.2647%" y="645" width="0.1576%" height="15" fill="rgb(209,23,37)" fg:x="1414" fg:w="3"/><text x="74.5147%" y="655.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (2 samples, 0.11%)</title><rect x="74.3172%" y="629" width="0.1050%" height="15" fill="rgb(241,93,50)" fg:x="1415" fg:w="2"/><text x="74.5672%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.53%)</title><rect x="74.4223%" y="677" width="0.5252%" height="15" fill="rgb(253,46,43)" fg:x="1417" fg:w="10"/><text x="74.6723%" y="687.50"></text></g><g><title>malloc_consolidate (1 samples, 0.05%)</title><rect x="75.1050%" y="661" width="0.0525%" height="15" fill="rgb(226,206,43)" fg:x="1430" fg:w="1"/><text x="75.3550%" y="671.50"></text></g><g><title>_int_free (9 samples, 0.47%)</title><rect x="74.9475%" y="677" width="0.4727%" height="15" fill="rgb(217,54,7)" fg:x="1427" fg:w="9"/><text x="75.1975%" y="687.50"></text></g><g><title>unlink_chunk.isra.0 (5 samples, 0.26%)</title><rect x="75.1576%" y="661" width="0.2626%" height="15" fill="rgb(223,5,52)" fg:x="1431" fg:w="5"/><text x="75.4076%" y="671.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (2 samples, 0.11%)</title><rect x="75.4727%" y="645" width="0.1050%" height="15" fill="rgb(206,52,46)" fg:x="1437" fg:w="2"/><text x="75.7227%" y="655.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="75.4727%" y="629" width="0.1050%" height="15" fill="rgb(253,136,11)" fg:x="1437" fg:w="2"/><text x="75.7227%" y="639.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.16%)</title><rect x="75.4727%" y="661" width="0.1576%" height="15" fill="rgb(208,106,33)" fg:x="1437" fg:w="3"/><text x="75.7227%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (1 samples, 0.05%)</title><rect x="75.5777%" y="645" width="0.0525%" height="15" fill="rgb(206,54,4)" fg:x="1439" fg:w="1"/><text x="75.8277%" y="655.50"></text></g><g><title>tokio::runtime::task::harness::can_read_output (1 samples, 0.05%)</title><rect x="75.5777%" y="629" width="0.0525%" height="15" fill="rgb(213,3,15)" fg:x="1439" fg:w="1"/><text x="75.8277%" y="639.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.16%)</title><rect x="75.6828%" y="629" width="0.1576%" height="15" fill="rgb(252,211,39)" fg:x="1441" fg:w="3"/><text x="75.9328%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (2 samples, 0.11%)</title><rect x="75.7353%" y="613" width="0.1050%" height="15" fill="rgb(223,6,36)" fg:x="1442" fg:w="2"/><text x="75.9853%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::can_read_output (1 samples, 0.05%)</title><rect x="75.7878%" y="597" width="0.0525%" height="15" fill="rgb(252,169,45)" fg:x="1443" fg:w="1"/><text x="76.0378%" y="607.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.05%)</title><rect x="75.7878%" y="581" width="0.0525%" height="15" fill="rgb(212,48,26)" fg:x="1443" fg:w="1"/><text x="76.0378%" y="591.50"></text></g><g><title>tokio::fs::file::Inner::poll_complete_inflight (6 samples, 0.32%)</title><rect x="75.6303%" y="661" width="0.3151%" height="15" fill="rgb(251,102,48)" fg:x="1440" fg:w="6"/><text x="75.8803%" y="671.50"></text></g><g><title>tokio::fs::file::Inner::poll_flush (6 samples, 0.32%)</title><rect x="75.6303%" y="645" width="0.3151%" height="15" fill="rgb(243,208,16)" fg:x="1440" fg:w="6"/><text x="75.8803%" y="655.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (2 samples, 0.11%)</title><rect x="75.8403%" y="629" width="0.1050%" height="15" fill="rgb(219,96,24)" fg:x="1444" fg:w="2"/><text x="76.0903%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="75.8929%" y="613" width="0.0525%" height="15" fill="rgb(219,33,29)" fg:x="1445" fg:w="1"/><text x="76.1429%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="75.8929%" y="597" width="0.0525%" height="15" fill="rgb(223,176,5)" fg:x="1445" fg:w="1"/><text x="76.1429%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="75.8929%" y="581" width="0.0525%" height="15" fill="rgb(228,140,14)" fg:x="1445" fg:w="1"/><text x="76.1429%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="75.8929%" y="565" width="0.0525%" height="15" fill="rgb(217,179,31)" fg:x="1445" fg:w="1"/><text x="76.1429%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="75.8929%" y="549" width="0.0525%" height="15" fill="rgb(230,9,30)" fg:x="1445" fg:w="1"/><text x="76.1429%" y="559.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (20 samples, 1.05%)</title><rect x="75.9454%" y="629" width="1.0504%" height="15" fill="rgb(230,136,20)" fg:x="1446" fg:w="20"/><text x="76.1954%" y="639.50"></text></g><g><title>syscall (18 samples, 0.95%)</title><rect x="76.0504%" y="613" width="0.9454%" height="15" fill="rgb(215,210,22)" fg:x="1448" fg:w="18"/><text x="76.3004%" y="623.50"></text></g><g><title>[unknown] (17 samples, 0.89%)</title><rect x="76.1029%" y="597" width="0.8929%" height="15" fill="rgb(218,43,5)" fg:x="1449" fg:w="17"/><text x="76.3529%" y="607.50"></text></g><g><title>[unknown] (17 samples, 0.89%)</title><rect x="76.1029%" y="581" width="0.8929%" height="15" fill="rgb(216,11,5)" fg:x="1449" fg:w="17"/><text x="76.3529%" y="591.50"></text></g><g><title>[unknown] (16 samples, 0.84%)</title><rect x="76.1555%" y="565" width="0.8403%" height="15" fill="rgb(209,82,29)" fg:x="1450" fg:w="16"/><text x="76.4055%" y="575.50"></text></g><g><title>[unknown] (15 samples, 0.79%)</title><rect x="76.2080%" y="549" width="0.7878%" height="15" fill="rgb(244,115,12)" fg:x="1451" fg:w="15"/><text x="76.4580%" y="559.50"></text></g><g><title>[unknown] (15 samples, 0.79%)</title><rect x="76.2080%" y="533" width="0.7878%" height="15" fill="rgb(222,82,18)" fg:x="1451" fg:w="15"/><text x="76.4580%" y="543.50"></text></g><g><title>[unknown] (13 samples, 0.68%)</title><rect x="76.3130%" y="517" width="0.6828%" height="15" fill="rgb(249,227,8)" fg:x="1453" fg:w="13"/><text x="76.5630%" y="527.50"></text></g><g><title>[unknown] (12 samples, 0.63%)</title><rect x="76.3655%" y="501" width="0.6303%" height="15" fill="rgb(253,141,45)" fg:x="1454" fg:w="12"/><text x="76.6155%" y="511.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (30 samples, 1.58%)</title><rect x="75.9454%" y="661" width="1.5756%" height="15" fill="rgb(234,184,4)" fg:x="1446" fg:w="30"/><text x="76.1954%" y="671.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (30 samples, 1.58%)</title><rect x="75.9454%" y="645" width="1.5756%" height="15" fill="rgb(218,194,23)" fg:x="1446" fg:w="30"/><text x="76.1954%" y="655.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (10 samples, 0.53%)</title><rect x="76.9958%" y="629" width="0.5252%" height="15" fill="rgb(235,66,41)" fg:x="1466" fg:w="10"/><text x="77.2458%" y="639.50"></text></g><g><title>__rdl_alloc (10 samples, 0.53%)</title><rect x="76.9958%" y="613" width="0.5252%" height="15" fill="rgb(245,217,1)" fg:x="1466" fg:w="10"/><text x="77.2458%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (10 samples, 0.53%)</title><rect x="76.9958%" y="597" width="0.5252%" height="15" fill="rgb(229,91,1)" fg:x="1466" fg:w="10"/><text x="77.2458%" y="607.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (10 samples, 0.53%)</title><rect x="76.9958%" y="581" width="0.5252%" height="15" fill="rgb(207,101,30)" fg:x="1466" fg:w="10"/><text x="77.2458%" y="591.50"></text></g><g><title>__posix_memalign (10 samples, 0.53%)</title><rect x="76.9958%" y="565" width="0.5252%" height="15" fill="rgb(223,82,49)" fg:x="1466" fg:w="10"/><text x="77.2458%" y="575.50"></text></g><g><title>_int_memalign (10 samples, 0.53%)</title><rect x="76.9958%" y="549" width="0.5252%" height="15" fill="rgb(218,167,17)" fg:x="1466" fg:w="10"/><text x="77.2458%" y="559.50"></text></g><g><title>_int_malloc (10 samples, 0.53%)</title><rect x="76.9958%" y="533" width="0.5252%" height="15" fill="rgb(208,103,14)" fg:x="1466" fg:w="10"/><text x="77.2458%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="77.4685%" y="517" width="0.0525%" height="15" fill="rgb(238,20,8)" fg:x="1475" fg:w="1"/><text x="77.7185%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="77.4685%" y="501" width="0.0525%" height="15" fill="rgb(218,80,54)" fg:x="1475" fg:w="1"/><text x="77.7185%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="77.4685%" y="485" width="0.0525%" height="15" fill="rgb(240,144,17)" fg:x="1475" fg:w="1"/><text x="77.7185%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="77.4685%" y="469" width="0.0525%" height="15" fill="rgb(245,27,50)" fg:x="1475" fg:w="1"/><text x="77.7185%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="77.4685%" y="453" width="0.0525%" height="15" fill="rgb(251,51,7)" fg:x="1475" fg:w="1"/><text x="77.7185%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="77.4685%" y="437" width="0.0525%" height="15" fill="rgb(245,217,29)" fg:x="1475" fg:w="1"/><text x="77.7185%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="77.4685%" y="421" width="0.0525%" height="15" fill="rgb(221,176,29)" fg:x="1475" fg:w="1"/><text x="77.7185%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="77.4685%" y="405" width="0.0525%" height="15" fill="rgb(212,180,24)" fg:x="1475" fg:w="1"/><text x="77.7185%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="77.4685%" y="389" width="0.0525%" height="15" fill="rgb(254,24,2)" fg:x="1475" fg:w="1"/><text x="77.7185%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="77.4685%" y="373" width="0.0525%" height="15" fill="rgb(230,100,2)" fg:x="1475" fg:w="1"/><text x="77.7185%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="77.4685%" y="357" width="0.0525%" height="15" fill="rgb(219,142,25)" fg:x="1475" fg:w="1"/><text x="77.7185%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="77.4685%" y="341" width="0.0525%" height="15" fill="rgb(240,73,43)" fg:x="1475" fg:w="1"/><text x="77.7185%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="77.4685%" y="325" width="0.0525%" height="15" fill="rgb(214,114,15)" fg:x="1475" fg:w="1"/><text x="77.7185%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="77.4685%" y="309" width="0.0525%" height="15" fill="rgb(207,130,4)" fg:x="1475" fg:w="1"/><text x="77.7185%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="77.4685%" y="293" width="0.0525%" height="15" fill="rgb(221,25,40)" fg:x="1475" fg:w="1"/><text x="77.7185%" y="303.50"></text></g><g><title>__rust_dealloc (1 samples, 0.05%)</title><rect x="77.5210%" y="645" width="0.0525%" height="15" fill="rgb(241,184,7)" fg:x="1476" fg:w="1"/><text x="77.7710%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="77.5735%" y="645" width="0.0525%" height="15" fill="rgb(235,159,4)" fg:x="1477" fg:w="1"/><text x="77.8235%" y="655.50"></text></g><g><title>std::panicking::try (1 samples, 0.05%)</title><rect x="77.6261%" y="645" width="0.0525%" height="15" fill="rgb(214,87,48)" fg:x="1478" fg:w="1"/><text x="77.8761%" y="655.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="77.6261%" y="629" width="0.0525%" height="15" fill="rgb(246,198,24)" fg:x="1478" fg:w="1"/><text x="77.8761%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (4 samples, 0.21%)</title><rect x="77.5210%" y="661" width="0.2101%" height="15" fill="rgb(209,66,40)" fg:x="1476" fg:w="4"/><text x="77.7710%" y="671.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (1 samples, 0.05%)</title><rect x="77.6786%" y="645" width="0.0525%" height="15" fill="rgb(233,147,39)" fg:x="1479" fg:w="1"/><text x="77.9286%" y="655.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (1 samples, 0.05%)</title><rect x="77.7311%" y="661" width="0.0525%" height="15" fill="rgb(231,145,52)" fg:x="1480" fg:w="1"/><text x="77.9811%" y="671.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="77.8361%" y="645" width="0.0525%" height="15" fill="rgb(206,20,26)" fg:x="1482" fg:w="1"/><text x="78.0861%" y="655.50"></text></g><g><title>tokio::fs::file::File::sync_data::{{closure}} (48 samples, 2.52%)</title><rect x="75.4202%" y="677" width="2.5210%" height="15" fill="rgb(238,220,4)" fg:x="1436" fg:w="48"/><text x="75.6702%" y="687.50">to..</text></g><g><title>tokio::sync::mutex::Mutex&lt;T&gt;::lock::{{closure}} (3 samples, 0.16%)</title><rect x="77.7836%" y="661" width="0.1576%" height="15" fill="rgb(252,195,42)" fg:x="1481" fg:w="3"/><text x="78.0336%" y="671.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="77.8887%" y="645" width="0.0525%" height="15" fill="rgb(209,10,6)" fg:x="1483" fg:w="1"/><text x="78.1387%" y="655.50"></text></g><g><title>tokio::fs::file::File::try_clone (1 samples, 0.05%)</title><rect x="77.9412%" y="677" width="0.0525%" height="15" fill="rgb(229,3,52)" fg:x="1484" fg:w="1"/><text x="78.1912%" y="687.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (4 samples, 0.21%)</title><rect x="78.0462%" y="661" width="0.2101%" height="15" fill="rgb(253,49,37)" fg:x="1486" fg:w="4"/><text x="78.2962%" y="671.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (875 samples, 45.96%)</title><rect x="32.4055%" y="709" width="45.9559%" height="15" fill="rgb(240,103,49)" fg:x="617" fg:w="875"/><text x="32.6555%" y="719.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>yadb::storage::wal::batch_writer::AsyncBufferedWriter::new::_{{closure}} (113 samples, 5.93%)</title><rect x="72.4265%" y="693" width="5.9349%" height="15" fill="rgb(250,182,30)" fg:x="1379" fg:w="113"/><text x="72.6765%" y="703.50">yadb::st..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (7 samples, 0.37%)</title><rect x="77.9937%" y="677" width="0.3676%" height="15" fill="rgb(248,8,30)" fg:x="1485" fg:w="7"/><text x="78.2437%" y="687.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (2 samples, 0.11%)</title><rect x="78.2563%" y="661" width="0.1050%" height="15" fill="rgb(237,120,30)" fg:x="1490" fg:w="2"/><text x="78.5063%" y="671.50"></text></g><g><title>futures_task::waker::wake_by_ref_arc_raw (3 samples, 0.16%)</title><rect x="78.4139%" y="677" width="0.1576%" height="15" fill="rgb(221,146,34)" fg:x="1493" fg:w="3"/><text x="78.6639%" y="687.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (3 samples, 0.16%)</title><rect x="78.4139%" y="661" width="0.1576%" height="15" fill="rgb(242,55,13)" fg:x="1493" fg:w="3"/><text x="78.6639%" y="671.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.21%)</title><rect x="78.4139%" y="693" width="0.2101%" height="15" fill="rgb(242,112,31)" fg:x="1493" fg:w="4"/><text x="78.6639%" y="703.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::is_join_waker_set (1 samples, 0.05%)</title><rect x="78.5714%" y="677" width="0.0525%" height="15" fill="rgb(249,192,27)" fg:x="1496" fg:w="1"/><text x="78.8214%" y="687.50"></text></g><g><title>futures_task::waker::wake_by_ref_arc_raw (5 samples, 0.26%)</title><rect x="78.6239%" y="693" width="0.2626%" height="15" fill="rgb(208,204,44)" fg:x="1497" fg:w="5"/><text x="78.8739%" y="703.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (4 samples, 0.21%)</title><rect x="78.6765%" y="677" width="0.2101%" height="15" fill="rgb(208,93,54)" fg:x="1498" fg:w="4"/><text x="78.9265%" y="687.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (2 samples, 0.11%)</title><rect x="78.7815%" y="661" width="0.1050%" height="15" fill="rgb(242,1,31)" fg:x="1500" fg:w="2"/><text x="79.0315%" y="671.50"></text></g><g><title>tokio::runtime::task::abort::AbortHandle::new (1 samples, 0.05%)</title><rect x="78.8866%" y="693" width="0.0525%" height="15" fill="rgb(241,83,25)" fg:x="1502" fg:w="1"/><text x="79.1366%" y="703.50"></text></g><g><title>tokio::runtime::task::core::Trailer::wake_join (1 samples, 0.05%)</title><rect x="78.9391%" y="693" width="0.0525%" height="15" fill="rgb(205,169,50)" fg:x="1503" fg:w="1"/><text x="79.1891%" y="703.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (3 samples, 0.16%)</title><rect x="78.9916%" y="693" width="0.1576%" height="15" fill="rgb(239,186,37)" fg:x="1504" fg:w="3"/><text x="79.2416%" y="703.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (16 samples, 0.84%)</title><rect x="78.3613%" y="709" width="0.8403%" height="15" fill="rgb(205,221,10)" fg:x="1492" fg:w="16"/><text x="78.6113%" y="719.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (1 samples, 0.05%)</title><rect x="79.1492%" y="693" width="0.0525%" height="15" fill="rgb(218,196,15)" fg:x="1507" fg:w="1"/><text x="79.3992%" y="703.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (1 samples, 0.05%)</title><rect x="79.2017%" y="709" width="0.0525%" height="15" fill="rgb(218,196,35)" fg:x="1508" fg:w="1"/><text x="79.4517%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (906 samples, 47.58%)</title><rect x="31.8277%" y="725" width="47.5840%" height="15" fill="rgb(233,63,24)" fg:x="606" fg:w="906"/><text x="32.0777%" y="735.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (3 samples, 0.16%)</title><rect x="79.2542%" y="709" width="0.1576%" height="15" fill="rgb(225,8,4)" fg:x="1509" fg:w="3"/><text x="79.5042%" y="719.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (912 samples, 47.90%)</title><rect x="31.6702%" y="741" width="47.8992%" height="15" fill="rgb(234,105,35)" fg:x="603" fg:w="912"/><text x="31.9202%" y="751.50">tokio::runtime::scheduler::current_thread::Context::run_task</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (3 samples, 0.16%)</title><rect x="79.4118%" y="725" width="0.1576%" height="15" fill="rgb(236,21,32)" fg:x="1512" fg:w="3"/><text x="79.6618%" y="735.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Handle::reset_woken (1 samples, 0.05%)</title><rect x="79.5693%" y="741" width="0.0525%" height="15" fill="rgb(228,109,6)" fg:x="1515" fg:w="1"/><text x="79.8193%" y="751.50"></text></g><g><title>split_bench_big (1,519 samples, 79.78%)</title><rect x="0.0000%" y="1253" width="79.7794%" height="15" fill="rgb(229,215,31)" fg:x="0" fg:w="1519"/><text x="0.2500%" y="1263.50">split_bench_big</text></g><g><title>__GI___clone (1,060 samples, 55.67%)</title><rect x="24.1071%" y="1237" width="55.6723%" height="15" fill="rgb(221,52,54)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="1247.50">__GI___clone</text></g><g><title>start_thread (1,060 samples, 55.67%)</title><rect x="24.1071%" y="1221" width="55.6723%" height="15" fill="rgb(252,129,43)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="1231.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,060 samples, 55.67%)</title><rect x="24.1071%" y="1205" width="55.6723%" height="15" fill="rgb(248,183,27)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="1215.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,060 samples, 55.67%)</title><rect x="24.1071%" y="1189" width="55.6723%" height="15" fill="rgb(250,0,22)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="1199.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,060 samples, 55.67%)</title><rect x="24.1071%" y="1173" width="55.6723%" height="15" fill="rgb(213,166,10)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="1183.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1,060 samples, 55.67%)</title><rect x="24.1071%" y="1157" width="55.6723%" height="15" fill="rgb(207,163,36)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="1167.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1,060 samples, 55.67%)</title><rect x="24.1071%" y="1141" width="55.6723%" height="15" fill="rgb(208,122,22)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="1151.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,060 samples, 55.67%)</title><rect x="24.1071%" y="1125" width="55.6723%" height="15" fill="rgb(207,104,49)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="1135.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,060 samples, 55.67%)</title><rect x="24.1071%" y="1109" width="55.6723%" height="15" fill="rgb(248,211,50)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="1119.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,060 samples, 55.67%)</title><rect x="24.1071%" y="1093" width="55.6723%" height="15" fill="rgb(217,13,45)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="1103.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,060 samples, 55.67%)</title><rect x="24.1071%" y="1077" width="55.6723%" height="15" fill="rgb(211,216,49)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="1087.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1,060 samples, 55.67%)</title><rect x="24.1071%" y="1061" width="55.6723%" height="15" fill="rgb(221,58,53)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="1071.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,060 samples, 55.67%)</title><rect x="24.1071%" y="1045" width="55.6723%" height="15" fill="rgb(220,112,41)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="1055.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>test::run_test::run_test_inner::{{closure}} (1,060 samples, 55.67%)</title><rect x="24.1071%" y="1029" width="55.6723%" height="15" fill="rgb(236,38,28)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="1039.50">test::run_test::run_test_inner::{{closure}}</text></g><g><title>test::run_test::run_test_inner::{{closure}} (1,060 samples, 55.67%)</title><rect x="24.1071%" y="1013" width="55.6723%" height="15" fill="rgb(227,195,22)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="1023.50">test::run_test::run_test_inner::{{closure}}</text></g><g><title>test::run_test_in_process (1,060 samples, 55.67%)</title><rect x="24.1071%" y="997" width="55.6723%" height="15" fill="rgb(214,55,33)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="1007.50">test::run_test_in_process</text></g><g><title>std::panic::catch_unwind (1,060 samples, 55.67%)</title><rect x="24.1071%" y="981" width="55.6723%" height="15" fill="rgb(248,80,13)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,060 samples, 55.67%)</title><rect x="24.1071%" y="965" width="55.6723%" height="15" fill="rgb(238,52,6)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,060 samples, 55.67%)</title><rect x="24.1071%" y="949" width="55.6723%" height="15" fill="rgb(224,198,47)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="959.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,060 samples, 55.67%)</title><rect x="24.1071%" y="933" width="55.6723%" height="15" fill="rgb(233,171,20)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="943.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,060 samples, 55.67%)</title><rect x="24.1071%" y="917" width="55.6723%" height="15" fill="rgb(241,30,25)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="927.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1,060 samples, 55.67%)</title><rect x="24.1071%" y="901" width="55.6723%" height="15" fill="rgb(207,171,38)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="911.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>test::run_test::{{closure}} (1,060 samples, 55.67%)</title><rect x="24.1071%" y="885" width="55.6723%" height="15" fill="rgb(234,70,1)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="895.50">test::run_test::{{closure}}</text></g><g><title>test::__rust_begin_short_backtrace (1,060 samples, 55.67%)</title><rect x="24.1071%" y="869" width="55.6723%" height="15" fill="rgb(232,178,18)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="879.50">test::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (1,060 samples, 55.67%)</title><rect x="24.1071%" y="853" width="55.6723%" height="15" fill="rgb(241,78,40)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="863.50">core::ops::function::FnOnce::call_once</text></g><g><title>core::ops::function::FnOnce::call_once (1,060 samples, 55.67%)</title><rect x="24.1071%" y="837" width="55.6723%" height="15" fill="rgb(222,35,25)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="847.50">core::ops::function::FnOnce::call_once</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (1,060 samples, 55.67%)</title><rect x="24.1071%" y="821" width="55.6723%" height="15" fill="rgb(207,92,16)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="831.50">tokio::runtime::runtime::Runtime::block_on</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (1,060 samples, 55.67%)</title><rect x="24.1071%" y="805" width="55.6723%" height="15" fill="rgb(216,59,51)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="815.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (1,060 samples, 55.67%)</title><rect x="24.1071%" y="789" width="55.6723%" height="15" fill="rgb(213,80,28)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="799.50">tokio::runtime::scheduler::current_thread::CoreGuard::block_on</text></g><g><title>tokio::runtime::context::set_scheduler (1,060 samples, 55.67%)</title><rect x="24.1071%" y="773" width="55.6723%" height="15" fill="rgb(220,93,7)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="783.50">tokio::runtime::context::set_scheduler</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (1,060 samples, 55.67%)</title><rect x="24.1071%" y="757" width="55.6723%" height="15" fill="rgb(225,24,44)" fg:x="459" fg:w="1060"/><text x="24.3571%" y="767.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::inject::Inject&lt;T&gt;::pop (3 samples, 0.16%)</title><rect x="79.6218%" y="741" width="0.1576%" height="15" fill="rgb(243,74,40)" fg:x="1516" fg:w="3"/><text x="79.8718%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="79.7794%" y="1237" width="0.2626%" height="15" fill="rgb(228,39,7)" fg:x="1519" fg:w="5"/><text x="80.0294%" y="1247.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="79.7794%" y="1221" width="0.2626%" height="15" fill="rgb(227,79,8)" fg:x="1519" fg:w="5"/><text x="80.0294%" y="1231.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="79.7794%" y="1205" width="0.2626%" height="15" fill="rgb(236,58,11)" fg:x="1519" fg:w="5"/><text x="80.0294%" y="1215.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="79.7794%" y="1189" width="0.2626%" height="15" fill="rgb(249,63,35)" fg:x="1519" fg:w="5"/><text x="80.0294%" y="1199.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="79.7794%" y="1173" width="0.2626%" height="15" fill="rgb(252,114,16)" fg:x="1519" fg:w="5"/><text x="80.0294%" y="1183.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="79.7794%" y="1157" width="0.2626%" height="15" fill="rgb(254,151,24)" fg:x="1519" fg:w="5"/><text x="80.0294%" y="1167.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="79.7794%" y="1141" width="0.2626%" height="15" fill="rgb(253,54,39)" fg:x="1519" fg:w="5"/><text x="80.0294%" y="1151.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="79.7794%" y="1125" width="0.2626%" height="15" fill="rgb(243,25,45)" fg:x="1519" fg:w="5"/><text x="80.0294%" y="1135.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="79.7794%" y="1109" width="0.2626%" height="15" fill="rgb(234,134,9)" fg:x="1519" fg:w="5"/><text x="80.0294%" y="1119.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="79.7794%" y="1093" width="0.2626%" height="15" fill="rgb(227,166,31)" fg:x="1519" fg:w="5"/><text x="80.0294%" y="1103.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="79.7794%" y="1077" width="0.2626%" height="15" fill="rgb(245,143,41)" fg:x="1519" fg:w="5"/><text x="80.0294%" y="1087.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="79.7794%" y="1061" width="0.2626%" height="15" fill="rgb(238,181,32)" fg:x="1519" fg:w="5"/><text x="80.0294%" y="1071.50"></text></g><g><title>[unknown] (5 samples, 0.26%)</title><rect x="79.7794%" y="1045" width="0.2626%" height="15" fill="rgb(224,113,18)" fg:x="1519" fg:w="5"/><text x="80.0294%" y="1055.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="79.8319%" y="1029" width="0.2101%" height="15" fill="rgb(240,229,28)" fg:x="1520" fg:w="4"/><text x="80.0819%" y="1039.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="79.8319%" y="1013" width="0.2101%" height="15" fill="rgb(250,185,3)" fg:x="1520" fg:w="4"/><text x="80.0819%" y="1023.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="79.8319%" y="997" width="0.2101%" height="15" fill="rgb(212,59,25)" fg:x="1520" fg:w="4"/><text x="80.0819%" y="1007.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="79.8845%" y="981" width="0.1576%" height="15" fill="rgb(221,87,20)" fg:x="1521" fg:w="3"/><text x="80.1345%" y="991.50"></text></g><g><title>test_storage-9f (6 samples, 0.32%)</title><rect x="79.7794%" y="1253" width="0.3151%" height="15" fill="rgb(213,74,28)" fg:x="1519" fg:w="6"/><text x="80.0294%" y="1263.50"></text></g><g><title>_start (1 samples, 0.05%)</title><rect x="80.0420%" y="1237" width="0.0525%" height="15" fill="rgb(224,132,34)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="1247.50"></text></g><g><title>__libc_start_main (1 samples, 0.05%)</title><rect x="80.0420%" y="1221" width="0.0525%" height="15" fill="rgb(222,101,24)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="1231.50"></text></g><g><title>main (1 samples, 0.05%)</title><rect x="80.0420%" y="1205" width="0.0525%" height="15" fill="rgb(254,142,4)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="1215.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.05%)</title><rect x="80.0420%" y="1189" width="0.0525%" height="15" fill="rgb(230,229,49)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.05%)</title><rect x="80.0420%" y="1173" width="0.0525%" height="15" fill="rgb(238,70,47)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="1183.50"></text></g><g><title>std::panicking::try (1 samples, 0.05%)</title><rect x="80.0420%" y="1157" width="0.0525%" height="15" fill="rgb(231,160,17)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.05%)</title><rect x="80.0420%" y="1141" width="0.0525%" height="15" fill="rgb(218,68,53)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="1151.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 0.05%)</title><rect x="80.0420%" y="1125" width="0.0525%" height="15" fill="rgb(236,111,10)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.05%)</title><rect x="80.0420%" y="1109" width="0.0525%" height="15" fill="rgb(224,34,41)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="1119.50"></text></g><g><title>std::panicking::try (1 samples, 0.05%)</title><rect x="80.0420%" y="1093" width="0.0525%" height="15" fill="rgb(241,118,19)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.05%)</title><rect x="80.0420%" y="1077" width="0.0525%" height="15" fill="rgb(238,129,25)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.05%)</title><rect x="80.0420%" y="1061" width="0.0525%" height="15" fill="rgb(238,22,31)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="1071.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.05%)</title><rect x="80.0420%" y="1045" width="0.0525%" height="15" fill="rgb(222,174,48)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="1055.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.05%)</title><rect x="80.0420%" y="1029" width="0.0525%" height="15" fill="rgb(206,152,40)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="1039.50"></text></g><g><title>test::test_main_static (1 samples, 0.05%)</title><rect x="80.0420%" y="1013" width="0.0525%" height="15" fill="rgb(218,99,54)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="1023.50"></text></g><g><title>test::test_main (1 samples, 0.05%)</title><rect x="80.0420%" y="997" width="0.0525%" height="15" fill="rgb(220,174,26)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="1007.50"></text></g><g><title>test::console::run_tests_console (1 samples, 0.05%)</title><rect x="80.0420%" y="981" width="0.0525%" height="15" fill="rgb(245,116,9)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="991.50"></text></g><g><title>test::term::stdout (1 samples, 0.05%)</title><rect x="80.0420%" y="965" width="0.0525%" height="15" fill="rgb(209,72,35)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="975.50"></text></g><g><title>test::term::terminfo::TerminfoTerminal&lt;T&gt;::new (1 samples, 0.05%)</title><rect x="80.0420%" y="949" width="0.0525%" height="15" fill="rgb(226,126,21)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="959.50"></text></g><g><title>test::term::terminfo::TermInfo::from_env (1 samples, 0.05%)</title><rect x="80.0420%" y="933" width="0.0525%" height="15" fill="rgb(227,192,1)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="943.50"></text></g><g><title>test::term::terminfo::TermInfo::from_name (1 samples, 0.05%)</title><rect x="80.0420%" y="917" width="0.0525%" height="15" fill="rgb(237,180,29)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="927.50"></text></g><g><title>test::term::terminfo::searcher::get_dbpath_for_term (1 samples, 0.05%)</title><rect x="80.0420%" y="901" width="0.0525%" height="15" fill="rgb(230,197,35)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="911.50"></text></g><g><title>std::env::var_os (1 samples, 0.05%)</title><rect x="80.0420%" y="885" width="0.0525%" height="15" fill="rgb(246,193,31)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="895.50"></text></g><g><title>std::env::_var_os (1 samples, 0.05%)</title><rect x="80.0420%" y="869" width="0.0525%" height="15" fill="rgb(241,36,4)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="879.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.05%)</title><rect x="80.0420%" y="853" width="0.0525%" height="15" fill="rgb(241,130,17)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="863.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.05%)</title><rect x="80.0420%" y="837" width="0.0525%" height="15" fill="rgb(206,137,32)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="847.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.05%)</title><rect x="80.0420%" y="821" width="0.0525%" height="15" fill="rgb(237,228,51)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="831.50"></text></g><g><title>__GI_getenv (1 samples, 0.05%)</title><rect x="80.0420%" y="805" width="0.0525%" height="15" fill="rgb(243,6,42)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="815.50"></text></g><g><title>__strncmp_avx2 (1 samples, 0.05%)</title><rect x="80.0420%" y="789" width="0.0525%" height="15" fill="rgb(251,74,28)" fg:x="1524" fg:w="1"/><text x="80.2920%" y="799.50"></text></g><g><title>__libc_thread_freeres (1 samples, 0.05%)</title><rect x="80.0945%" y="1205" width="0.0525%" height="15" fill="rgb(218,20,49)" fg:x="1525" fg:w="1"/><text x="80.3445%" y="1215.50"></text></g><g><title>__rpc_thread_destroy (1 samples, 0.05%)</title><rect x="80.0945%" y="1189" width="0.0525%" height="15" fill="rgb(238,28,14)" fg:x="1525" fg:w="1"/><text x="80.3445%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (6 samples, 0.32%)</title><rect x="80.3571%" y="1061" width="0.3151%" height="15" fill="rgb(229,40,46)" fg:x="1530" fg:w="6"/><text x="80.6071%" y="1071.50"></text></g><g><title>std::sys::unix::futex::futex_wait::{{closure}} (6 samples, 0.32%)</title><rect x="80.3571%" y="1045" width="0.3151%" height="15" fill="rgb(244,195,20)" fg:x="1530" fg:w="6"/><text x="80.6071%" y="1055.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (6 samples, 0.32%)</title><rect x="80.3571%" y="1029" width="0.3151%" height="15" fill="rgb(253,56,35)" fg:x="1530" fg:w="6"/><text x="80.6071%" y="1039.50"></text></g><g><title>__clock_gettime_2 (6 samples, 0.32%)</title><rect x="80.3571%" y="1013" width="0.3151%" height="15" fill="rgb(210,149,44)" fg:x="1530" fg:w="6"/><text x="80.6071%" y="1023.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.05%)</title><rect x="80.6197%" y="997" width="0.0525%" height="15" fill="rgb(240,135,12)" fg:x="1535" fg:w="1"/><text x="80.8697%" y="1007.50"></text></g><g><title>std::sys::unix::futex::futex_wait (52 samples, 2.73%)</title><rect x="80.2521%" y="1077" width="2.7311%" height="15" fill="rgb(251,24,50)" fg:x="1528" fg:w="52"/><text x="80.5021%" y="1087.50">st..</text></g><g><title>syscall (44 samples, 2.31%)</title><rect x="80.6723%" y="1061" width="2.3109%" height="15" fill="rgb(243,200,47)" fg:x="1536" fg:w="44"/><text x="80.9223%" y="1071.50">s..</text></g><g><title>[unknown] (39 samples, 2.05%)</title><rect x="80.9349%" y="1045" width="2.0483%" height="15" fill="rgb(224,166,26)" fg:x="1541" fg:w="39"/><text x="81.1849%" y="1055.50">[..</text></g><g><title>[unknown] (39 samples, 2.05%)</title><rect x="80.9349%" y="1029" width="2.0483%" height="15" fill="rgb(233,0,47)" fg:x="1541" fg:w="39"/><text x="81.1849%" y="1039.50">[..</text></g><g><title>[unknown] (39 samples, 2.05%)</title><rect x="80.9349%" y="1013" width="2.0483%" height="15" fill="rgb(253,80,5)" fg:x="1541" fg:w="39"/><text x="81.1849%" y="1023.50">[..</text></g><g><title>[unknown] (38 samples, 2.00%)</title><rect x="80.9874%" y="997" width="1.9958%" height="15" fill="rgb(214,133,25)" fg:x="1542" fg:w="38"/><text x="81.2374%" y="1007.50">[..</text></g><g><title>[unknown] (38 samples, 2.00%)</title><rect x="80.9874%" y="981" width="1.9958%" height="15" fill="rgb(209,27,14)" fg:x="1542" fg:w="38"/><text x="81.2374%" y="991.50">[..</text></g><g><title>[unknown] (34 samples, 1.79%)</title><rect x="81.1975%" y="965" width="1.7857%" height="15" fill="rgb(219,102,51)" fg:x="1546" fg:w="34"/><text x="81.4475%" y="975.50">[..</text></g><g><title>[unknown] (26 samples, 1.37%)</title><rect x="81.6176%" y="949" width="1.3655%" height="15" fill="rgb(237,18,16)" fg:x="1554" fg:w="26"/><text x="81.8676%" y="959.50"></text></g><g><title>[unknown] (22 samples, 1.16%)</title><rect x="81.8277%" y="933" width="1.1555%" height="15" fill="rgb(241,85,17)" fg:x="1558" fg:w="22"/><text x="82.0777%" y="943.50"></text></g><g><title>[unknown] (19 samples, 1.00%)</title><rect x="81.9853%" y="917" width="0.9979%" height="15" fill="rgb(236,90,42)" fg:x="1561" fg:w="19"/><text x="82.2353%" y="927.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_timeout (53 samples, 2.78%)</title><rect x="80.2521%" y="1109" width="2.7836%" height="15" fill="rgb(249,57,21)" fg:x="1528" fg:w="53"/><text x="80.5021%" y="1119.50">st..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (53 samples, 2.78%)</title><rect x="80.2521%" y="1093" width="2.7836%" height="15" fill="rgb(243,12,36)" fg:x="1528" fg:w="53"/><text x="80.5021%" y="1103.50">st..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.05%)</title><rect x="82.9832%" y="1077" width="0.0525%" height="15" fill="rgb(253,128,47)" fg:x="1580" fg:w="1"/><text x="83.2332%" y="1087.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (1 samples, 0.05%)</title><rect x="82.9832%" y="1061" width="0.0525%" height="15" fill="rgb(207,33,20)" fg:x="1580" fg:w="1"/><text x="83.2332%" y="1071.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.05%)</title><rect x="82.9832%" y="1045" width="0.0525%" height="15" fill="rgb(233,215,35)" fg:x="1580" fg:w="1"/><text x="83.2332%" y="1055.50"></text></g><g><title>syscall (1 samples, 0.05%)</title><rect x="82.9832%" y="1029" width="0.0525%" height="15" fill="rgb(249,188,52)" fg:x="1580" fg:w="1"/><text x="83.2332%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="82.9832%" y="1013" width="0.0525%" height="15" fill="rgb(225,12,32)" fg:x="1580" fg:w="1"/><text x="83.2332%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="82.9832%" y="997" width="0.0525%" height="15" fill="rgb(247,98,14)" fg:x="1580" fg:w="1"/><text x="83.2332%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="82.9832%" y="981" width="0.0525%" height="15" fill="rgb(247,219,48)" fg:x="1580" fg:w="1"/><text x="83.2332%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="82.9832%" y="965" width="0.0525%" height="15" fill="rgb(253,60,48)" fg:x="1580" fg:w="1"/><text x="83.2332%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="82.9832%" y="949" width="0.0525%" height="15" fill="rgb(245,15,52)" fg:x="1580" fg:w="1"/><text x="83.2332%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="82.9832%" y="933" width="0.0525%" height="15" fill="rgb(220,133,28)" fg:x="1580" fg:w="1"/><text x="83.2332%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="82.9832%" y="917" width="0.0525%" height="15" fill="rgb(217,180,4)" fg:x="1580" fg:w="1"/><text x="83.2332%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="82.9832%" y="901" width="0.0525%" height="15" fill="rgb(251,24,1)" fg:x="1580" fg:w="1"/><text x="83.2332%" y="911.50"></text></g><g><title>syscall (1 samples, 0.05%)</title><rect x="83.0357%" y="1109" width="0.0525%" height="15" fill="rgb(212,185,49)" fg:x="1581" fg:w="1"/><text x="83.2857%" y="1119.50"></text></g><g><title>std::panicking::try (1 samples, 0.05%)</title><rect x="83.1933%" y="1093" width="0.0525%" height="15" fill="rgb(215,175,22)" fg:x="1584" fg:w="1"/><text x="83.4433%" y="1103.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.05%)</title><rect x="83.1933%" y="1077" width="0.0525%" height="15" fill="rgb(250,205,14)" fg:x="1584" fg:w="1"/><text x="83.4433%" y="1087.50"></text></g><g><title>std::fs::File::set_len (4 samples, 0.21%)</title><rect x="83.3508%" y="1061" width="0.2101%" height="15" fill="rgb(225,211,22)" fg:x="1587" fg:w="4"/><text x="83.6008%" y="1071.50"></text></g><g><title>std::sys::unix::fs::File::truncate (4 samples, 0.21%)</title><rect x="83.3508%" y="1045" width="0.2101%" height="15" fill="rgb(251,179,42)" fg:x="1587" fg:w="4"/><text x="83.6008%" y="1055.50"></text></g><g><title>std::sys::unix::cvt_r (4 samples, 0.21%)</title><rect x="83.3508%" y="1029" width="0.2101%" height="15" fill="rgb(208,216,51)" fg:x="1587" fg:w="4"/><text x="83.6008%" y="1039.50"></text></g><g><title>std::sys::unix::fs::File::truncate::{{closure}} (4 samples, 0.21%)</title><rect x="83.3508%" y="1013" width="0.2101%" height="15" fill="rgb(235,36,11)" fg:x="1587" fg:w="4"/><text x="83.6008%" y="1023.50"></text></g><g><title>__ftruncate (4 samples, 0.21%)</title><rect x="83.3508%" y="997" width="0.2101%" height="15" fill="rgb(213,189,28)" fg:x="1587" fg:w="4"/><text x="83.6008%" y="1007.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="83.3508%" y="981" width="0.2101%" height="15" fill="rgb(227,203,42)" fg:x="1587" fg:w="4"/><text x="83.6008%" y="991.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="83.3508%" y="965" width="0.2101%" height="15" fill="rgb(244,72,36)" fg:x="1587" fg:w="4"/><text x="83.6008%" y="975.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="83.3508%" y="949" width="0.2101%" height="15" fill="rgb(213,53,17)" fg:x="1587" fg:w="4"/><text x="83.6008%" y="959.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="83.3508%" y="933" width="0.2101%" height="15" fill="rgb(207,167,3)" fg:x="1587" fg:w="4"/><text x="83.6008%" y="943.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="83.3508%" y="917" width="0.2101%" height="15" fill="rgb(216,98,30)" fg:x="1587" fg:w="4"/><text x="83.6008%" y="927.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="83.3508%" y="901" width="0.2101%" height="15" fill="rgb(236,123,15)" fg:x="1587" fg:w="4"/><text x="83.6008%" y="911.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="83.3508%" y="885" width="0.2101%" height="15" fill="rgb(248,81,50)" fg:x="1587" fg:w="4"/><text x="83.6008%" y="895.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="83.3508%" y="869" width="0.2101%" height="15" fill="rgb(214,120,4)" fg:x="1587" fg:w="4"/><text x="83.6008%" y="879.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="83.3508%" y="853" width="0.2101%" height="15" fill="rgb(208,179,34)" fg:x="1587" fg:w="4"/><text x="83.6008%" y="863.50"></text></g><g><title>[unknown] (4 samples, 0.21%)</title><rect x="83.3508%" y="837" width="0.2101%" height="15" fill="rgb(227,140,7)" fg:x="1587" fg:w="4"/><text x="83.6008%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="83.4559%" y="821" width="0.1050%" height="15" fill="rgb(214,22,6)" fg:x="1589" fg:w="2"/><text x="83.7059%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="83.4559%" y="805" width="0.1050%" height="15" fill="rgb(207,137,27)" fg:x="1589" fg:w="2"/><text x="83.7059%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="83.4559%" y="789" width="0.1050%" height="15" fill="rgb(210,8,46)" fg:x="1589" fg:w="2"/><text x="83.7059%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="83.4559%" y="773" width="0.1050%" height="15" fill="rgb(240,16,54)" fg:x="1589" fg:w="2"/><text x="83.7059%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="83.4559%" y="757" width="0.1050%" height="15" fill="rgb(211,209,29)" fg:x="1589" fg:w="2"/><text x="83.7059%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="83.5084%" y="741" width="0.0525%" height="15" fill="rgb(226,228,24)" fg:x="1590" fg:w="1"/><text x="83.7584%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="83.5084%" y="725" width="0.0525%" height="15" fill="rgb(222,84,9)" fg:x="1590" fg:w="1"/><text x="83.7584%" y="735.50"></text></g><g><title>std::fs::File::sync_data (187 samples, 9.82%)</title><rect x="83.5609%" y="1061" width="9.8214%" height="15" fill="rgb(234,203,30)" fg:x="1591" fg:w="187"/><text x="83.8109%" y="1071.50">std::fs::File:..</text></g><g><title>std::sys::unix::fs::File::datasync (185 samples, 9.72%)</title><rect x="83.6660%" y="1045" width="9.7164%" height="15" fill="rgb(238,109,14)" fg:x="1593" fg:w="185"/><text x="83.9160%" y="1055.50">std::sys::unix..</text></g><g><title>std::sys::unix::cvt_r (185 samples, 9.72%)</title><rect x="83.6660%" y="1029" width="9.7164%" height="15" fill="rgb(233,206,34)" fg:x="1593" fg:w="185"/><text x="83.9160%" y="1039.50">std::sys::unix..</text></g><g><title>std::sys::unix::fs::File::datasync::{{closure}} (185 samples, 9.72%)</title><rect x="83.6660%" y="1013" width="9.7164%" height="15" fill="rgb(220,167,47)" fg:x="1593" fg:w="185"/><text x="83.9160%" y="1023.50">std::sys::unix..</text></g><g><title>std::sys::unix::fs::File::datasync::os_datasync (185 samples, 9.72%)</title><rect x="83.6660%" y="997" width="9.7164%" height="15" fill="rgb(238,105,10)" fg:x="1593" fg:w="185"/><text x="83.9160%" y="1007.50">std::sys::unix..</text></g><g><title>fdatasync (184 samples, 9.66%)</title><rect x="83.7185%" y="981" width="9.6639%" height="15" fill="rgb(213,227,17)" fg:x="1594" fg:w="184"/><text x="83.9685%" y="991.50">fdatasync</text></g><g><title>[unknown] (177 samples, 9.30%)</title><rect x="84.0861%" y="965" width="9.2962%" height="15" fill="rgb(217,132,38)" fg:x="1601" fg:w="177"/><text x="84.3361%" y="975.50">[unknown]</text></g><g><title>[unknown] (177 samples, 9.30%)</title><rect x="84.0861%" y="949" width="9.2962%" height="15" fill="rgb(242,146,4)" fg:x="1601" fg:w="177"/><text x="84.3361%" y="959.50">[unknown]</text></g><g><title>[unknown] (177 samples, 9.30%)</title><rect x="84.0861%" y="933" width="9.2962%" height="15" fill="rgb(212,61,9)" fg:x="1601" fg:w="177"/><text x="84.3361%" y="943.50">[unknown]</text></g><g><title>[unknown] (174 samples, 9.14%)</title><rect x="84.2437%" y="917" width="9.1387%" height="15" fill="rgb(247,126,22)" fg:x="1604" fg:w="174"/><text x="84.4937%" y="927.50">[unknown]</text></g><g><title>[unknown] (173 samples, 9.09%)</title><rect x="84.2962%" y="901" width="9.0861%" height="15" fill="rgb(220,196,2)" fg:x="1605" fg:w="173"/><text x="84.5462%" y="911.50">[unknown]</text></g><g><title>[unknown] (167 samples, 8.77%)</title><rect x="84.6113%" y="885" width="8.7710%" height="15" fill="rgb(208,46,4)" fg:x="1611" fg:w="167"/><text x="84.8613%" y="895.50">[unknown]</text></g><g><title>[unknown] (164 samples, 8.61%)</title><rect x="84.7689%" y="869" width="8.6134%" height="15" fill="rgb(252,104,46)" fg:x="1614" fg:w="164"/><text x="85.0189%" y="879.50">[unknown]</text></g><g><title>[unknown] (159 samples, 8.35%)</title><rect x="85.0315%" y="853" width="8.3508%" height="15" fill="rgb(237,152,48)" fg:x="1619" fg:w="159"/><text x="85.2815%" y="863.50">[unknown]</text></g><g><title>[unknown] (153 samples, 8.04%)</title><rect x="85.3466%" y="837" width="8.0357%" height="15" fill="rgb(221,59,37)" fg:x="1625" fg:w="153"/><text x="85.5966%" y="847.50">[unknown]</text></g><g><title>[unknown] (131 samples, 6.88%)</title><rect x="86.5021%" y="821" width="6.8803%" height="15" fill="rgb(209,202,51)" fg:x="1647" fg:w="131"/><text x="86.7521%" y="831.50">[unknown]</text></g><g><title>[unknown] (106 samples, 5.57%)</title><rect x="87.8151%" y="805" width="5.5672%" height="15" fill="rgb(228,81,30)" fg:x="1672" fg:w="106"/><text x="88.0651%" y="815.50">[unknow..</text></g><g><title>[unknown] (101 samples, 5.30%)</title><rect x="88.0777%" y="789" width="5.3046%" height="15" fill="rgb(227,42,39)" fg:x="1677" fg:w="101"/><text x="88.3277%" y="799.50">[unkno..</text></g><g><title>[unknown] (86 samples, 4.52%)</title><rect x="88.8655%" y="773" width="4.5168%" height="15" fill="rgb(221,26,2)" fg:x="1692" fg:w="86"/><text x="89.1155%" y="783.50">[unkn..</text></g><g><title>[unknown] (59 samples, 3.10%)</title><rect x="90.2836%" y="757" width="3.0987%" height="15" fill="rgb(254,61,31)" fg:x="1719" fg:w="59"/><text x="90.5336%" y="767.50">[un..</text></g><g><title>[unknown] (47 samples, 2.47%)</title><rect x="90.9139%" y="741" width="2.4685%" height="15" fill="rgb(222,173,38)" fg:x="1731" fg:w="47"/><text x="91.1639%" y="751.50">[u..</text></g><g><title>[unknown] (37 samples, 1.94%)</title><rect x="91.4391%" y="725" width="1.9433%" height="15" fill="rgb(218,50,12)" fg:x="1741" fg:w="37"/><text x="91.6891%" y="735.50">[..</text></g><g><title>[unknown] (26 samples, 1.37%)</title><rect x="92.0168%" y="709" width="1.3655%" height="15" fill="rgb(223,88,40)" fg:x="1752" fg:w="26"/><text x="92.2668%" y="719.50"></text></g><g><title>[unknown] (19 samples, 1.00%)</title><rect x="92.3845%" y="693" width="0.9979%" height="15" fill="rgb(237,54,19)" fg:x="1759" fg:w="19"/><text x="92.6345%" y="703.50"></text></g><g><title>[unknown] (17 samples, 0.89%)</title><rect x="92.4895%" y="677" width="0.8929%" height="15" fill="rgb(251,129,25)" fg:x="1761" fg:w="17"/><text x="92.7395%" y="687.50"></text></g><g><title>[unknown] (15 samples, 0.79%)</title><rect x="92.5945%" y="661" width="0.7878%" height="15" fill="rgb(238,97,19)" fg:x="1763" fg:w="15"/><text x="92.8445%" y="671.50"></text></g><g><title>[unknown] (13 samples, 0.68%)</title><rect x="92.6996%" y="645" width="0.6828%" height="15" fill="rgb(240,169,18)" fg:x="1765" fg:w="13"/><text x="92.9496%" y="655.50"></text></g><g><title>[unknown] (10 samples, 0.53%)</title><rect x="92.8571%" y="629" width="0.5252%" height="15" fill="rgb(230,187,49)" fg:x="1768" fg:w="10"/><text x="93.1071%" y="639.50"></text></g><g><title>[unknown] (9 samples, 0.47%)</title><rect x="92.9097%" y="613" width="0.4727%" height="15" fill="rgb(209,44,26)" fg:x="1769" fg:w="9"/><text x="93.1597%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="93.0672%" y="597" width="0.3151%" height="15" fill="rgb(244,0,6)" fg:x="1772" fg:w="6"/><text x="93.3172%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.16%)</title><rect x="93.2248%" y="581" width="0.1576%" height="15" fill="rgb(248,18,21)" fg:x="1775" fg:w="3"/><text x="93.4748%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="93.2773%" y="565" width="0.1050%" height="15" fill="rgb(245,180,19)" fg:x="1776" fg:w="2"/><text x="93.5273%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.3298%" y="549" width="0.0525%" height="15" fill="rgb(252,118,36)" fg:x="1777" fg:w="1"/><text x="93.5798%" y="559.50"></text></g><g><title>[unknown] (89 samples, 4.67%)</title><rect x="93.3824%" y="965" width="4.6744%" height="15" fill="rgb(210,224,19)" fg:x="1778" fg:w="89"/><text x="93.6324%" y="975.50">[unkn..</text></g><g><title>[unknown] (89 samples, 4.67%)</title><rect x="93.3824%" y="949" width="4.6744%" height="15" fill="rgb(218,30,24)" fg:x="1778" fg:w="89"/><text x="93.6324%" y="959.50">[unkn..</text></g><g><title>[unknown] (87 samples, 4.57%)</title><rect x="93.4874%" y="933" width="4.5693%" height="15" fill="rgb(219,75,50)" fg:x="1780" fg:w="87"/><text x="93.7374%" y="943.50">[unkn..</text></g><g><title>[unknown] (83 samples, 4.36%)</title><rect x="93.6975%" y="917" width="4.3592%" height="15" fill="rgb(234,72,50)" fg:x="1784" fg:w="83"/><text x="93.9475%" y="927.50">[unkn..</text></g><g><title>[unknown] (81 samples, 4.25%)</title><rect x="93.8025%" y="901" width="4.2542%" height="15" fill="rgb(219,100,48)" fg:x="1786" fg:w="81"/><text x="94.0525%" y="911.50">[unkn..</text></g><g><title>[unknown] (80 samples, 4.20%)</title><rect x="93.8550%" y="885" width="4.2017%" height="15" fill="rgb(253,5,41)" fg:x="1787" fg:w="80"/><text x="94.1050%" y="895.50">[unkn..</text></g><g><title>[unknown] (80 samples, 4.20%)</title><rect x="93.8550%" y="869" width="4.2017%" height="15" fill="rgb(247,181,11)" fg:x="1787" fg:w="80"/><text x="94.1050%" y="879.50">[unkn..</text></g><g><title>[unknown] (76 samples, 3.99%)</title><rect x="94.0651%" y="853" width="3.9916%" height="15" fill="rgb(222,223,25)" fg:x="1791" fg:w="76"/><text x="94.3151%" y="863.50">[unk..</text></g><g><title>[unknown] (76 samples, 3.99%)</title><rect x="94.0651%" y="837" width="3.9916%" height="15" fill="rgb(214,198,28)" fg:x="1791" fg:w="76"/><text x="94.3151%" y="847.50">[unk..</text></g><g><title>[unknown] (75 samples, 3.94%)</title><rect x="94.1176%" y="821" width="3.9391%" height="15" fill="rgb(230,46,43)" fg:x="1792" fg:w="75"/><text x="94.3676%" y="831.50">[unk..</text></g><g><title>[unknown] (65 samples, 3.41%)</title><rect x="94.6429%" y="805" width="3.4139%" height="15" fill="rgb(233,65,53)" fg:x="1802" fg:w="65"/><text x="94.8929%" y="815.50">[un..</text></g><g><title>[unknown] (63 samples, 3.31%)</title><rect x="94.7479%" y="789" width="3.3088%" height="15" fill="rgb(221,121,27)" fg:x="1804" fg:w="63"/><text x="94.9979%" y="799.50">[un..</text></g><g><title>[unknown] (59 samples, 3.10%)</title><rect x="94.9580%" y="773" width="3.0987%" height="15" fill="rgb(247,70,47)" fg:x="1808" fg:w="59"/><text x="95.2080%" y="783.50">[un..</text></g><g><title>[unknown] (57 samples, 2.99%)</title><rect x="95.0630%" y="757" width="2.9937%" height="15" fill="rgb(228,85,35)" fg:x="1810" fg:w="57"/><text x="95.3130%" y="767.50">[un..</text></g><g><title>[unknown] (47 samples, 2.47%)</title><rect x="95.5882%" y="741" width="2.4685%" height="15" fill="rgb(209,50,18)" fg:x="1820" fg:w="47"/><text x="95.8382%" y="751.50">[u..</text></g><g><title>[unknown] (42 samples, 2.21%)</title><rect x="95.8508%" y="725" width="2.2059%" height="15" fill="rgb(250,19,35)" fg:x="1825" fg:w="42"/><text x="96.1008%" y="735.50">[..</text></g><g><title>[unknown] (27 samples, 1.42%)</title><rect x="96.6387%" y="709" width="1.4181%" height="15" fill="rgb(253,107,29)" fg:x="1840" fg:w="27"/><text x="96.8887%" y="719.50"></text></g><g><title>[unknown] (15 samples, 0.79%)</title><rect x="97.2689%" y="693" width="0.7878%" height="15" fill="rgb(252,179,29)" fg:x="1852" fg:w="15"/><text x="97.5189%" y="703.50"></text></g><g><title>[unknown] (7 samples, 0.37%)</title><rect x="97.6891%" y="677" width="0.3676%" height="15" fill="rgb(238,194,6)" fg:x="1860" fg:w="7"/><text x="97.9391%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="97.9517%" y="661" width="0.1050%" height="15" fill="rgb(238,164,29)" fg:x="1865" fg:w="2"/><text x="98.2017%" y="671.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (281 samples, 14.76%)</title><rect x="83.3508%" y="1077" width="14.7584%" height="15" fill="rgb(224,25,9)" fg:x="1587" fg:w="281"/><text x="83.6008%" y="1087.50">&lt;tokio::runtime::blocki..</text></g><g><title>std::io::Write::write_all (90 samples, 4.73%)</title><rect x="93.3824%" y="1061" width="4.7269%" height="15" fill="rgb(244,153,23)" fg:x="1778" fg:w="90"/><text x="93.6324%" y="1071.50">std::i..</text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (90 samples, 4.73%)</title><rect x="93.3824%" y="1045" width="4.7269%" height="15" fill="rgb(212,203,14)" fg:x="1778" fg:w="90"/><text x="93.6324%" y="1055.50">&lt;&amp;std:..</text></g><g><title>std::sys::unix::fs::File::write (90 samples, 4.73%)</title><rect x="93.3824%" y="1029" width="4.7269%" height="15" fill="rgb(220,164,20)" fg:x="1778" fg:w="90"/><text x="93.6324%" y="1039.50">std::s..</text></g><g><title>std::sys::unix::fd::FileDesc::write (90 samples, 4.73%)</title><rect x="93.3824%" y="1013" width="4.7269%" height="15" fill="rgb(222,203,48)" fg:x="1778" fg:w="90"/><text x="93.6324%" y="1023.50">std::s..</text></g><g><title>__libc_write (90 samples, 4.73%)</title><rect x="93.3824%" y="997" width="4.7269%" height="15" fill="rgb(215,159,22)" fg:x="1778" fg:w="90"/><text x="93.6324%" y="1007.50">__libc..</text></g><g><title>__libc_write (90 samples, 4.73%)</title><rect x="93.3824%" y="981" width="4.7269%" height="15" fill="rgb(216,183,47)" fg:x="1778" fg:w="90"/><text x="93.6324%" y="991.50">__libc..</text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="98.0567%" y="965" width="0.0525%" height="15" fill="rgb(229,195,25)" fg:x="1867" fg:w="1"/><text x="98.3067%" y="975.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="98.1092%" y="1077" width="0.1050%" height="15" fill="rgb(224,132,51)" fg:x="1868" fg:w="2"/><text x="98.3592%" y="1087.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (287 samples, 15.07%)</title><rect x="83.2458%" y="1093" width="15.0735%" height="15" fill="rgb(240,63,7)" fg:x="1585" fg:w="287"/><text x="83.4958%" y="1103.50">tokio::runtime::task::c..</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (2 samples, 0.11%)</title><rect x="98.2143%" y="1077" width="0.1050%" height="15" fill="rgb(249,182,41)" fg:x="1870" fg:w="2"/><text x="98.4643%" y="1087.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.05%)</title><rect x="98.3193%" y="1077" width="0.0525%" height="15" fill="rgb(243,47,26)" fg:x="1872" fg:w="1"/><text x="98.5693%" y="1087.50"></text></g><g><title>syscall (27 samples, 1.42%)</title><rect x="98.3718%" y="1077" width="1.4181%" height="15" fill="rgb(233,48,2)" fg:x="1873" fg:w="27"/><text x="98.6218%" y="1087.50"></text></g><g><title>[unknown] (21 samples, 1.10%)</title><rect x="98.6870%" y="1061" width="1.1029%" height="15" fill="rgb(244,165,34)" fg:x="1879" fg:w="21"/><text x="98.9370%" y="1071.50"></text></g><g><title>[unknown] (21 samples, 1.10%)</title><rect x="98.6870%" y="1045" width="1.1029%" height="15" fill="rgb(207,89,7)" fg:x="1879" fg:w="21"/><text x="98.9370%" y="1055.50"></text></g><g><title>[unknown] (20 samples, 1.05%)</title><rect x="98.7395%" y="1029" width="1.0504%" height="15" fill="rgb(244,117,36)" fg:x="1880" fg:w="20"/><text x="98.9895%" y="1039.50"></text></g><g><title>[unknown] (17 samples, 0.89%)</title><rect x="98.8971%" y="1013" width="0.8929%" height="15" fill="rgb(226,144,34)" fg:x="1883" fg:w="17"/><text x="99.1471%" y="1023.50"></text></g><g><title>[unknown] (16 samples, 0.84%)</title><rect x="98.9496%" y="997" width="0.8403%" height="15" fill="rgb(213,23,19)" fg:x="1884" fg:w="16"/><text x="99.1996%" y="1007.50"></text></g><g><title>[unknown] (15 samples, 0.79%)</title><rect x="99.0021%" y="981" width="0.7878%" height="15" fill="rgb(217,75,12)" fg:x="1885" fg:w="15"/><text x="99.2521%" y="991.50"></text></g><g><title>[unknown] (12 samples, 0.63%)</title><rect x="99.1597%" y="965" width="0.6303%" height="15" fill="rgb(224,159,17)" fg:x="1888" fg:w="12"/><text x="99.4097%" y="975.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (2 samples, 0.11%)</title><rect x="99.7899%" y="1077" width="0.1050%" height="15" fill="rgb(217,118,1)" fg:x="1900" fg:w="2"/><text x="100.0399%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::inject::Inject&lt;T&gt;::push (2 samples, 0.11%)</title><rect x="99.7899%" y="1061" width="0.1050%" height="15" fill="rgb(232,180,48)" fg:x="1900" fg:w="2"/><text x="100.0399%" y="1071.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (31 samples, 1.63%)</title><rect x="98.3193%" y="1093" width="1.6282%" height="15" fill="rgb(230,27,33)" fg:x="1872" fg:w="31"/><text x="98.5693%" y="1103.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (1 samples, 0.05%)</title><rect x="99.8950%" y="1077" width="0.0525%" height="15" fill="rgb(205,31,21)" fg:x="1902" fg:w="1"/><text x="100.1450%" y="1087.50"></text></g><g><title>all (1,904 samples, 100%)</title><rect x="0.0000%" y="1269" width="100.0000%" height="15" fill="rgb(253,59,4)" fg:x="0" fg:w="1904"/><text x="0.2500%" y="1279.50"></text></g><g><title>tokio-runtime-w (379 samples, 19.91%)</title><rect x="80.0945%" y="1253" width="19.9055%" height="15" fill="rgb(224,201,9)" fg:x="1525" fg:w="379"/><text x="80.3445%" y="1263.50">tokio-runtime-w</text></g><g><title>__GI___clone (379 samples, 19.91%)</title><rect x="80.0945%" y="1237" width="19.9055%" height="15" fill="rgb(229,206,30)" fg:x="1525" fg:w="379"/><text x="80.3445%" y="1247.50">__GI___clone</text></g><g><title>start_thread (379 samples, 19.91%)</title><rect x="80.0945%" y="1221" width="19.9055%" height="15" fill="rgb(212,67,47)" fg:x="1525" fg:w="379"/><text x="80.3445%" y="1231.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (378 samples, 19.85%)</title><rect x="80.1471%" y="1205" width="19.8529%" height="15" fill="rgb(211,96,50)" fg:x="1526" fg:w="378"/><text x="80.3971%" y="1215.50">std::sys::unix::thread::Thread:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (378 samples, 19.85%)</title><rect x="80.1471%" y="1189" width="19.8529%" height="15" fill="rgb(252,114,18)" fg:x="1526" fg:w="378"/><text x="80.3971%" y="1199.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (378 samples, 19.85%)</title><rect x="80.1471%" y="1173" width="19.8529%" height="15" fill="rgb(223,58,37)" fg:x="1526" fg:w="378"/><text x="80.3971%" y="1183.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (378 samples, 19.85%)</title><rect x="80.1471%" y="1157" width="19.8529%" height="15" fill="rgb(237,70,4)" fg:x="1526" fg:w="378"/><text x="80.3971%" y="1167.50">core::ops::function::FnOnce::ca..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (378 samples, 19.85%)</title><rect x="80.1471%" y="1141" width="19.8529%" height="15" fill="rgb(244,85,46)" fg:x="1526" fg:w="378"/><text x="80.3971%" y="1151.50">std::sys_common::backtrace::__r..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (378 samples, 19.85%)</title><rect x="80.1471%" y="1125" width="19.8529%" height="15" fill="rgb(223,39,52)" fg:x="1526" fg:w="378"/><text x="80.3971%" y="1135.50">tokio::runtime::blocking::pool:..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (322 samples, 16.91%)</title><rect x="83.0882%" y="1109" width="16.9118%" height="15" fill="rgb(218,200,14)" fg:x="1582" fg:w="322"/><text x="83.3382%" y="1119.50">tokio::runtime::task::harn..</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (1 samples, 0.05%)</title><rect x="99.9475%" y="1093" width="0.0525%" height="15" fill="rgb(208,171,16)" fg:x="1903" fg:w="1"/><text x="100.1975%" y="1103.50"></text></g></svg></svg>