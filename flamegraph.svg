<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1350" onload="init(evt)" viewBox="0 0 1200 1350" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1350" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1333.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1333.00"> </text><svg id="frames" x="10" width="1180" total_samples="8806"><g><title>_int_free (1 samples, 0.01%)</title><rect x="0.0795%" y="965" width="0.0114%" height="15" fill="rgb(227,0,7)" fg:x="7" fg:w="1"/><text x="0.3295%" y="975.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="0.1136%" y="949" width="0.0114%" height="15" fill="rgb(217,0,24)" fg:x="10" fg:w="1"/><text x="0.3636%" y="959.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="0.1590%" y="933" width="0.1817%" height="15" fill="rgb(221,193,54)" fg:x="14" fg:w="16"/><text x="0.4090%" y="943.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="0.1590%" y="917" width="0.1817%" height="15" fill="rgb(248,212,6)" fg:x="14" fg:w="16"/><text x="0.4090%" y="927.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="0.1590%" y="901" width="0.1817%" height="15" fill="rgb(208,68,35)" fg:x="14" fg:w="16"/><text x="0.4090%" y="911.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="0.1931%" y="885" width="0.1476%" height="15" fill="rgb(232,128,0)" fg:x="17" fg:w="13"/><text x="0.4431%" y="895.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="0.1931%" y="869" width="0.1476%" height="15" fill="rgb(207,160,47)" fg:x="17" fg:w="13"/><text x="0.4431%" y="879.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="0.1931%" y="853" width="0.1476%" height="15" fill="rgb(228,23,34)" fg:x="17" fg:w="13"/><text x="0.4431%" y="863.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="0.1931%" y="837" width="0.1476%" height="15" fill="rgb(218,30,26)" fg:x="17" fg:w="13"/><text x="0.4431%" y="847.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="0.2044%" y="821" width="0.1363%" height="15" fill="rgb(220,122,19)" fg:x="18" fg:w="12"/><text x="0.4544%" y="831.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="0.2158%" y="805" width="0.1249%" height="15" fill="rgb(250,228,42)" fg:x="19" fg:w="11"/><text x="0.4658%" y="815.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="0.2385%" y="789" width="0.1022%" height="15" fill="rgb(240,193,28)" fg:x="21" fg:w="9"/><text x="0.4885%" y="799.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="0.2498%" y="773" width="0.0908%" height="15" fill="rgb(216,20,37)" fg:x="22" fg:w="8"/><text x="0.4998%" y="783.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (38 samples, 0.43%)</title><rect x="0.0114%" y="1061" width="0.4315%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="38"/><text x="0.2614%" y="1071.50"></text></g><g><title>__rdl_alloc (37 samples, 0.42%)</title><rect x="0.0227%" y="1045" width="0.4202%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="37"/><text x="0.2727%" y="1055.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (37 samples, 0.42%)</title><rect x="0.0227%" y="1029" width="0.4202%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="37"/><text x="0.2727%" y="1039.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (37 samples, 0.42%)</title><rect x="0.0227%" y="1013" width="0.4202%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="37"/><text x="0.2727%" y="1023.50"></text></g><g><title>__posix_memalign (37 samples, 0.42%)</title><rect x="0.0227%" y="997" width="0.4202%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="37"/><text x="0.2727%" y="1007.50"></text></g><g><title>_int_memalign (36 samples, 0.41%)</title><rect x="0.0341%" y="981" width="0.4088%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="36"/><text x="0.2841%" y="991.50"></text></g><g><title>_int_malloc (31 samples, 0.35%)</title><rect x="0.0908%" y="965" width="0.3520%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="31"/><text x="0.3408%" y="975.50"></text></g><g><title>sysmalloc (28 samples, 0.32%)</title><rect x="0.1249%" y="949" width="0.3180%" height="15" fill="rgb(249,33,26)" fg:x="11" fg:w="28"/><text x="0.3749%" y="959.50"></text></g><g><title>__GI___mprotect (9 samples, 0.10%)</title><rect x="0.3407%" y="933" width="0.1022%" height="15" fill="rgb(235,183,28)" fg:x="30" fg:w="9"/><text x="0.5907%" y="943.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.3861%" y="917" width="0.0568%" height="15" fill="rgb(221,5,38)" fg:x="34" fg:w="5"/><text x="0.6361%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.3861%" y="901" width="0.0568%" height="15" fill="rgb(247,18,42)" fg:x="34" fg:w="5"/><text x="0.6361%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.3861%" y="885" width="0.0568%" height="15" fill="rgb(241,131,45)" fg:x="34" fg:w="5"/><text x="0.6361%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.3861%" y="869" width="0.0568%" height="15" fill="rgb(249,31,29)" fg:x="34" fg:w="5"/><text x="0.6361%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.3861%" y="853" width="0.0568%" height="15" fill="rgb(225,111,53)" fg:x="34" fg:w="5"/><text x="0.6361%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.3861%" y="837" width="0.0568%" height="15" fill="rgb(238,160,17)" fg:x="34" fg:w="5"/><text x="0.6361%" y="847.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="0.3975%" y="821" width="0.0454%" height="15" fill="rgb(214,148,48)" fg:x="35" fg:w="4"/><text x="0.6475%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="0.4088%" y="805" width="0.0341%" height="15" fill="rgb(232,36,49)" fg:x="36" fg:w="3"/><text x="0.6588%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.4202%" y="789" width="0.0227%" height="15" fill="rgb(209,103,24)" fg:x="37" fg:w="2"/><text x="0.6702%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.4202%" y="773" width="0.0227%" height="15" fill="rgb(229,88,8)" fg:x="37" fg:w="2"/><text x="0.6702%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.4202%" y="757" width="0.0227%" height="15" fill="rgb(213,181,19)" fg:x="37" fg:w="2"/><text x="0.6702%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.4315%" y="741" width="0.0114%" height="15" fill="rgb(254,191,54)" fg:x="38" fg:w="1"/><text x="0.6815%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.4315%" y="725" width="0.0114%" height="15" fill="rgb(241,83,37)" fg:x="38" fg:w="1"/><text x="0.6815%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.4315%" y="709" width="0.0114%" height="15" fill="rgb(233,36,39)" fg:x="38" fg:w="1"/><text x="0.6815%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.4315%" y="693" width="0.0114%" height="15" fill="rgb(226,3,54)" fg:x="38" fg:w="1"/><text x="0.6815%" y="703.50"></text></g><g><title>yadb::storage::Tree::get (43 samples, 0.49%)</title><rect x="0.0000%" y="1125" width="0.4883%" height="15" fill="rgb(245,192,40)" fg:x="0" fg:w="43"/><text x="0.2500%" y="1135.50"></text></g><g><title>tokio::task::spawn::spawn (43 samples, 0.49%)</title><rect x="0.0000%" y="1109" width="0.4883%" height="15" fill="rgb(238,167,29)" fg:x="0" fg:w="43"/><text x="0.2500%" y="1119.50"></text></g><g><title>tokio::runtime::context::current::with_current (43 samples, 0.49%)</title><rect x="0.0000%" y="1093" width="0.4883%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="43"/><text x="0.2500%" y="1103.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (43 samples, 0.49%)</title><rect x="0.0000%" y="1077" width="0.4883%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="43"/><text x="0.2500%" y="1087.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (4 samples, 0.05%)</title><rect x="0.4429%" y="1061" width="0.0454%" height="15" fill="rgb(208,69,12)" fg:x="39" fg:w="4"/><text x="0.6929%" y="1071.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (1 samples, 0.01%)</title><rect x="0.4769%" y="1045" width="0.0114%" height="15" fill="rgb(235,93,37)" fg:x="42" fg:w="1"/><text x="0.7269%" y="1055.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="0.4883%" y="1093" width="0.0227%" height="15" fill="rgb(213,116,39)" fg:x="43" fg:w="2"/><text x="0.7383%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (46 samples, 0.52%)</title><rect x="0.0000%" y="1157" width="0.5224%" height="15" fill="rgb(222,207,29)" fg:x="0" fg:w="46"/><text x="0.2500%" y="1167.50"></text></g><g><title>test_storage::split_bench::{{closure}} (46 samples, 0.52%)</title><rect x="0.0000%" y="1141" width="0.5224%" height="15" fill="rgb(206,96,30)" fg:x="0" fg:w="46"/><text x="0.2500%" y="1151.50"></text></g><g><title>yadb::storage::Tree::put (3 samples, 0.03%)</title><rect x="0.4883%" y="1125" width="0.0341%" height="15" fill="rgb(218,138,4)" fg:x="43" fg:w="3"/><text x="0.7383%" y="1135.50"></text></g><g><title>tokio::task::spawn::spawn (3 samples, 0.03%)</title><rect x="0.4883%" y="1109" width="0.0341%" height="15" fill="rgb(250,191,14)" fg:x="43" fg:w="3"/><text x="0.7383%" y="1119.50"></text></g><g><title>tokio::runtime::context::current::with_current (1 samples, 0.01%)</title><rect x="0.5110%" y="1093" width="0.0114%" height="15" fill="rgb(239,60,40)" fg:x="45" fg:w="1"/><text x="0.7610%" y="1103.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all (1 samples, 0.01%)</title><rect x="0.5224%" y="1077" width="0.0114%" height="15" fill="rgb(206,27,48)" fg:x="46" fg:w="1"/><text x="0.7724%" y="1087.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all_modern (1 samples, 0.01%)</title><rect x="0.5224%" y="1061" width="0.0114%" height="15" fill="rgb(225,35,8)" fg:x="46" fg:w="1"/><text x="0.7724%" y="1071.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.01%)</title><rect x="0.5224%" y="1045" width="0.0114%" height="15" fill="rgb(250,213,24)" fg:x="46" fg:w="1"/><text x="0.7724%" y="1055.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.01%)</title><rect x="0.5224%" y="1029" width="0.0114%" height="15" fill="rgb(247,123,22)" fg:x="46" fg:w="1"/><text x="0.7724%" y="1039.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all_modern::{{closure}} (1 samples, 0.01%)</title><rect x="0.5224%" y="1013" width="0.0114%" height="15" fill="rgb(231,138,38)" fg:x="46" fg:w="1"/><text x="0.7724%" y="1023.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all_recursive (1 samples, 0.01%)</title><rect x="0.5224%" y="997" width="0.0114%" height="15" fill="rgb(231,145,46)" fg:x="46" fg:w="1"/><text x="0.7724%" y="1007.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::fdreaddir (1 samples, 0.01%)</title><rect x="0.5224%" y="981" width="0.0114%" height="15" fill="rgb(251,118,11)" fg:x="46" fg:w="1"/><text x="0.7724%" y="991.50"></text></g><g><title>__fdopendir (1 samples, 0.01%)</title><rect x="0.5224%" y="965" width="0.0114%" height="15" fill="rgb(217,147,25)" fg:x="46" fg:w="1"/><text x="0.7724%" y="975.50"></text></g><g><title>__GI___fxstat (1 samples, 0.01%)</title><rect x="0.5224%" y="949" width="0.0114%" height="15" fill="rgb(247,81,37)" fg:x="46" fg:w="1"/><text x="0.7724%" y="959.50"></text></g><g><title>yadb::storage::Tree::commit_header (1 samples, 0.01%)</title><rect x="0.5337%" y="1077" width="0.0114%" height="15" fill="rgb(209,12,38)" fg:x="47" fg:w="1"/><text x="0.7837%" y="1087.50"></text></g><g><title>std::fs::File::create (1 samples, 0.01%)</title><rect x="0.5337%" y="1061" width="0.0114%" height="15" fill="rgb(227,1,9)" fg:x="47" fg:w="1"/><text x="0.7837%" y="1071.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.01%)</title><rect x="0.5337%" y="1045" width="0.0114%" height="15" fill="rgb(248,47,43)" fg:x="47" fg:w="1"/><text x="0.7837%" y="1055.50"></text></g><g><title>std::sys::unix::fs::File::open (1 samples, 0.01%)</title><rect x="0.5337%" y="1029" width="0.0114%" height="15" fill="rgb(221,10,30)" fg:x="47" fg:w="1"/><text x="0.7837%" y="1039.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.01%)</title><rect x="0.5337%" y="1013" width="0.0114%" height="15" fill="rgb(210,229,1)" fg:x="47" fg:w="1"/><text x="0.7837%" y="1023.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.01%)</title><rect x="0.5337%" y="997" width="0.0114%" height="15" fill="rgb(222,148,37)" fg:x="47" fg:w="1"/><text x="0.7837%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (1 samples, 0.01%)</title><rect x="0.5337%" y="981" width="0.0114%" height="15" fill="rgb(234,67,33)" fg:x="47" fg:w="1"/><text x="0.7837%" y="991.50"></text></g><g><title>std::sys::unix::fs::File::open_c (1 samples, 0.01%)</title><rect x="0.5337%" y="965" width="0.0114%" height="15" fill="rgb(247,98,35)" fg:x="47" fg:w="1"/><text x="0.7837%" y="975.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.01%)</title><rect x="0.5337%" y="949" width="0.0114%" height="15" fill="rgb(247,138,52)" fg:x="47" fg:w="1"/><text x="0.7837%" y="959.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.01%)</title><rect x="0.5337%" y="933" width="0.0114%" height="15" fill="rgb(213,79,30)" fg:x="47" fg:w="1"/><text x="0.7837%" y="943.50"></text></g><g><title>__libc_open64 (1 samples, 0.01%)</title><rect x="0.5337%" y="917" width="0.0114%" height="15" fill="rgb(246,177,23)" fg:x="47" fg:w="1"/><text x="0.7837%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.5337%" y="901" width="0.0114%" height="15" fill="rgb(230,62,27)" fg:x="47" fg:w="1"/><text x="0.7837%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.5337%" y="885" width="0.0114%" height="15" fill="rgb(216,154,8)" fg:x="47" fg:w="1"/><text x="0.7837%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.5337%" y="869" width="0.0114%" height="15" fill="rgb(244,35,45)" fg:x="47" fg:w="1"/><text x="0.7837%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.5337%" y="853" width="0.0114%" height="15" fill="rgb(251,115,12)" fg:x="47" fg:w="1"/><text x="0.7837%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.5337%" y="837" width="0.0114%" height="15" fill="rgb(240,54,50)" fg:x="47" fg:w="1"/><text x="0.7837%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.5337%" y="821" width="0.0114%" height="15" fill="rgb(233,84,52)" fg:x="47" fg:w="1"/><text x="0.7837%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.5337%" y="805" width="0.0114%" height="15" fill="rgb(207,117,47)" fg:x="47" fg:w="1"/><text x="0.7837%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.5337%" y="789" width="0.0114%" height="15" fill="rgb(249,43,39)" fg:x="47" fg:w="1"/><text x="0.7837%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.5337%" y="773" width="0.0114%" height="15" fill="rgb(209,38,44)" fg:x="47" fg:w="1"/><text x="0.7837%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.5337%" y="757" width="0.0114%" height="15" fill="rgb(236,212,23)" fg:x="47" fg:w="1"/><text x="0.7837%" y="767.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (15 samples, 0.17%)</title><rect x="0.5792%" y="1029" width="0.1703%" height="15" fill="rgb(242,79,21)" fg:x="51" fg:w="15"/><text x="0.8292%" y="1039.50"></text></g><g><title>std::sys::unix::fs::File::seek (15 samples, 0.17%)</title><rect x="0.5792%" y="1013" width="0.1703%" height="15" fill="rgb(211,96,35)" fg:x="51" fg:w="15"/><text x="0.8292%" y="1023.50"></text></g><g><title>__lseek64 (15 samples, 0.17%)</title><rect x="0.5792%" y="997" width="0.1703%" height="15" fill="rgb(253,215,40)" fg:x="51" fg:w="15"/><text x="0.8292%" y="1007.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="0.6586%" y="981" width="0.0908%" height="15" fill="rgb(211,81,21)" fg:x="58" fg:w="8"/><text x="0.9086%" y="991.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="0.6586%" y="965" width="0.0908%" height="15" fill="rgb(208,190,38)" fg:x="58" fg:w="8"/><text x="0.9086%" y="975.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="0.6700%" y="949" width="0.0795%" height="15" fill="rgb(235,213,38)" fg:x="59" fg:w="7"/><text x="0.9200%" y="959.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="0.7154%" y="933" width="0.0341%" height="15" fill="rgb(237,122,38)" fg:x="63" fg:w="3"/><text x="0.9654%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="0.7154%" y="917" width="0.0341%" height="15" fill="rgb(244,218,35)" fg:x="63" fg:w="3"/><text x="0.9654%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.7381%" y="901" width="0.0114%" height="15" fill="rgb(240,68,47)" fg:x="65" fg:w="1"/><text x="0.9881%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.7381%" y="885" width="0.0114%" height="15" fill="rgb(210,16,53)" fg:x="65" fg:w="1"/><text x="0.9881%" y="895.50"></text></g><g><title>__calloc (13 samples, 0.15%)</title><rect x="0.7608%" y="1013" width="0.1476%" height="15" fill="rgb(235,124,12)" fg:x="67" fg:w="13"/><text x="1.0108%" y="1023.50"></text></g><g><title>_int_malloc (11 samples, 0.12%)</title><rect x="0.7836%" y="997" width="0.1249%" height="15" fill="rgb(224,169,11)" fg:x="69" fg:w="11"/><text x="1.0336%" y="1007.50"></text></g><g><title>malloc_consolidate (3 samples, 0.03%)</title><rect x="0.8744%" y="981" width="0.0341%" height="15" fill="rgb(250,166,2)" fg:x="77" fg:w="3"/><text x="1.1244%" y="991.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="0.9085%" y="1013" width="0.0114%" height="15" fill="rgb(242,216,29)" fg:x="80" fg:w="1"/><text x="1.1585%" y="1023.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="0.9198%" y="1013" width="0.0114%" height="15" fill="rgb(230,116,27)" fg:x="81" fg:w="1"/><text x="1.1698%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.9312%" y="1013" width="0.0114%" height="15" fill="rgb(228,99,48)" fg:x="82" fg:w="1"/><text x="1.1812%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.9312%" y="997" width="0.0114%" height="15" fill="rgb(253,11,6)" fg:x="82" fg:w="1"/><text x="1.1812%" y="1007.50"></text></g><g><title>&lt;yadb::storage::table::Table as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.62%)</title><rect x="0.5792%" y="1045" width="0.6246%" height="15" fill="rgb(247,143,39)" fg:x="51" fg:w="55"/><text x="0.8292%" y="1055.50"></text></g><g><title>yadb::storage::table::DataBlock::deserialize (40 samples, 0.45%)</title><rect x="0.7495%" y="1029" width="0.4542%" height="15" fill="rgb(236,97,10)" fg:x="66" fg:w="40"/><text x="0.9995%" y="1039.50"></text></g><g><title>std::io::default_read_exact (23 samples, 0.26%)</title><rect x="0.9425%" y="1013" width="0.2612%" height="15" fill="rgb(233,208,19)" fg:x="83" fg:w="23"/><text x="1.1925%" y="1023.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (23 samples, 0.26%)</title><rect x="0.9425%" y="997" width="0.2612%" height="15" fill="rgb(216,164,2)" fg:x="83" fg:w="23"/><text x="1.1925%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::read (23 samples, 0.26%)</title><rect x="0.9425%" y="981" width="0.2612%" height="15" fill="rgb(220,129,5)" fg:x="83" fg:w="23"/><text x="1.1925%" y="991.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (23 samples, 0.26%)</title><rect x="0.9425%" y="965" width="0.2612%" height="15" fill="rgb(242,17,10)" fg:x="83" fg:w="23"/><text x="1.1925%" y="975.50"></text></g><g><title>__libc_read (23 samples, 0.26%)</title><rect x="0.9425%" y="949" width="0.2612%" height="15" fill="rgb(242,107,0)" fg:x="83" fg:w="23"/><text x="1.1925%" y="959.50"></text></g><g><title>__libc_read (23 samples, 0.26%)</title><rect x="0.9425%" y="933" width="0.2612%" height="15" fill="rgb(251,28,31)" fg:x="83" fg:w="23"/><text x="1.1925%" y="943.50"></text></g><g><title>[unknown] (17 samples, 0.19%)</title><rect x="1.0107%" y="917" width="0.1931%" height="15" fill="rgb(233,223,10)" fg:x="89" fg:w="17"/><text x="1.2607%" y="927.50"></text></g><g><title>[unknown] (17 samples, 0.19%)</title><rect x="1.0107%" y="901" width="0.1931%" height="15" fill="rgb(215,21,27)" fg:x="89" fg:w="17"/><text x="1.2607%" y="911.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="1.0220%" y="885" width="0.1817%" height="15" fill="rgb(232,23,21)" fg:x="90" fg:w="16"/><text x="1.2720%" y="895.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="1.0561%" y="869" width="0.1476%" height="15" fill="rgb(244,5,23)" fg:x="93" fg:w="13"/><text x="1.3061%" y="879.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="1.0675%" y="853" width="0.1363%" height="15" fill="rgb(226,81,46)" fg:x="94" fg:w="12"/><text x="1.3175%" y="863.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="1.0788%" y="837" width="0.1249%" height="15" fill="rgb(247,70,30)" fg:x="95" fg:w="11"/><text x="1.3288%" y="847.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="1.0788%" y="821" width="0.1249%" height="15" fill="rgb(212,68,19)" fg:x="95" fg:w="11"/><text x="1.3288%" y="831.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="1.0902%" y="805" width="0.1136%" height="15" fill="rgb(240,187,13)" fg:x="96" fg:w="10"/><text x="1.3402%" y="815.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="1.0902%" y="789" width="0.1136%" height="15" fill="rgb(223,113,26)" fg:x="96" fg:w="10"/><text x="1.3402%" y="799.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="1.0902%" y="773" width="0.1136%" height="15" fill="rgb(206,192,2)" fg:x="96" fg:w="10"/><text x="1.3402%" y="783.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="1.1583%" y="757" width="0.0454%" height="15" fill="rgb(241,108,4)" fg:x="102" fg:w="4"/><text x="1.4083%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="1.1810%" y="741" width="0.0227%" height="15" fill="rgb(247,173,49)" fg:x="104" fg:w="2"/><text x="1.4310%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="1.1924%" y="725" width="0.0114%" height="15" fill="rgb(224,114,35)" fg:x="105" fg:w="1"/><text x="1.4424%" y="735.50"></text></g><g><title>&lt;yadb::storage::table::TableNum as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="1.2151%" y="1029" width="0.0114%" height="15" fill="rgb(245,159,27)" fg:x="107" fg:w="1"/><text x="1.4651%" y="1039.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (3 samples, 0.03%)</title><rect x="1.2037%" y="1045" width="0.0341%" height="15" fill="rgb(245,172,44)" fg:x="106" fg:w="3"/><text x="1.4537%" y="1055.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="1.2264%" y="1029" width="0.0114%" height="15" fill="rgb(236,23,11)" fg:x="108" fg:w="1"/><text x="1.4764%" y="1039.50"></text></g><g><title>&lt;yadb::storage::table::MergedTableIterators as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.72%)</title><rect x="0.5451%" y="1061" width="0.7154%" height="15" fill="rgb(205,117,38)" fg:x="48" fg:w="63"/><text x="0.7951%" y="1071.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (2 samples, 0.02%)</title><rect x="1.2378%" y="1045" width="0.0227%" height="15" fill="rgb(237,72,25)" fg:x="109" fg:w="2"/><text x="1.4878%" y="1055.50"></text></g><g><title>&lt;yadb::storage::table::TableNum as core::cmp::Ord&gt;::cmp (2 samples, 0.02%)</title><rect x="1.2378%" y="1029" width="0.0227%" height="15" fill="rgb(244,70,9)" fg:x="109" fg:w="2"/><text x="1.4878%" y="1039.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.14%)</title><rect x="1.2605%" y="997" width="0.1363%" height="15" fill="rgb(217,125,39)" fg:x="111" fg:w="12"/><text x="1.5105%" y="1007.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="1.3286%" y="981" width="0.0681%" height="15" fill="rgb(235,36,10)" fg:x="117" fg:w="6"/><text x="1.5786%" y="991.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="1.3286%" y="965" width="0.0681%" height="15" fill="rgb(251,123,47)" fg:x="117" fg:w="6"/><text x="1.5786%" y="975.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="1.3286%" y="949" width="0.0681%" height="15" fill="rgb(221,13,13)" fg:x="117" fg:w="6"/><text x="1.5786%" y="959.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="1.3400%" y="933" width="0.0568%" height="15" fill="rgb(238,131,9)" fg:x="118" fg:w="5"/><text x="1.5900%" y="943.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="1.3400%" y="917" width="0.0568%" height="15" fill="rgb(211,50,8)" fg:x="118" fg:w="5"/><text x="1.5900%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="1.3400%" y="901" width="0.0568%" height="15" fill="rgb(245,182,24)" fg:x="118" fg:w="5"/><text x="1.5900%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="1.3400%" y="885" width="0.0568%" height="15" fill="rgb(242,14,37)" fg:x="118" fg:w="5"/><text x="1.5900%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="1.3400%" y="869" width="0.0568%" height="15" fill="rgb(246,228,12)" fg:x="118" fg:w="5"/><text x="1.5900%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="1.3400%" y="853" width="0.0568%" height="15" fill="rgb(213,55,15)" fg:x="118" fg:w="5"/><text x="1.5900%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="1.3400%" y="837" width="0.0568%" height="15" fill="rgb(209,9,3)" fg:x="118" fg:w="5"/><text x="1.5900%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="1.3741%" y="821" width="0.0227%" height="15" fill="rgb(230,59,30)" fg:x="121" fg:w="2"/><text x="1.6241%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 0.17%)</title><rect x="1.2605%" y="1061" width="0.1703%" height="15" fill="rgb(209,121,21)" fg:x="111" fg:w="15"/><text x="1.5105%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.17%)</title><rect x="1.2605%" y="1045" width="0.1703%" height="15" fill="rgb(220,109,13)" fg:x="111" fg:w="15"/><text x="1.5105%" y="1055.50"></text></g><g><title>__GI___libc_realloc (15 samples, 0.17%)</title><rect x="1.2605%" y="1029" width="0.1703%" height="15" fill="rgb(232,18,1)" fg:x="111" fg:w="15"/><text x="1.5105%" y="1039.50"></text></g><g><title>_int_realloc (15 samples, 0.17%)</title><rect x="1.2605%" y="1013" width="0.1703%" height="15" fill="rgb(215,41,42)" fg:x="111" fg:w="15"/><text x="1.5105%" y="1023.50"></text></g><g><title>_int_malloc (3 samples, 0.03%)</title><rect x="1.3968%" y="997" width="0.0341%" height="15" fill="rgb(224,123,36)" fg:x="123" fg:w="3"/><text x="1.6468%" y="1007.50"></text></g><g><title>malloc_consolidate (3 samples, 0.03%)</title><rect x="1.3968%" y="981" width="0.0341%" height="15" fill="rgb(240,125,3)" fg:x="123" fg:w="3"/><text x="1.6468%" y="991.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.01%)</title><rect x="1.4195%" y="965" width="0.0114%" height="15" fill="rgb(205,98,50)" fg:x="125" fg:w="1"/><text x="1.6695%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (127 samples, 1.44%)</title><rect x="0.0000%" y="1253" width="1.4422%" height="15" fill="rgb(205,185,37)" fg:x="0" fg:w="127"/><text x="0.2500%" y="1263.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (127 samples, 1.44%)</title><rect x="0.0000%" y="1237" width="1.4422%" height="15" fill="rgb(238,207,15)" fg:x="0" fg:w="127"/><text x="0.2500%" y="1247.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (127 samples, 1.44%)</title><rect x="0.0000%" y="1221" width="1.4422%" height="15" fill="rgb(213,199,42)" fg:x="0" fg:w="127"/><text x="0.2500%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (127 samples, 1.44%)</title><rect x="0.0000%" y="1205" width="1.4422%" height="15" fill="rgb(235,201,11)" fg:x="0" fg:w="127"/><text x="0.2500%" y="1215.50"></text></g><g><title>tokio::runtime::context::set_scheduler (127 samples, 1.44%)</title><rect x="0.0000%" y="1189" width="1.4422%" height="15" fill="rgb(207,46,11)" fg:x="0" fg:w="127"/><text x="0.2500%" y="1199.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (127 samples, 1.44%)</title><rect x="0.0000%" y="1173" width="1.4422%" height="15" fill="rgb(241,35,35)" fg:x="0" fg:w="127"/><text x="0.2500%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (81 samples, 0.92%)</title><rect x="0.5224%" y="1157" width="0.9198%" height="15" fill="rgb(243,32,47)" fg:x="46" fg:w="81"/><text x="0.7724%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (81 samples, 0.92%)</title><rect x="0.5224%" y="1141" width="0.9198%" height="15" fill="rgb(247,202,23)" fg:x="46" fg:w="81"/><text x="0.7724%" y="1151.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (81 samples, 0.92%)</title><rect x="0.5224%" y="1125" width="0.9198%" height="15" fill="rgb(219,102,11)" fg:x="46" fg:w="81"/><text x="0.7724%" y="1135.50"></text></g><g><title>yadb::storage::Tree::start_write::_{{closure}} (81 samples, 0.92%)</title><rect x="0.5224%" y="1109" width="0.9198%" height="15" fill="rgb(243,110,44)" fg:x="46" fg:w="81"/><text x="0.7724%" y="1119.50"></text></g><g><title>yadb::storage::Tree::write_skipmap_as_sstable::{{closure}} (81 samples, 0.92%)</title><rect x="0.5224%" y="1093" width="0.9198%" height="15" fill="rgb(222,74,54)" fg:x="46" fg:w="81"/><text x="0.7724%" y="1103.50"></text></g><g><title>yadb::storage::table::Table::write_table (79 samples, 0.90%)</title><rect x="0.5451%" y="1077" width="0.8971%" height="15" fill="rgb(216,99,12)" fg:x="48" fg:w="79"/><text x="0.7951%" y="1087.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::to_bytes (1 samples, 0.01%)</title><rect x="1.4308%" y="1061" width="0.0114%" height="15" fill="rgb(226,22,26)" fg:x="126" fg:w="1"/><text x="1.6808%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="1.4308%" y="1045" width="0.0114%" height="15" fill="rgb(217,163,10)" fg:x="126" fg:w="1"/><text x="1.6808%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="1.4308%" y="1029" width="0.0114%" height="15" fill="rgb(213,25,53)" fg:x="126" fg:w="1"/><text x="1.6808%" y="1039.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="1.4536%" y="677" width="0.0114%" height="15" fill="rgb(252,105,26)" fg:x="128" fg:w="1"/><text x="1.7036%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="1.4422%" y="741" width="0.0341%" height="15" fill="rgb(220,39,43)" fg:x="127" fg:w="3"/><text x="1.6922%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="1.4422%" y="725" width="0.0341%" height="15" fill="rgb(229,68,48)" fg:x="127" fg:w="3"/><text x="1.6922%" y="735.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.03%)</title><rect x="1.4422%" y="709" width="0.0341%" height="15" fill="rgb(252,8,32)" fg:x="127" fg:w="3"/><text x="1.6922%" y="719.50"></text></g><g><title>_int_realloc (3 samples, 0.03%)</title><rect x="1.4422%" y="693" width="0.0341%" height="15" fill="rgb(223,20,43)" fg:x="127" fg:w="3"/><text x="1.6922%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="1.4649%" y="677" width="0.0114%" height="15" fill="rgb(229,81,49)" fg:x="129" fg:w="1"/><text x="1.7149%" y="687.50"></text></g><g><title>yadb::storage::wal::WALEntry::serialize (4 samples, 0.05%)</title><rect x="1.4422%" y="757" width="0.0454%" height="15" fill="rgb(236,28,36)" fg:x="127" fg:w="4"/><text x="1.6922%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="1.4763%" y="741" width="0.0114%" height="15" fill="rgb(249,185,26)" fg:x="130" fg:w="1"/><text x="1.7263%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="1.4763%" y="725" width="0.0114%" height="15" fill="rgb(249,174,33)" fg:x="130" fg:w="1"/><text x="1.7263%" y="735.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="1.4763%" y="709" width="0.0114%" height="15" fill="rgb(233,201,37)" fg:x="130" fg:w="1"/><text x="1.7263%" y="719.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="1.4763%" y="693" width="0.0114%" height="15" fill="rgb(221,78,26)" fg:x="130" fg:w="1"/><text x="1.7263%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (6 samples, 0.07%)</title><rect x="1.4422%" y="1253" width="0.0681%" height="15" fill="rgb(250,127,30)" fg:x="127" fg:w="6"/><text x="1.6922%" y="1263.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (6 samples, 0.07%)</title><rect x="1.4422%" y="1237" width="0.0681%" height="15" fill="rgb(230,49,44)" fg:x="127" fg:w="6"/><text x="1.6922%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.07%)</title><rect x="1.4422%" y="1221" width="0.0681%" height="15" fill="rgb(229,67,23)" fg:x="127" fg:w="6"/><text x="1.6922%" y="1231.50"></text></g><g><title>std::panicking::try (6 samples, 0.07%)</title><rect x="1.4422%" y="1205" width="0.0681%" height="15" fill="rgb(249,83,47)" fg:x="127" fg:w="6"/><text x="1.6922%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.07%)</title><rect x="1.4422%" y="1189" width="0.0681%" height="15" fill="rgb(215,43,3)" fg:x="127" fg:w="6"/><text x="1.6922%" y="1199.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.07%)</title><rect x="1.4422%" y="1173" width="0.0681%" height="15" fill="rgb(238,154,13)" fg:x="127" fg:w="6"/><text x="1.6922%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (6 samples, 0.07%)</title><rect x="1.4422%" y="1157" width="0.0681%" height="15" fill="rgb(219,56,2)" fg:x="127" fg:w="6"/><text x="1.6922%" y="1167.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.07%)</title><rect x="1.4422%" y="1141" width="0.0681%" height="15" fill="rgb(233,0,4)" fg:x="127" fg:w="6"/><text x="1.6922%" y="1151.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (6 samples, 0.07%)</title><rect x="1.4422%" y="1125" width="0.0681%" height="15" fill="rgb(235,30,7)" fg:x="127" fg:w="6"/><text x="1.6922%" y="1135.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (6 samples, 0.07%)</title><rect x="1.4422%" y="1109" width="0.0681%" height="15" fill="rgb(250,79,13)" fg:x="127" fg:w="6"/><text x="1.6922%" y="1119.50"></text></g><g><title>test::run_test_in_process (6 samples, 0.07%)</title><rect x="1.4422%" y="1093" width="0.0681%" height="15" fill="rgb(211,146,34)" fg:x="127" fg:w="6"/><text x="1.6922%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.07%)</title><rect x="1.4422%" y="1077" width="0.0681%" height="15" fill="rgb(228,22,38)" fg:x="127" fg:w="6"/><text x="1.6922%" y="1087.50"></text></g><g><title>std::panicking::try (6 samples, 0.07%)</title><rect x="1.4422%" y="1061" width="0.0681%" height="15" fill="rgb(235,168,5)" fg:x="127" fg:w="6"/><text x="1.6922%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.07%)</title><rect x="1.4422%" y="1045" width="0.0681%" height="15" fill="rgb(221,155,16)" fg:x="127" fg:w="6"/><text x="1.6922%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.07%)</title><rect x="1.4422%" y="1029" width="0.0681%" height="15" fill="rgb(215,215,53)" fg:x="127" fg:w="6"/><text x="1.6922%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (6 samples, 0.07%)</title><rect x="1.4422%" y="1013" width="0.0681%" height="15" fill="rgb(223,4,10)" fg:x="127" fg:w="6"/><text x="1.6922%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (6 samples, 0.07%)</title><rect x="1.4422%" y="997" width="0.0681%" height="15" fill="rgb(234,103,6)" fg:x="127" fg:w="6"/><text x="1.6922%" y="1007.50"></text></g><g><title>test::run_test::{{closure}} (6 samples, 0.07%)</title><rect x="1.4422%" y="981" width="0.0681%" height="15" fill="rgb(227,97,0)" fg:x="127" fg:w="6"/><text x="1.6922%" y="991.50"></text></g><g><title>test::__rust_begin_short_backtrace (6 samples, 0.07%)</title><rect x="1.4422%" y="965" width="0.0681%" height="15" fill="rgb(234,150,53)" fg:x="127" fg:w="6"/><text x="1.6922%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.07%)</title><rect x="1.4422%" y="949" width="0.0681%" height="15" fill="rgb(228,201,54)" fg:x="127" fg:w="6"/><text x="1.6922%" y="959.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.07%)</title><rect x="1.4422%" y="933" width="0.0681%" height="15" fill="rgb(222,22,37)" fg:x="127" fg:w="6"/><text x="1.6922%" y="943.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (6 samples, 0.07%)</title><rect x="1.4422%" y="917" width="0.0681%" height="15" fill="rgb(237,53,32)" fg:x="127" fg:w="6"/><text x="1.6922%" y="927.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (6 samples, 0.07%)</title><rect x="1.4422%" y="901" width="0.0681%" height="15" fill="rgb(233,25,53)" fg:x="127" fg:w="6"/><text x="1.6922%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (6 samples, 0.07%)</title><rect x="1.4422%" y="885" width="0.0681%" height="15" fill="rgb(210,40,34)" fg:x="127" fg:w="6"/><text x="1.6922%" y="895.50"></text></g><g><title>tokio::runtime::context::set_scheduler (6 samples, 0.07%)</title><rect x="1.4422%" y="869" width="0.0681%" height="15" fill="rgb(241,220,44)" fg:x="127" fg:w="6"/><text x="1.6922%" y="879.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (6 samples, 0.07%)</title><rect x="1.4422%" y="853" width="0.0681%" height="15" fill="rgb(235,28,35)" fg:x="127" fg:w="6"/><text x="1.6922%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (6 samples, 0.07%)</title><rect x="1.4422%" y="837" width="0.0681%" height="15" fill="rgb(210,56,17)" fg:x="127" fg:w="6"/><text x="1.6922%" y="847.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6 samples, 0.07%)</title><rect x="1.4422%" y="821" width="0.0681%" height="15" fill="rgb(224,130,29)" fg:x="127" fg:w="6"/><text x="1.6922%" y="831.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (6 samples, 0.07%)</title><rect x="1.4422%" y="805" width="0.0681%" height="15" fill="rgb(235,212,8)" fg:x="127" fg:w="6"/><text x="1.6922%" y="815.50"></text></g><g><title>yadb::storage::Tree::start_write::_{{closure}} (6 samples, 0.07%)</title><rect x="1.4422%" y="789" width="0.0681%" height="15" fill="rgb(223,33,50)" fg:x="127" fg:w="6"/><text x="1.6922%" y="799.50"></text></g><g><title>yadb::storage::wal::WALFile::append_to_wal (6 samples, 0.07%)</title><rect x="1.4422%" y="773" width="0.0681%" height="15" fill="rgb(219,149,13)" fg:x="127" fg:w="6"/><text x="1.6922%" y="783.50"></text></g><g><title>yadb::storage::wal::batch_writer::AsyncBufferedWriter::write (2 samples, 0.02%)</title><rect x="1.4876%" y="757" width="0.0227%" height="15" fill="rgb(250,156,29)" fg:x="131" fg:w="2"/><text x="1.7376%" y="767.50"></text></g><g><title>tokio::sync::oneshot::channel (2 samples, 0.02%)</title><rect x="1.4876%" y="741" width="0.0227%" height="15" fill="rgb(216,193,19)" fg:x="131" fg:w="2"/><text x="1.7376%" y="751.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="1.4876%" y="725" width="0.0227%" height="15" fill="rgb(216,135,14)" fg:x="131" fg:w="2"/><text x="1.7376%" y="735.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="1.4876%" y="709" width="0.0227%" height="15" fill="rgb(241,47,5)" fg:x="131" fg:w="2"/><text x="1.7376%" y="719.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="1.5103%" y="709" width="0.0114%" height="15" fill="rgb(233,42,35)" fg:x="133" fg:w="1"/><text x="1.7603%" y="719.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (1 samples, 0.01%)</title><rect x="1.5103%" y="693" width="0.0114%" height="15" fill="rgb(231,13,6)" fg:x="133" fg:w="1"/><text x="1.7603%" y="703.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="1.5217%" y="709" width="0.0114%" height="15" fill="rgb(207,181,40)" fg:x="134" fg:w="1"/><text x="1.7717%" y="719.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="1.5217%" y="693" width="0.0114%" height="15" fill="rgb(254,173,49)" fg:x="134" fg:w="1"/><text x="1.7717%" y="703.50"></text></g><g><title>sysmalloc (1 samples, 0.01%)</title><rect x="1.5558%" y="677" width="0.0114%" height="15" fill="rgb(221,1,38)" fg:x="137" fg:w="1"/><text x="1.8058%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="1.5558%" y="661" width="0.0114%" height="15" fill="rgb(206,124,46)" fg:x="137" fg:w="1"/><text x="1.8058%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="1.5558%" y="645" width="0.0114%" height="15" fill="rgb(249,21,11)" fg:x="137" fg:w="1"/><text x="1.8058%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="1.5558%" y="629" width="0.0114%" height="15" fill="rgb(222,201,40)" fg:x="137" fg:w="1"/><text x="1.8058%" y="639.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="1.5330%" y="709" width="0.0454%" height="15" fill="rgb(235,61,29)" fg:x="135" fg:w="4"/><text x="1.7830%" y="719.50"></text></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="1.5330%" y="693" width="0.0454%" height="15" fill="rgb(219,207,3)" fg:x="135" fg:w="4"/><text x="1.7830%" y="703.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.01%)</title><rect x="1.5671%" y="677" width="0.0114%" height="15" fill="rgb(222,56,46)" fg:x="138" fg:w="1"/><text x="1.8171%" y="687.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="1.5785%" y="661" width="0.0227%" height="15" fill="rgb(239,76,54)" fg:x="139" fg:w="2"/><text x="1.8285%" y="671.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="1.5898%" y="645" width="0.0114%" height="15" fill="rgb(231,124,27)" fg:x="140" fg:w="1"/><text x="1.8398%" y="655.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.01%)</title><rect x="1.5898%" y="629" width="0.0114%" height="15" fill="rgb(249,195,6)" fg:x="140" fg:w="1"/><text x="1.8398%" y="639.50"></text></g><g><title>__GI___libc_free (5 samples, 0.06%)</title><rect x="1.6239%" y="645" width="0.0568%" height="15" fill="rgb(237,174,47)" fg:x="143" fg:w="5"/><text x="1.8739%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;yadb::storage::async_cache::AsyncCache&lt;yadb::storage::table::DataBlock,yadb::storage::table::Table,u64,yadb::storage::errors::YAStorageError&gt;&gt; (16 samples, 0.18%)</title><rect x="1.5785%" y="693" width="0.1817%" height="15" fill="rgb(206,201,31)" fg:x="139" fg:w="16"/><text x="1.8285%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (16 samples, 0.18%)</title><rect x="1.5785%" y="677" width="0.1817%" height="15" fill="rgb(231,57,52)" fg:x="139" fg:w="16"/><text x="1.8285%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;schnellru::Entry&lt;alloc::string::String,yadb::storage::table::DataBlock,u32&gt;&gt; (14 samples, 0.16%)</title><rect x="1.6012%" y="661" width="0.1590%" height="15" fill="rgb(248,177,22)" fg:x="141" fg:w="14"/><text x="1.8512%" y="671.50"></text></g><g><title>_int_free (7 samples, 0.08%)</title><rect x="1.6807%" y="645" width="0.0795%" height="15" fill="rgb(215,211,37)" fg:x="148" fg:w="7"/><text x="1.9307%" y="655.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.01%)</title><rect x="1.7488%" y="629" width="0.0114%" height="15" fill="rgb(241,128,51)" fg:x="154" fg:w="1"/><text x="1.9988%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (17 samples, 0.19%)</title><rect x="1.5785%" y="709" width="0.1931%" height="15" fill="rgb(227,165,31)" fg:x="139" fg:w="17"/><text x="1.8285%" y="719.50"></text></g><g><title>crossbeam_skiplist::base::Node&lt;K,V&gt;::finalize (1 samples, 0.01%)</title><rect x="1.7602%" y="693" width="0.0114%" height="15" fill="rgb(228,167,24)" fg:x="155" fg:w="1"/><text x="2.0102%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="1.7602%" y="677" width="0.0114%" height="15" fill="rgb(228,143,12)" fg:x="155" fg:w="1"/><text x="2.0102%" y="687.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.01%)</title><rect x="1.7602%" y="661" width="0.0114%" height="15" fill="rgb(249,149,8)" fg:x="155" fg:w="1"/><text x="2.0102%" y="671.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.01%)</title><rect x="1.7715%" y="677" width="0.0114%" height="15" fill="rgb(243,35,44)" fg:x="156" fg:w="1"/><text x="2.0215%" y="687.50"></text></g><g><title>crossbeam_skiplist::map::SkipMap&lt;K,V&gt;::contains_key (16 samples, 0.18%)</title><rect x="1.7715%" y="693" width="0.1817%" height="15" fill="rgb(246,89,9)" fg:x="156" fg:w="16"/><text x="2.0215%" y="703.50"></text></g><g><title>crossbeam_skiplist::base::SkipList&lt;K,V&gt;::search_bound (15 samples, 0.17%)</title><rect x="1.7829%" y="677" width="0.1703%" height="15" fill="rgb(233,213,13)" fg:x="157" fg:w="15"/><text x="2.0329%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (9 samples, 0.10%)</title><rect x="1.8510%" y="661" width="0.1022%" height="15" fill="rgb(233,141,41)" fg:x="163" fg:w="9"/><text x="2.1010%" y="671.50"></text></g><g><title>yadb::storage::memtable::Memtable::insert_or_delete (18 samples, 0.20%)</title><rect x="1.7715%" y="709" width="0.2044%" height="15" fill="rgb(239,167,4)" fg:x="156" fg:w="18"/><text x="2.0215%" y="719.50"></text></g><g><title>crossbeam_skiplist::map::SkipMap&lt;K,V&gt;::insert (2 samples, 0.02%)</title><rect x="1.9532%" y="693" width="0.0227%" height="15" fill="rgb(209,217,16)" fg:x="172" fg:w="2"/><text x="2.2032%" y="703.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.01%)</title><rect x="1.9646%" y="677" width="0.0114%" height="15" fill="rgb(219,88,35)" fg:x="173" fg:w="1"/><text x="2.2146%" y="687.50"></text></g><g><title>yadb::storage::wal::WALEntry::serialize (2 samples, 0.02%)</title><rect x="1.9759%" y="693" width="0.0227%" height="15" fill="rgb(220,193,23)" fg:x="174" fg:w="2"/><text x="2.2259%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="1.9759%" y="677" width="0.0227%" height="15" fill="rgb(230,90,52)" fg:x="174" fg:w="2"/><text x="2.2259%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="1.9759%" y="661" width="0.0227%" height="15" fill="rgb(252,106,19)" fg:x="174" fg:w="2"/><text x="2.2259%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="1.9873%" y="645" width="0.0114%" height="15" fill="rgb(206,74,20)" fg:x="175" fg:w="1"/><text x="2.2373%" y="655.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (1 samples, 0.01%)</title><rect x="1.9986%" y="677" width="0.0114%" height="15" fill="rgb(230,138,44)" fg:x="176" fg:w="1"/><text x="2.2486%" y="687.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="1.9986%" y="661" width="0.0114%" height="15" fill="rgb(235,182,43)" fg:x="176" fg:w="1"/><text x="2.2486%" y="671.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.03%)</title><rect x="2.0100%" y="661" width="0.0341%" height="15" fill="rgb(242,16,51)" fg:x="177" fg:w="3"/><text x="2.2600%" y="671.50"></text></g><g><title>start_thread (48 samples, 0.55%)</title><rect x="1.5103%" y="1253" width="0.5451%" height="15" fill="rgb(248,9,4)" fg:x="133" fg:w="48"/><text x="1.7603%" y="1263.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (48 samples, 0.55%)</title><rect x="1.5103%" y="1237" width="0.5451%" height="15" fill="rgb(210,31,22)" fg:x="133" fg:w="48"/><text x="1.7603%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (48 samples, 0.55%)</title><rect x="1.5103%" y="1221" width="0.5451%" height="15" fill="rgb(239,54,39)" fg:x="133" fg:w="48"/><text x="1.7603%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (48 samples, 0.55%)</title><rect x="1.5103%" y="1205" width="0.5451%" height="15" fill="rgb(230,99,41)" fg:x="133" fg:w="48"/><text x="1.7603%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (48 samples, 0.55%)</title><rect x="1.5103%" y="1189" width="0.5451%" height="15" fill="rgb(253,106,12)" fg:x="133" fg:w="48"/><text x="1.7603%" y="1199.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (48 samples, 0.55%)</title><rect x="1.5103%" y="1173" width="0.5451%" height="15" fill="rgb(213,46,41)" fg:x="133" fg:w="48"/><text x="1.7603%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (48 samples, 0.55%)</title><rect x="1.5103%" y="1157" width="0.5451%" height="15" fill="rgb(215,133,35)" fg:x="133" fg:w="48"/><text x="1.7603%" y="1167.50"></text></g><g><title>std::panicking::try (48 samples, 0.55%)</title><rect x="1.5103%" y="1141" width="0.5451%" height="15" fill="rgb(213,28,5)" fg:x="133" fg:w="48"/><text x="1.7603%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (48 samples, 0.55%)</title><rect x="1.5103%" y="1125" width="0.5451%" height="15" fill="rgb(215,77,49)" fg:x="133" fg:w="48"/><text x="1.7603%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (48 samples, 0.55%)</title><rect x="1.5103%" y="1109" width="0.5451%" height="15" fill="rgb(248,100,22)" fg:x="133" fg:w="48"/><text x="1.7603%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (48 samples, 0.55%)</title><rect x="1.5103%" y="1093" width="0.5451%" height="15" fill="rgb(208,67,9)" fg:x="133" fg:w="48"/><text x="1.7603%" y="1103.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (48 samples, 0.55%)</title><rect x="1.5103%" y="1077" width="0.5451%" height="15" fill="rgb(219,133,21)" fg:x="133" fg:w="48"/><text x="1.7603%" y="1087.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (48 samples, 0.55%)</title><rect x="1.5103%" y="1061" width="0.5451%" height="15" fill="rgb(246,46,29)" fg:x="133" fg:w="48"/><text x="1.7603%" y="1071.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (48 samples, 0.55%)</title><rect x="1.5103%" y="1045" width="0.5451%" height="15" fill="rgb(246,185,52)" fg:x="133" fg:w="48"/><text x="1.7603%" y="1055.50"></text></g><g><title>test::run_test_in_process (48 samples, 0.55%)</title><rect x="1.5103%" y="1029" width="0.5451%" height="15" fill="rgb(252,136,11)" fg:x="133" fg:w="48"/><text x="1.7603%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (48 samples, 0.55%)</title><rect x="1.5103%" y="1013" width="0.5451%" height="15" fill="rgb(219,138,53)" fg:x="133" fg:w="48"/><text x="1.7603%" y="1023.50"></text></g><g><title>std::panicking::try (48 samples, 0.55%)</title><rect x="1.5103%" y="997" width="0.5451%" height="15" fill="rgb(211,51,23)" fg:x="133" fg:w="48"/><text x="1.7603%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (48 samples, 0.55%)</title><rect x="1.5103%" y="981" width="0.5451%" height="15" fill="rgb(247,221,28)" fg:x="133" fg:w="48"/><text x="1.7603%" y="991.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (48 samples, 0.55%)</title><rect x="1.5103%" y="965" width="0.5451%" height="15" fill="rgb(251,222,45)" fg:x="133" fg:w="48"/><text x="1.7603%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (48 samples, 0.55%)</title><rect x="1.5103%" y="949" width="0.5451%" height="15" fill="rgb(217,162,53)" fg:x="133" fg:w="48"/><text x="1.7603%" y="959.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (48 samples, 0.55%)</title><rect x="1.5103%" y="933" width="0.5451%" height="15" fill="rgb(229,93,14)" fg:x="133" fg:w="48"/><text x="1.7603%" y="943.50"></text></g><g><title>test::run_test::{{closure}} (48 samples, 0.55%)</title><rect x="1.5103%" y="917" width="0.5451%" height="15" fill="rgb(209,67,49)" fg:x="133" fg:w="48"/><text x="1.7603%" y="927.50"></text></g><g><title>test::__rust_begin_short_backtrace (48 samples, 0.55%)</title><rect x="1.5103%" y="901" width="0.5451%" height="15" fill="rgb(213,87,29)" fg:x="133" fg:w="48"/><text x="1.7603%" y="911.50"></text></g><g><title>core::ops::function::FnOnce::call_once (48 samples, 0.55%)</title><rect x="1.5103%" y="885" width="0.5451%" height="15" fill="rgb(205,151,52)" fg:x="133" fg:w="48"/><text x="1.7603%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once (48 samples, 0.55%)</title><rect x="1.5103%" y="869" width="0.5451%" height="15" fill="rgb(253,215,39)" fg:x="133" fg:w="48"/><text x="1.7603%" y="879.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (48 samples, 0.55%)</title><rect x="1.5103%" y="853" width="0.5451%" height="15" fill="rgb(221,220,41)" fg:x="133" fg:w="48"/><text x="1.7603%" y="863.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (48 samples, 0.55%)</title><rect x="1.5103%" y="837" width="0.5451%" height="15" fill="rgb(218,133,21)" fg:x="133" fg:w="48"/><text x="1.7603%" y="847.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (48 samples, 0.55%)</title><rect x="1.5103%" y="821" width="0.5451%" height="15" fill="rgb(221,193,43)" fg:x="133" fg:w="48"/><text x="1.7603%" y="831.50"></text></g><g><title>tokio::runtime::context::set_scheduler (48 samples, 0.55%)</title><rect x="1.5103%" y="805" width="0.5451%" height="15" fill="rgb(240,128,52)" fg:x="133" fg:w="48"/><text x="1.7603%" y="815.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (48 samples, 0.55%)</title><rect x="1.5103%" y="789" width="0.5451%" height="15" fill="rgb(253,114,12)" fg:x="133" fg:w="48"/><text x="1.7603%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (48 samples, 0.55%)</title><rect x="1.5103%" y="773" width="0.5451%" height="15" fill="rgb(215,223,47)" fg:x="133" fg:w="48"/><text x="1.7603%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (48 samples, 0.55%)</title><rect x="1.5103%" y="757" width="0.5451%" height="15" fill="rgb(248,225,23)" fg:x="133" fg:w="48"/><text x="1.7603%" y="767.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (48 samples, 0.55%)</title><rect x="1.5103%" y="741" width="0.5451%" height="15" fill="rgb(250,108,0)" fg:x="133" fg:w="48"/><text x="1.7603%" y="751.50"></text></g><g><title>yadb::storage::Tree::start_write::_{{closure}} (48 samples, 0.55%)</title><rect x="1.5103%" y="725" width="0.5451%" height="15" fill="rgb(228,208,7)" fg:x="133" fg:w="48"/><text x="1.7603%" y="735.50"></text></g><g><title>yadb::storage::wal::WALFile::append_to_wal (7 samples, 0.08%)</title><rect x="1.9759%" y="709" width="0.0795%" height="15" fill="rgb(244,45,10)" fg:x="174" fg:w="7"/><text x="2.2259%" y="719.50"></text></g><g><title>yadb::storage::wal::batch_writer::AsyncBufferedWriter::write (5 samples, 0.06%)</title><rect x="1.9986%" y="693" width="0.0568%" height="15" fill="rgb(207,125,25)" fg:x="176" fg:w="5"/><text x="2.2486%" y="703.50"></text></g><g><title>tokio::sync::oneshot::channel (4 samples, 0.05%)</title><rect x="2.0100%" y="677" width="0.0454%" height="15" fill="rgb(210,195,18)" fg:x="177" fg:w="4"/><text x="2.2600%" y="687.50"></text></g><g><title>tokio::sync::oneshot::State::as_usize (1 samples, 0.01%)</title><rect x="2.0441%" y="661" width="0.0114%" height="15" fill="rgb(249,80,12)" fg:x="180" fg:w="1"/><text x="2.2941%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="2.0554%" y="709" width="0.0114%" height="15" fill="rgb(221,65,9)" fg:x="181" fg:w="1"/><text x="2.3054%" y="719.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="2.0554%" y="693" width="0.0114%" height="15" fill="rgb(235,49,36)" fg:x="181" fg:w="1"/><text x="2.3054%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="2.0554%" y="677" width="0.0114%" height="15" fill="rgb(225,32,20)" fg:x="181" fg:w="1"/><text x="2.3054%" y="687.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="2.0554%" y="661" width="0.0114%" height="15" fill="rgb(215,141,46)" fg:x="181" fg:w="1"/><text x="2.3054%" y="671.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2 samples, 0.02%)</title><rect x="2.0554%" y="1253" width="0.0227%" height="15" fill="rgb(250,160,47)" fg:x="181" fg:w="2"/><text x="2.3054%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.02%)</title><rect x="2.0554%" y="1237" width="0.0227%" height="15" fill="rgb(216,222,40)" fg:x="181" fg:w="2"/><text x="2.3054%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.02%)</title><rect x="2.0554%" y="1221" width="0.0227%" height="15" fill="rgb(234,217,39)" fg:x="181" fg:w="2"/><text x="2.3054%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2 samples, 0.02%)</title><rect x="2.0554%" y="1205" width="0.0227%" height="15" fill="rgb(207,178,40)" fg:x="181" fg:w="2"/><text x="2.3054%" y="1215.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (2 samples, 0.02%)</title><rect x="2.0554%" y="1189" width="0.0227%" height="15" fill="rgb(221,136,13)" fg:x="181" fg:w="2"/><text x="2.3054%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.02%)</title><rect x="2.0554%" y="1173" width="0.0227%" height="15" fill="rgb(249,199,10)" fg:x="181" fg:w="2"/><text x="2.3054%" y="1183.50"></text></g><g><title>std::panicking::try (2 samples, 0.02%)</title><rect x="2.0554%" y="1157" width="0.0227%" height="15" fill="rgb(249,222,13)" fg:x="181" fg:w="2"/><text x="2.3054%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.02%)</title><rect x="2.0554%" y="1141" width="0.0227%" height="15" fill="rgb(244,185,38)" fg:x="181" fg:w="2"/><text x="2.3054%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.02%)</title><rect x="2.0554%" y="1125" width="0.0227%" height="15" fill="rgb(236,202,9)" fg:x="181" fg:w="2"/><text x="2.3054%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (2 samples, 0.02%)</title><rect x="2.0554%" y="1109" width="0.0227%" height="15" fill="rgb(250,229,37)" fg:x="181" fg:w="2"/><text x="2.3054%" y="1119.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.02%)</title><rect x="2.0554%" y="1093" width="0.0227%" height="15" fill="rgb(206,174,23)" fg:x="181" fg:w="2"/><text x="2.3054%" y="1103.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (2 samples, 0.02%)</title><rect x="2.0554%" y="1077" width="0.0227%" height="15" fill="rgb(211,33,43)" fg:x="181" fg:w="2"/><text x="2.3054%" y="1087.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (2 samples, 0.02%)</title><rect x="2.0554%" y="1061" width="0.0227%" height="15" fill="rgb(245,58,50)" fg:x="181" fg:w="2"/><text x="2.3054%" y="1071.50"></text></g><g><title>test::run_test_in_process (2 samples, 0.02%)</title><rect x="2.0554%" y="1045" width="0.0227%" height="15" fill="rgb(244,68,36)" fg:x="181" fg:w="2"/><text x="2.3054%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.02%)</title><rect x="2.0554%" y="1029" width="0.0227%" height="15" fill="rgb(232,229,15)" fg:x="181" fg:w="2"/><text x="2.3054%" y="1039.50"></text></g><g><title>std::panicking::try (2 samples, 0.02%)</title><rect x="2.0554%" y="1013" width="0.0227%" height="15" fill="rgb(254,30,23)" fg:x="181" fg:w="2"/><text x="2.3054%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.02%)</title><rect x="2.0554%" y="997" width="0.0227%" height="15" fill="rgb(235,160,14)" fg:x="181" fg:w="2"/><text x="2.3054%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.02%)</title><rect x="2.0554%" y="981" width="0.0227%" height="15" fill="rgb(212,155,44)" fg:x="181" fg:w="2"/><text x="2.3054%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.02%)</title><rect x="2.0554%" y="965" width="0.0227%" height="15" fill="rgb(226,2,50)" fg:x="181" fg:w="2"/><text x="2.3054%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2 samples, 0.02%)</title><rect x="2.0554%" y="949" width="0.0227%" height="15" fill="rgb(234,177,6)" fg:x="181" fg:w="2"/><text x="2.3054%" y="959.50"></text></g><g><title>test::run_test::{{closure}} (2 samples, 0.02%)</title><rect x="2.0554%" y="933" width="0.0227%" height="15" fill="rgb(217,24,9)" fg:x="181" fg:w="2"/><text x="2.3054%" y="943.50"></text></g><g><title>test::__rust_begin_short_backtrace (2 samples, 0.02%)</title><rect x="2.0554%" y="917" width="0.0227%" height="15" fill="rgb(220,13,46)" fg:x="181" fg:w="2"/><text x="2.3054%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.02%)</title><rect x="2.0554%" y="901" width="0.0227%" height="15" fill="rgb(239,221,27)" fg:x="181" fg:w="2"/><text x="2.3054%" y="911.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.02%)</title><rect x="2.0554%" y="885" width="0.0227%" height="15" fill="rgb(222,198,25)" fg:x="181" fg:w="2"/><text x="2.3054%" y="895.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (2 samples, 0.02%)</title><rect x="2.0554%" y="869" width="0.0227%" height="15" fill="rgb(211,99,13)" fg:x="181" fg:w="2"/><text x="2.3054%" y="879.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (2 samples, 0.02%)</title><rect x="2.0554%" y="853" width="0.0227%" height="15" fill="rgb(232,111,31)" fg:x="181" fg:w="2"/><text x="2.3054%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (2 samples, 0.02%)</title><rect x="2.0554%" y="837" width="0.0227%" height="15" fill="rgb(245,82,37)" fg:x="181" fg:w="2"/><text x="2.3054%" y="847.50"></text></g><g><title>tokio::runtime::context::set_scheduler (2 samples, 0.02%)</title><rect x="2.0554%" y="821" width="0.0227%" height="15" fill="rgb(227,149,46)" fg:x="181" fg:w="2"/><text x="2.3054%" y="831.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="2.0554%" y="805" width="0.0227%" height="15" fill="rgb(218,36,50)" fg:x="181" fg:w="2"/><text x="2.3054%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (2 samples, 0.02%)</title><rect x="2.0554%" y="789" width="0.0227%" height="15" fill="rgb(226,80,48)" fg:x="181" fg:w="2"/><text x="2.3054%" y="799.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.02%)</title><rect x="2.0554%" y="773" width="0.0227%" height="15" fill="rgb(238,224,15)" fg:x="181" fg:w="2"/><text x="2.3054%" y="783.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2 samples, 0.02%)</title><rect x="2.0554%" y="757" width="0.0227%" height="15" fill="rgb(241,136,10)" fg:x="181" fg:w="2"/><text x="2.3054%" y="767.50"></text></g><g><title>yadb::storage::Tree::start_write::_{{closure}} (2 samples, 0.02%)</title><rect x="2.0554%" y="741" width="0.0227%" height="15" fill="rgb(208,32,45)" fg:x="181" fg:w="2"/><text x="2.3054%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.02%)</title><rect x="2.0554%" y="725" width="0.0227%" height="15" fill="rgb(207,135,9)" fg:x="181" fg:w="2"/><text x="2.3054%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;yadb::storage::async_cache::AsyncCache&lt;yadb::storage::table::DataBlock,yadb::storage::table::Table,u64,yadb::storage::errors::YAStorageError&gt;&gt; (1 samples, 0.01%)</title><rect x="2.0668%" y="709" width="0.0114%" height="15" fill="rgb(206,86,44)" fg:x="182" fg:w="1"/><text x="2.3168%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="2.0668%" y="693" width="0.0114%" height="15" fill="rgb(245,177,15)" fg:x="182" fg:w="1"/><text x="2.3168%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;schnellru::Entry&lt;alloc::string::String,yadb::storage::table::DataBlock,u32&gt;&gt; (1 samples, 0.01%)</title><rect x="2.0668%" y="677" width="0.0114%" height="15" fill="rgb(206,64,50)" fg:x="182" fg:w="1"/><text x="2.3168%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="2.0668%" y="661" width="0.0114%" height="15" fill="rgb(234,36,40)" fg:x="182" fg:w="1"/><text x="2.3168%" y="671.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="2.0668%" y="645" width="0.0114%" height="15" fill="rgb(213,64,8)" fg:x="182" fg:w="1"/><text x="2.3168%" y="655.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="2.1122%" y="853" width="0.0114%" height="15" fill="rgb(210,75,36)" fg:x="186" fg:w="1"/><text x="2.3622%" y="863.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (5 samples, 0.06%)</title><rect x="2.0781%" y="885" width="0.0568%" height="15" fill="rgb(229,88,21)" fg:x="183" fg:w="5"/><text x="2.3281%" y="895.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (3 samples, 0.03%)</title><rect x="2.1008%" y="869" width="0.0341%" height="15" fill="rgb(252,204,47)" fg:x="185" fg:w="3"/><text x="2.3508%" y="879.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (1 samples, 0.01%)</title><rect x="2.1236%" y="853" width="0.0114%" height="15" fill="rgb(208,77,27)" fg:x="187" fg:w="1"/><text x="2.3736%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="3.8951%" y="773" width="0.0341%" height="15" fill="rgb(221,76,26)" fg:x="343" fg:w="3"/><text x="4.1451%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="3.8951%" y="757" width="0.0341%" height="15" fill="rgb(225,139,18)" fg:x="343" fg:w="3"/><text x="4.1451%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="3.8951%" y="741" width="0.0341%" height="15" fill="rgb(230,137,11)" fg:x="343" fg:w="3"/><text x="4.1451%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="3.8951%" y="725" width="0.0341%" height="15" fill="rgb(212,28,1)" fg:x="343" fg:w="3"/><text x="4.1451%" y="735.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="3.8951%" y="709" width="0.0341%" height="15" fill="rgb(248,164,17)" fg:x="343" fg:w="3"/><text x="4.1451%" y="719.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="3.8951%" y="693" width="0.0341%" height="15" fill="rgb(222,171,42)" fg:x="343" fg:w="3"/><text x="4.1451%" y="703.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="3.8951%" y="677" width="0.0341%" height="15" fill="rgb(243,84,45)" fg:x="343" fg:w="3"/><text x="4.1451%" y="687.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="3.8951%" y="661" width="0.0341%" height="15" fill="rgb(252,49,23)" fg:x="343" fg:w="3"/><text x="4.1451%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="3.9064%" y="645" width="0.0227%" height="15" fill="rgb(215,19,7)" fg:x="344" fg:w="2"/><text x="4.1564%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="3.9064%" y="629" width="0.0227%" height="15" fill="rgb(238,81,41)" fg:x="344" fg:w="2"/><text x="4.1564%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="3.9064%" y="613" width="0.0227%" height="15" fill="rgb(210,199,37)" fg:x="344" fg:w="2"/><text x="4.1564%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="3.9064%" y="597" width="0.0227%" height="15" fill="rgb(244,192,49)" fg:x="344" fg:w="2"/><text x="4.1564%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="3.9064%" y="581" width="0.0227%" height="15" fill="rgb(226,211,11)" fg:x="344" fg:w="2"/><text x="4.1564%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="3.9064%" y="565" width="0.0227%" height="15" fill="rgb(236,162,54)" fg:x="344" fg:w="2"/><text x="4.1564%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="3.9064%" y="549" width="0.0227%" height="15" fill="rgb(220,229,9)" fg:x="344" fg:w="2"/><text x="4.1564%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.9178%" y="533" width="0.0114%" height="15" fill="rgb(250,87,22)" fg:x="345" fg:w="1"/><text x="4.1678%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.9178%" y="517" width="0.0114%" height="15" fill="rgb(239,43,17)" fg:x="345" fg:w="1"/><text x="4.1678%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.9178%" y="501" width="0.0114%" height="15" fill="rgb(231,177,25)" fg:x="345" fg:w="1"/><text x="4.1678%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.9178%" y="485" width="0.0114%" height="15" fill="rgb(219,179,1)" fg:x="345" fg:w="1"/><text x="4.1678%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.9178%" y="469" width="0.0114%" height="15" fill="rgb(238,219,53)" fg:x="345" fg:w="1"/><text x="4.1678%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.9178%" y="453" width="0.0114%" height="15" fill="rgb(232,167,36)" fg:x="345" fg:w="1"/><text x="4.1678%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.9178%" y="437" width="0.0114%" height="15" fill="rgb(244,19,51)" fg:x="345" fg:w="1"/><text x="4.1678%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.9178%" y="421" width="0.0114%" height="15" fill="rgb(224,6,22)" fg:x="345" fg:w="1"/><text x="4.1678%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.9178%" y="405" width="0.0114%" height="15" fill="rgb(224,145,5)" fg:x="345" fg:w="1"/><text x="4.1678%" y="415.50"></text></g><g><title>malloc_consolidate (34 samples, 0.39%)</title><rect x="3.9291%" y="773" width="0.3861%" height="15" fill="rgb(234,130,49)" fg:x="346" fg:w="34"/><text x="4.1791%" y="783.50"></text></g><g><title>unlink_chunk.isra.0 (4 samples, 0.05%)</title><rect x="4.2698%" y="757" width="0.0454%" height="15" fill="rgb(254,6,2)" fg:x="376" fg:w="4"/><text x="4.5198%" y="767.50"></text></g><g><title>sysmalloc (1 samples, 0.01%)</title><rect x="4.3152%" y="773" width="0.0114%" height="15" fill="rgb(208,96,46)" fg:x="380" fg:w="1"/><text x="4.5652%" y="783.50"></text></g><g><title>__GI___mprotect (1 samples, 0.01%)</title><rect x="4.3152%" y="757" width="0.0114%" height="15" fill="rgb(239,3,39)" fg:x="380" fg:w="1"/><text x="4.5652%" y="767.50"></text></g><g><title>yadb::storage::wal::WALEntry::serialize (195 samples, 2.21%)</title><rect x="2.1349%" y="869" width="2.2144%" height="15" fill="rgb(233,210,1)" fg:x="188" fg:w="195"/><text x="2.3849%" y="879.50">y..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (195 samples, 2.21%)</title><rect x="2.1349%" y="853" width="2.2144%" height="15" fill="rgb(244,137,37)" fg:x="188" fg:w="195"/><text x="2.3849%" y="863.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (195 samples, 2.21%)</title><rect x="2.1349%" y="837" width="2.2144%" height="15" fill="rgb(240,136,2)" fg:x="188" fg:w="195"/><text x="2.3849%" y="847.50">a..</text></g><g><title>__GI___libc_realloc (195 samples, 2.21%)</title><rect x="2.1349%" y="821" width="2.2144%" height="15" fill="rgb(239,18,37)" fg:x="188" fg:w="195"/><text x="2.3849%" y="831.50">_..</text></g><g><title>_int_realloc (195 samples, 2.21%)</title><rect x="2.1349%" y="805" width="2.2144%" height="15" fill="rgb(218,185,22)" fg:x="188" fg:w="195"/><text x="2.3849%" y="815.50">_..</text></g><g><title>_int_malloc (195 samples, 2.21%)</title><rect x="2.1349%" y="789" width="2.2144%" height="15" fill="rgb(225,218,4)" fg:x="188" fg:w="195"/><text x="2.3849%" y="799.50">_..</text></g><g><title>unlink_chunk.isra.0 (2 samples, 0.02%)</title><rect x="4.3266%" y="773" width="0.0227%" height="15" fill="rgb(230,182,32)" fg:x="381" fg:w="2"/><text x="4.5766%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (201 samples, 2.28%)</title><rect x="2.0781%" y="1253" width="2.2825%" height="15" fill="rgb(242,56,43)" fg:x="183" fg:w="201"/><text x="2.3281%" y="1263.50">s..</text></g><g><title>test::run_test::run_test_inner::{{closure}} (201 samples, 2.28%)</title><rect x="2.0781%" y="1237" width="2.2825%" height="15" fill="rgb(233,99,24)" fg:x="183" fg:w="201"/><text x="2.3281%" y="1247.50">t..</text></g><g><title>test::run_test::run_test_inner::{{closure}} (201 samples, 2.28%)</title><rect x="2.0781%" y="1221" width="2.2825%" height="15" fill="rgb(234,209,42)" fg:x="183" fg:w="201"/><text x="2.3281%" y="1231.50">t..</text></g><g><title>test::run_test_in_process (201 samples, 2.28%)</title><rect x="2.0781%" y="1205" width="2.2825%" height="15" fill="rgb(227,7,12)" fg:x="183" fg:w="201"/><text x="2.3281%" y="1215.50">t..</text></g><g><title>std::panic::catch_unwind (201 samples, 2.28%)</title><rect x="2.0781%" y="1189" width="2.2825%" height="15" fill="rgb(245,203,43)" fg:x="183" fg:w="201"/><text x="2.3281%" y="1199.50">s..</text></g><g><title>std::panicking::try (201 samples, 2.28%)</title><rect x="2.0781%" y="1173" width="2.2825%" height="15" fill="rgb(238,205,33)" fg:x="183" fg:w="201"/><text x="2.3281%" y="1183.50">s..</text></g><g><title>std::panicking::try::do_call (201 samples, 2.28%)</title><rect x="2.0781%" y="1157" width="2.2825%" height="15" fill="rgb(231,56,7)" fg:x="183" fg:w="201"/><text x="2.3281%" y="1167.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (201 samples, 2.28%)</title><rect x="2.0781%" y="1141" width="2.2825%" height="15" fill="rgb(244,186,29)" fg:x="183" fg:w="201"/><text x="2.3281%" y="1151.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (201 samples, 2.28%)</title><rect x="2.0781%" y="1125" width="2.2825%" height="15" fill="rgb(234,111,31)" fg:x="183" fg:w="201"/><text x="2.3281%" y="1135.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (201 samples, 2.28%)</title><rect x="2.0781%" y="1109" width="2.2825%" height="15" fill="rgb(241,149,10)" fg:x="183" fg:w="201"/><text x="2.3281%" y="1119.50">c..</text></g><g><title>test::run_test::{{closure}} (201 samples, 2.28%)</title><rect x="2.0781%" y="1093" width="2.2825%" height="15" fill="rgb(249,206,44)" fg:x="183" fg:w="201"/><text x="2.3281%" y="1103.50">t..</text></g><g><title>test::__rust_begin_short_backtrace (201 samples, 2.28%)</title><rect x="2.0781%" y="1077" width="2.2825%" height="15" fill="rgb(251,153,30)" fg:x="183" fg:w="201"/><text x="2.3281%" y="1087.50">t..</text></g><g><title>core::ops::function::FnOnce::call_once (201 samples, 2.28%)</title><rect x="2.0781%" y="1061" width="2.2825%" height="15" fill="rgb(239,152,38)" fg:x="183" fg:w="201"/><text x="2.3281%" y="1071.50">c..</text></g><g><title>core::ops::function::FnOnce::call_once (201 samples, 2.28%)</title><rect x="2.0781%" y="1045" width="2.2825%" height="15" fill="rgb(249,139,47)" fg:x="183" fg:w="201"/><text x="2.3281%" y="1055.50">c..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (201 samples, 2.28%)</title><rect x="2.0781%" y="1029" width="2.2825%" height="15" fill="rgb(244,64,35)" fg:x="183" fg:w="201"/><text x="2.3281%" y="1039.50">t..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (201 samples, 2.28%)</title><rect x="2.0781%" y="1013" width="2.2825%" height="15" fill="rgb(216,46,15)" fg:x="183" fg:w="201"/><text x="2.3281%" y="1023.50">t..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (201 samples, 2.28%)</title><rect x="2.0781%" y="997" width="2.2825%" height="15" fill="rgb(250,74,19)" fg:x="183" fg:w="201"/><text x="2.3281%" y="1007.50">t..</text></g><g><title>tokio::runtime::context::set_scheduler (201 samples, 2.28%)</title><rect x="2.0781%" y="981" width="2.2825%" height="15" fill="rgb(249,42,33)" fg:x="183" fg:w="201"/><text x="2.3281%" y="991.50">t..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (201 samples, 2.28%)</title><rect x="2.0781%" y="965" width="2.2825%" height="15" fill="rgb(242,149,17)" fg:x="183" fg:w="201"/><text x="2.3281%" y="975.50">t..</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (201 samples, 2.28%)</title><rect x="2.0781%" y="949" width="2.2825%" height="15" fill="rgb(244,29,21)" fg:x="183" fg:w="201"/><text x="2.3281%" y="959.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (201 samples, 2.28%)</title><rect x="2.0781%" y="933" width="2.2825%" height="15" fill="rgb(220,130,37)" fg:x="183" fg:w="201"/><text x="2.3281%" y="943.50">t..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (201 samples, 2.28%)</title><rect x="2.0781%" y="917" width="2.2825%" height="15" fill="rgb(211,67,2)" fg:x="183" fg:w="201"/><text x="2.3281%" y="927.50">t..</text></g><g><title>yadb::storage::Tree::start_write::_{{closure}} (201 samples, 2.28%)</title><rect x="2.0781%" y="901" width="2.2825%" height="15" fill="rgb(235,68,52)" fg:x="183" fg:w="201"/><text x="2.3281%" y="911.50">y..</text></g><g><title>yadb::storage::wal::WALFile::append_to_wal (196 samples, 2.23%)</title><rect x="2.1349%" y="885" width="2.2258%" height="15" fill="rgb(246,142,3)" fg:x="188" fg:w="196"/><text x="2.3849%" y="895.50">y..</text></g><g><title>yadb::storage::wal::batch_writer::AsyncBufferedWriter::write (1 samples, 0.01%)</title><rect x="4.3493%" y="869" width="0.0114%" height="15" fill="rgb(241,25,7)" fg:x="383" fg:w="1"/><text x="4.5993%" y="879.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (1 samples, 0.01%)</title><rect x="4.3493%" y="853" width="0.0114%" height="15" fill="rgb(242,119,39)" fg:x="383" fg:w="1"/><text x="4.5993%" y="863.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="4.3493%" y="837" width="0.0114%" height="15" fill="rgb(241,98,45)" fg:x="383" fg:w="1"/><text x="4.5993%" y="847.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="4.3493%" y="821" width="0.0114%" height="15" fill="rgb(254,28,30)" fg:x="383" fg:w="1"/><text x="4.5993%" y="831.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="4.3493%" y="805" width="0.0114%" height="15" fill="rgb(241,142,54)" fg:x="383" fg:w="1"/><text x="4.5993%" y="815.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="4.3493%" y="789" width="0.0114%" height="15" fill="rgb(222,85,15)" fg:x="383" fg:w="1"/><text x="4.5993%" y="799.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="4.3607%" y="1029" width="0.0114%" height="15" fill="rgb(210,85,47)" fg:x="384" fg:w="1"/><text x="4.6107%" y="1039.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="4.3607%" y="1013" width="0.0114%" height="15" fill="rgb(224,206,25)" fg:x="384" fg:w="1"/><text x="4.6107%" y="1023.50"></text></g><g><title>test::__rust_begin_short_backtrace (6 samples, 0.07%)</title><rect x="4.3607%" y="1253" width="0.0681%" height="15" fill="rgb(243,201,19)" fg:x="384" fg:w="6"/><text x="4.6107%" y="1263.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.07%)</title><rect x="4.3607%" y="1237" width="0.0681%" height="15" fill="rgb(236,59,4)" fg:x="384" fg:w="6"/><text x="4.6107%" y="1247.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.07%)</title><rect x="4.3607%" y="1221" width="0.0681%" height="15" fill="rgb(254,179,45)" fg:x="384" fg:w="6"/><text x="4.6107%" y="1231.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (6 samples, 0.07%)</title><rect x="4.3607%" y="1205" width="0.0681%" height="15" fill="rgb(226,14,10)" fg:x="384" fg:w="6"/><text x="4.6107%" y="1215.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (6 samples, 0.07%)</title><rect x="4.3607%" y="1189" width="0.0681%" height="15" fill="rgb(244,27,41)" fg:x="384" fg:w="6"/><text x="4.6107%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (6 samples, 0.07%)</title><rect x="4.3607%" y="1173" width="0.0681%" height="15" fill="rgb(235,35,32)" fg:x="384" fg:w="6"/><text x="4.6107%" y="1183.50"></text></g><g><title>tokio::runtime::context::set_scheduler (6 samples, 0.07%)</title><rect x="4.3607%" y="1157" width="0.0681%" height="15" fill="rgb(218,68,31)" fg:x="384" fg:w="6"/><text x="4.6107%" y="1167.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (6 samples, 0.07%)</title><rect x="4.3607%" y="1141" width="0.0681%" height="15" fill="rgb(207,120,37)" fg:x="384" fg:w="6"/><text x="4.6107%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (6 samples, 0.07%)</title><rect x="4.3607%" y="1125" width="0.0681%" height="15" fill="rgb(227,98,0)" fg:x="384" fg:w="6"/><text x="4.6107%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6 samples, 0.07%)</title><rect x="4.3607%" y="1109" width="0.0681%" height="15" fill="rgb(207,7,3)" fg:x="384" fg:w="6"/><text x="4.6107%" y="1119.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (6 samples, 0.07%)</title><rect x="4.3607%" y="1093" width="0.0681%" height="15" fill="rgb(206,98,19)" fg:x="384" fg:w="6"/><text x="4.6107%" y="1103.50"></text></g><g><title>yadb::storage::Tree::start_write::_{{closure}} (6 samples, 0.07%)</title><rect x="4.3607%" y="1077" width="0.0681%" height="15" fill="rgb(217,5,26)" fg:x="384" fg:w="6"/><text x="4.6107%" y="1087.50"></text></g><g><title>yadb::storage::Tree::write_skipmap_as_sstable::{{closure}} (6 samples, 0.07%)</title><rect x="4.3607%" y="1061" width="0.0681%" height="15" fill="rgb(235,190,38)" fg:x="384" fg:w="6"/><text x="4.6107%" y="1071.50"></text></g><g><title>yadb::storage::table::Table::write_table (6 samples, 0.07%)</title><rect x="4.3607%" y="1045" width="0.0681%" height="15" fill="rgb(247,86,24)" fg:x="384" fg:w="6"/><text x="4.6107%" y="1055.50"></text></g><g><title>bloomfilter::Bloom&lt;T&gt;::set (5 samples, 0.06%)</title><rect x="4.3720%" y="1029" width="0.0568%" height="15" fill="rgb(205,101,16)" fg:x="385" fg:w="5"/><text x="4.6220%" y="1039.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="4.4288%" y="901" width="0.0114%" height="15" fill="rgb(246,168,33)" fg:x="390" fg:w="1"/><text x="4.6788%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (3 samples, 0.03%)</title><rect x="4.4288%" y="981" width="0.0341%" height="15" fill="rgb(231,114,1)" fg:x="390" fg:w="3"/><text x="4.6788%" y="991.50"></text></g><g><title>test_storage::split_bench::{{closure}} (3 samples, 0.03%)</title><rect x="4.4288%" y="965" width="0.0341%" height="15" fill="rgb(207,184,53)" fg:x="390" fg:w="3"/><text x="4.6788%" y="975.50"></text></g><g><title>yadb::storage::Tree::get (3 samples, 0.03%)</title><rect x="4.4288%" y="949" width="0.0341%" height="15" fill="rgb(224,95,51)" fg:x="390" fg:w="3"/><text x="4.6788%" y="959.50"></text></g><g><title>tokio::task::spawn::spawn (3 samples, 0.03%)</title><rect x="4.4288%" y="933" width="0.0341%" height="15" fill="rgb(212,188,45)" fg:x="390" fg:w="3"/><text x="4.6788%" y="943.50"></text></g><g><title>tokio::runtime::context::current::with_current (3 samples, 0.03%)</title><rect x="4.4288%" y="917" width="0.0341%" height="15" fill="rgb(223,154,38)" fg:x="390" fg:w="3"/><text x="4.6788%" y="927.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="4.4402%" y="901" width="0.0227%" height="15" fill="rgb(251,22,52)" fg:x="391" fg:w="2"/><text x="4.6902%" y="911.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (1 samples, 0.01%)</title><rect x="4.4515%" y="885" width="0.0114%" height="15" fill="rgb(229,209,22)" fg:x="392" fg:w="1"/><text x="4.7015%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="4.4515%" y="869" width="0.0114%" height="15" fill="rgb(234,138,34)" fg:x="392" fg:w="1"/><text x="4.7015%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="4.4515%" y="853" width="0.0114%" height="15" fill="rgb(212,95,11)" fg:x="392" fg:w="1"/><text x="4.7015%" y="863.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="4.4515%" y="837" width="0.0114%" height="15" fill="rgb(240,179,47)" fg:x="392" fg:w="1"/><text x="4.7015%" y="847.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="4.4515%" y="821" width="0.0114%" height="15" fill="rgb(240,163,11)" fg:x="392" fg:w="1"/><text x="4.7015%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="4.4515%" y="805" width="0.0114%" height="15" fill="rgb(236,37,12)" fg:x="392" fg:w="1"/><text x="4.7015%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4515%" y="789" width="0.0114%" height="15" fill="rgb(232,164,16)" fg:x="392" fg:w="1"/><text x="4.7015%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4515%" y="773" width="0.0114%" height="15" fill="rgb(244,205,15)" fg:x="392" fg:w="1"/><text x="4.7015%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4515%" y="757" width="0.0114%" height="15" fill="rgb(223,117,47)" fg:x="392" fg:w="1"/><text x="4.7015%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4515%" y="741" width="0.0114%" height="15" fill="rgb(244,107,35)" fg:x="392" fg:w="1"/><text x="4.7015%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4515%" y="725" width="0.0114%" height="15" fill="rgb(205,140,8)" fg:x="392" fg:w="1"/><text x="4.7015%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4515%" y="709" width="0.0114%" height="15" fill="rgb(228,84,46)" fg:x="392" fg:w="1"/><text x="4.7015%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4515%" y="693" width="0.0114%" height="15" fill="rgb(254,188,9)" fg:x="392" fg:w="1"/><text x="4.7015%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4515%" y="677" width="0.0114%" height="15" fill="rgb(206,112,54)" fg:x="392" fg:w="1"/><text x="4.7015%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4515%" y="661" width="0.0114%" height="15" fill="rgb(216,84,49)" fg:x="392" fg:w="1"/><text x="4.7015%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4515%" y="645" width="0.0114%" height="15" fill="rgb(214,194,35)" fg:x="392" fg:w="1"/><text x="4.7015%" y="655.50"></text></g><g><title>__close (1 samples, 0.01%)</title><rect x="4.4742%" y="901" width="0.0114%" height="15" fill="rgb(249,28,3)" fg:x="394" fg:w="1"/><text x="4.7242%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4742%" y="885" width="0.0114%" height="15" fill="rgb(222,56,52)" fg:x="394" fg:w="1"/><text x="4.7242%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4742%" y="869" width="0.0114%" height="15" fill="rgb(245,217,50)" fg:x="394" fg:w="1"/><text x="4.7242%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4742%" y="853" width="0.0114%" height="15" fill="rgb(213,201,24)" fg:x="394" fg:w="1"/><text x="4.7242%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4742%" y="837" width="0.0114%" height="15" fill="rgb(248,116,28)" fg:x="394" fg:w="1"/><text x="4.7242%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4742%" y="821" width="0.0114%" height="15" fill="rgb(219,72,43)" fg:x="394" fg:w="1"/><text x="4.7242%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4742%" y="805" width="0.0114%" height="15" fill="rgb(209,138,14)" fg:x="394" fg:w="1"/><text x="4.7242%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4742%" y="789" width="0.0114%" height="15" fill="rgb(222,18,33)" fg:x="394" fg:w="1"/><text x="4.7242%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4742%" y="773" width="0.0114%" height="15" fill="rgb(213,199,7)" fg:x="394" fg:w="1"/><text x="4.7242%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4742%" y="757" width="0.0114%" height="15" fill="rgb(250,110,10)" fg:x="394" fg:w="1"/><text x="4.7242%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4742%" y="741" width="0.0114%" height="15" fill="rgb(248,123,6)" fg:x="394" fg:w="1"/><text x="4.7242%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4742%" y="725" width="0.0114%" height="15" fill="rgb(206,91,31)" fg:x="394" fg:w="1"/><text x="4.7242%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4742%" y="709" width="0.0114%" height="15" fill="rgb(211,154,13)" fg:x="394" fg:w="1"/><text x="4.7242%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4742%" y="693" width="0.0114%" height="15" fill="rgb(225,148,7)" fg:x="394" fg:w="1"/><text x="4.7242%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4742%" y="677" width="0.0114%" height="15" fill="rgb(220,160,43)" fg:x="394" fg:w="1"/><text x="4.7242%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4742%" y="661" width="0.0114%" height="15" fill="rgb(213,52,39)" fg:x="394" fg:w="1"/><text x="4.7242%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4742%" y="645" width="0.0114%" height="15" fill="rgb(243,137,7)" fg:x="394" fg:w="1"/><text x="4.7242%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4742%" y="629" width="0.0114%" height="15" fill="rgb(230,79,13)" fg:x="394" fg:w="1"/><text x="4.7242%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.4742%" y="613" width="0.0114%" height="15" fill="rgb(247,105,23)" fg:x="394" fg:w="1"/><text x="4.7242%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="4.4856%" y="901" width="0.0114%" height="15" fill="rgb(223,179,41)" fg:x="395" fg:w="1"/><text x="4.7356%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="4.4856%" y="885" width="0.0114%" height="15" fill="rgb(218,9,34)" fg:x="395" fg:w="1"/><text x="4.7356%" y="895.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="4.4856%" y="869" width="0.0114%" height="15" fill="rgb(222,106,8)" fg:x="395" fg:w="1"/><text x="4.7356%" y="879.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="4.4856%" y="853" width="0.0114%" height="15" fill="rgb(211,220,0)" fg:x="395" fg:w="1"/><text x="4.7356%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="4.4969%" y="901" width="0.0114%" height="15" fill="rgb(229,52,16)" fg:x="396" fg:w="1"/><text x="4.7469%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="4.4969%" y="885" width="0.0114%" height="15" fill="rgb(212,155,18)" fg:x="396" fg:w="1"/><text x="4.7469%" y="895.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="4.4969%" y="869" width="0.0114%" height="15" fill="rgb(242,21,14)" fg:x="396" fg:w="1"/><text x="4.7469%" y="879.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="4.4969%" y="853" width="0.0114%" height="15" fill="rgb(222,19,48)" fg:x="396" fg:w="1"/><text x="4.7469%" y="863.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="4.4969%" y="837" width="0.0114%" height="15" fill="rgb(232,45,27)" fg:x="396" fg:w="1"/><text x="4.7469%" y="847.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="4.4969%" y="821" width="0.0114%" height="15" fill="rgb(249,103,42)" fg:x="396" fg:w="1"/><text x="4.7469%" y="831.50"></text></g><g><title>schnellru::LruMap&lt;K,V,L,S&gt;::remove (1 samples, 0.01%)</title><rect x="4.5083%" y="901" width="0.0114%" height="15" fill="rgb(246,81,33)" fg:x="397" fg:w="1"/><text x="4.7583%" y="911.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all (6 samples, 0.07%)</title><rect x="4.5196%" y="901" width="0.0681%" height="15" fill="rgb(252,33,42)" fg:x="398" fg:w="6"/><text x="4.7696%" y="911.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all_modern (6 samples, 0.07%)</title><rect x="4.5196%" y="885" width="0.0681%" height="15" fill="rgb(209,212,41)" fg:x="398" fg:w="6"/><text x="4.7696%" y="895.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (6 samples, 0.07%)</title><rect x="4.5196%" y="869" width="0.0681%" height="15" fill="rgb(207,154,6)" fg:x="398" fg:w="6"/><text x="4.7696%" y="879.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (6 samples, 0.07%)</title><rect x="4.5196%" y="853" width="0.0681%" height="15" fill="rgb(223,64,47)" fg:x="398" fg:w="6"/><text x="4.7696%" y="863.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all_modern::{{closure}} (6 samples, 0.07%)</title><rect x="4.5196%" y="837" width="0.0681%" height="15" fill="rgb(211,161,38)" fg:x="398" fg:w="6"/><text x="4.7696%" y="847.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all_recursive (6 samples, 0.07%)</title><rect x="4.5196%" y="821" width="0.0681%" height="15" fill="rgb(219,138,40)" fg:x="398" fg:w="6"/><text x="4.7696%" y="831.50"></text></g><g><title>__GI_unlinkat (6 samples, 0.07%)</title><rect x="4.5196%" y="805" width="0.0681%" height="15" fill="rgb(241,228,46)" fg:x="398" fg:w="6"/><text x="4.7696%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="4.5196%" y="789" width="0.0681%" height="15" fill="rgb(223,209,38)" fg:x="398" fg:w="6"/><text x="4.7696%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="4.5196%" y="773" width="0.0681%" height="15" fill="rgb(236,164,45)" fg:x="398" fg:w="6"/><text x="4.7696%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="4.5196%" y="757" width="0.0681%" height="15" fill="rgb(231,15,5)" fg:x="398" fg:w="6"/><text x="4.7696%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="4.5196%" y="741" width="0.0681%" height="15" fill="rgb(252,35,15)" fg:x="398" fg:w="6"/><text x="4.7696%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="4.5196%" y="725" width="0.0681%" height="15" fill="rgb(248,181,18)" fg:x="398" fg:w="6"/><text x="4.7696%" y="735.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="4.5196%" y="709" width="0.0681%" height="15" fill="rgb(233,39,42)" fg:x="398" fg:w="6"/><text x="4.7696%" y="719.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="4.5196%" y="693" width="0.0681%" height="15" fill="rgb(238,110,33)" fg:x="398" fg:w="6"/><text x="4.7696%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="4.5196%" y="677" width="0.0681%" height="15" fill="rgb(233,195,10)" fg:x="398" fg:w="6"/><text x="4.7696%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="4.5196%" y="661" width="0.0681%" height="15" fill="rgb(254,105,3)" fg:x="398" fg:w="6"/><text x="4.7696%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="4.5196%" y="645" width="0.0681%" height="15" fill="rgb(221,225,9)" fg:x="398" fg:w="6"/><text x="4.7696%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="4.5424%" y="629" width="0.0454%" height="15" fill="rgb(224,227,45)" fg:x="400" fg:w="4"/><text x="4.7924%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="4.5537%" y="613" width="0.0341%" height="15" fill="rgb(229,198,43)" fg:x="401" fg:w="3"/><text x="4.8037%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="4.5537%" y="597" width="0.0341%" height="15" fill="rgb(206,209,35)" fg:x="401" fg:w="3"/><text x="4.8037%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="4.5537%" y="581" width="0.0341%" height="15" fill="rgb(245,195,53)" fg:x="401" fg:w="3"/><text x="4.8037%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="4.5537%" y="565" width="0.0341%" height="15" fill="rgb(240,92,26)" fg:x="401" fg:w="3"/><text x="4.8037%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="4.5537%" y="549" width="0.0341%" height="15" fill="rgb(207,40,23)" fg:x="401" fg:w="3"/><text x="4.8037%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.5764%" y="533" width="0.0114%" height="15" fill="rgb(223,111,35)" fg:x="403" fg:w="1"/><text x="4.8264%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.5764%" y="517" width="0.0114%" height="15" fill="rgb(229,147,28)" fg:x="403" fg:w="1"/><text x="4.8264%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="4.5991%" y="885" width="0.0114%" height="15" fill="rgb(211,29,28)" fg:x="405" fg:w="1"/><text x="4.8491%" y="895.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.01%)</title><rect x="4.5991%" y="869" width="0.0114%" height="15" fill="rgb(228,72,33)" fg:x="405" fg:w="1"/><text x="4.8491%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::write (1 samples, 0.01%)</title><rect x="4.5991%" y="853" width="0.0114%" height="15" fill="rgb(205,214,31)" fg:x="405" fg:w="1"/><text x="4.8491%" y="863.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.01%)</title><rect x="4.5991%" y="837" width="0.0114%" height="15" fill="rgb(224,111,15)" fg:x="405" fg:w="1"/><text x="4.8491%" y="847.50"></text></g><g><title>__libc_write (1 samples, 0.01%)</title><rect x="4.5991%" y="821" width="0.0114%" height="15" fill="rgb(253,21,26)" fg:x="405" fg:w="1"/><text x="4.8491%" y="831.50"></text></g><g><title>__libc_write (1 samples, 0.01%)</title><rect x="4.5991%" y="805" width="0.0114%" height="15" fill="rgb(245,139,43)" fg:x="405" fg:w="1"/><text x="4.8491%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.5991%" y="789" width="0.0114%" height="15" fill="rgb(252,170,7)" fg:x="405" fg:w="1"/><text x="4.8491%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.5991%" y="773" width="0.0114%" height="15" fill="rgb(231,118,14)" fg:x="405" fg:w="1"/><text x="4.8491%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.5991%" y="757" width="0.0114%" height="15" fill="rgb(238,83,0)" fg:x="405" fg:w="1"/><text x="4.8491%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.5991%" y="741" width="0.0114%" height="15" fill="rgb(221,39,39)" fg:x="405" fg:w="1"/><text x="4.8491%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.5991%" y="725" width="0.0114%" height="15" fill="rgb(222,119,46)" fg:x="405" fg:w="1"/><text x="4.8491%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.5991%" y="709" width="0.0114%" height="15" fill="rgb(222,165,49)" fg:x="405" fg:w="1"/><text x="4.8491%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.5991%" y="693" width="0.0114%" height="15" fill="rgb(219,113,52)" fg:x="405" fg:w="1"/><text x="4.8491%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.5991%" y="677" width="0.0114%" height="15" fill="rgb(214,7,15)" fg:x="405" fg:w="1"/><text x="4.8491%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.5991%" y="661" width="0.0114%" height="15" fill="rgb(235,32,4)" fg:x="405" fg:w="1"/><text x="4.8491%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.5991%" y="645" width="0.0114%" height="15" fill="rgb(238,90,54)" fg:x="405" fg:w="1"/><text x="4.8491%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.5991%" y="629" width="0.0114%" height="15" fill="rgb(213,208,19)" fg:x="405" fg:w="1"/><text x="4.8491%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.5991%" y="613" width="0.0114%" height="15" fill="rgb(233,156,4)" fg:x="405" fg:w="1"/><text x="4.8491%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.5991%" y="597" width="0.0114%" height="15" fill="rgb(207,194,5)" fg:x="405" fg:w="1"/><text x="4.8491%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.5991%" y="581" width="0.0114%" height="15" fill="rgb(206,111,30)" fg:x="405" fg:w="1"/><text x="4.8491%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.5991%" y="565" width="0.0114%" height="15" fill="rgb(243,70,54)" fg:x="405" fg:w="1"/><text x="4.8491%" y="575.50"></text></g><g><title>yadb::storage::Tree::commit_header (3 samples, 0.03%)</title><rect x="4.5878%" y="901" width="0.0341%" height="15" fill="rgb(242,28,8)" fg:x="404" fg:w="3"/><text x="4.8378%" y="911.50"></text></g><g><title>std::path::Path::_join (1 samples, 0.01%)</title><rect x="4.6105%" y="885" width="0.0114%" height="15" fill="rgb(219,106,18)" fg:x="406" fg:w="1"/><text x="4.8605%" y="895.50"></text></g><g><title>std::path::PathBuf::push (1 samples, 0.01%)</title><rect x="4.6105%" y="869" width="0.0114%" height="15" fill="rgb(244,222,10)" fg:x="406" fg:w="1"/><text x="4.8605%" y="879.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.01%)</title><rect x="4.6105%" y="853" width="0.0114%" height="15" fill="rgb(236,179,52)" fg:x="406" fg:w="1"/><text x="4.8605%" y="863.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.01%)</title><rect x="4.6105%" y="837" width="0.0114%" height="15" fill="rgb(213,23,39)" fg:x="406" fg:w="1"/><text x="4.8605%" y="847.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.01%)</title><rect x="4.6105%" y="821" width="0.0114%" height="15" fill="rgb(238,48,10)" fg:x="406" fg:w="1"/><text x="4.8605%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="4.6105%" y="805" width="0.0114%" height="15" fill="rgb(251,196,23)" fg:x="406" fg:w="1"/><text x="4.8605%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="4.6105%" y="789" width="0.0114%" height="15" fill="rgb(250,152,24)" fg:x="406" fg:w="1"/><text x="4.8605%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="4.6105%" y="773" width="0.0114%" height="15" fill="rgb(209,150,17)" fg:x="406" fg:w="1"/><text x="4.8605%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="4.6105%" y="757" width="0.0114%" height="15" fill="rgb(234,202,34)" fg:x="406" fg:w="1"/><text x="4.8605%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="4.6105%" y="741" width="0.0114%" height="15" fill="rgb(253,148,53)" fg:x="406" fg:w="1"/><text x="4.8605%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="4.6105%" y="725" width="0.0114%" height="15" fill="rgb(218,129,16)" fg:x="406" fg:w="1"/><text x="4.8605%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="4.6105%" y="709" width="0.0114%" height="15" fill="rgb(216,85,19)" fg:x="406" fg:w="1"/><text x="4.8605%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="4.6105%" y="693" width="0.0114%" height="15" fill="rgb(235,228,7)" fg:x="406" fg:w="1"/><text x="4.8605%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="4.6105%" y="677" width="0.0114%" height="15" fill="rgb(245,175,0)" fg:x="406" fg:w="1"/><text x="4.8605%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="4.6105%" y="661" width="0.0114%" height="15" fill="rgb(208,168,36)" fg:x="406" fg:w="1"/><text x="4.8605%" y="671.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="4.6105%" y="645" width="0.0114%" height="15" fill="rgb(246,171,24)" fg:x="406" fg:w="1"/><text x="4.8605%" y="655.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="4.6105%" y="629" width="0.0114%" height="15" fill="rgb(215,142,24)" fg:x="406" fg:w="1"/><text x="4.8605%" y="639.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="4.6105%" y="613" width="0.0114%" height="15" fill="rgb(250,187,7)" fg:x="406" fg:w="1"/><text x="4.8605%" y="623.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="4.6105%" y="597" width="0.0114%" height="15" fill="rgb(228,66,33)" fg:x="406" fg:w="1"/><text x="4.8605%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="4.6218%" y="885" width="0.0227%" height="15" fill="rgb(234,215,21)" fg:x="407" fg:w="2"/><text x="4.8718%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="4.6218%" y="869" width="0.0227%" height="15" fill="rgb(222,191,20)" fg:x="407" fg:w="2"/><text x="4.8718%" y="879.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.02%)</title><rect x="4.6218%" y="853" width="0.0227%" height="15" fill="rgb(245,79,54)" fg:x="407" fg:w="2"/><text x="4.8718%" y="863.50"></text></g><g><title>_int_realloc (2 samples, 0.02%)</title><rect x="4.6218%" y="837" width="0.0227%" height="15" fill="rgb(240,10,37)" fg:x="407" fg:w="2"/><text x="4.8718%" y="847.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="4.6218%" y="821" width="0.0227%" height="15" fill="rgb(214,192,32)" fg:x="407" fg:w="2"/><text x="4.8718%" y="831.50"></text></g><g><title>yadb::storage::table::Table::get_index (29 samples, 0.33%)</title><rect x="4.6218%" y="901" width="0.3293%" height="15" fill="rgb(209,36,54)" fg:x="407" fg:w="29"/><text x="4.8718%" y="911.50"></text></g><g><title>std::io::default_read_exact (27 samples, 0.31%)</title><rect x="4.6446%" y="885" width="0.3066%" height="15" fill="rgb(220,10,11)" fg:x="409" fg:w="27"/><text x="4.8946%" y="895.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (26 samples, 0.30%)</title><rect x="4.6559%" y="869" width="0.2953%" height="15" fill="rgb(221,106,17)" fg:x="410" fg:w="26"/><text x="4.9059%" y="879.50"></text></g><g><title>std::sys::unix::fs::File::read (26 samples, 0.30%)</title><rect x="4.6559%" y="853" width="0.2953%" height="15" fill="rgb(251,142,44)" fg:x="410" fg:w="26"/><text x="4.9059%" y="863.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (26 samples, 0.30%)</title><rect x="4.6559%" y="837" width="0.2953%" height="15" fill="rgb(238,13,15)" fg:x="410" fg:w="26"/><text x="4.9059%" y="847.50"></text></g><g><title>__libc_read (26 samples, 0.30%)</title><rect x="4.6559%" y="821" width="0.2953%" height="15" fill="rgb(208,107,27)" fg:x="410" fg:w="26"/><text x="4.9059%" y="831.50"></text></g><g><title>__libc_read (26 samples, 0.30%)</title><rect x="4.6559%" y="805" width="0.2953%" height="15" fill="rgb(205,136,37)" fg:x="410" fg:w="26"/><text x="4.9059%" y="815.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="4.7695%" y="789" width="0.1817%" height="15" fill="rgb(250,205,27)" fg:x="420" fg:w="16"/><text x="5.0195%" y="799.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="4.7695%" y="773" width="0.1817%" height="15" fill="rgb(210,80,43)" fg:x="420" fg:w="16"/><text x="5.0195%" y="783.50"></text></g><g><title>[unknown] (15 samples, 0.17%)</title><rect x="4.7808%" y="757" width="0.1703%" height="15" fill="rgb(247,160,36)" fg:x="421" fg:w="15"/><text x="5.0308%" y="767.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="4.8263%" y="741" width="0.1249%" height="15" fill="rgb(234,13,49)" fg:x="425" fg:w="11"/><text x="5.0763%" y="751.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="4.8376%" y="725" width="0.1136%" height="15" fill="rgb(234,122,0)" fg:x="426" fg:w="10"/><text x="5.0876%" y="735.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="4.8376%" y="709" width="0.1136%" height="15" fill="rgb(207,146,38)" fg:x="426" fg:w="10"/><text x="5.0876%" y="719.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="4.8603%" y="693" width="0.0908%" height="15" fill="rgb(207,177,25)" fg:x="428" fg:w="8"/><text x="5.1103%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="4.8830%" y="677" width="0.0681%" height="15" fill="rgb(211,178,42)" fg:x="430" fg:w="6"/><text x="5.1330%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="4.8830%" y="661" width="0.0681%" height="15" fill="rgb(230,69,54)" fg:x="430" fg:w="6"/><text x="5.1330%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="4.8944%" y="645" width="0.0568%" height="15" fill="rgb(214,135,41)" fg:x="431" fg:w="5"/><text x="5.1444%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="4.9171%" y="629" width="0.0341%" height="15" fill="rgb(237,67,25)" fg:x="433" fg:w="3"/><text x="5.1671%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="4.9285%" y="613" width="0.0227%" height="15" fill="rgb(222,189,50)" fg:x="434" fg:w="2"/><text x="5.1785%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.9398%" y="597" width="0.0114%" height="15" fill="rgb(245,148,34)" fg:x="435" fg:w="1"/><text x="5.1898%" y="607.50"></text></g><g><title>&lt;crossbeam_skiplist::base::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="4.9739%" y="885" width="0.0227%" height="15" fill="rgb(222,29,6)" fg:x="438" fg:w="2"/><text x="5.2239%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (19 samples, 0.22%)</title><rect x="4.9966%" y="885" width="0.2158%" height="15" fill="rgb(221,189,43)" fg:x="440" fg:w="19"/><text x="5.2466%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="5.1442%" y="869" width="0.0681%" height="15" fill="rgb(207,36,27)" fg:x="453" fg:w="6"/><text x="5.3942%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="5.1442%" y="853" width="0.0681%" height="15" fill="rgb(217,90,24)" fg:x="453" fg:w="6"/><text x="5.3942%" y="863.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="5.1442%" y="837" width="0.0681%" height="15" fill="rgb(224,66,35)" fg:x="453" fg:w="6"/><text x="5.3942%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="5.1442%" y="821" width="0.0681%" height="15" fill="rgb(221,13,50)" fg:x="453" fg:w="6"/><text x="5.3942%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="5.1442%" y="805" width="0.0681%" height="15" fill="rgb(236,68,49)" fg:x="453" fg:w="6"/><text x="5.3942%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="5.1442%" y="789" width="0.0681%" height="15" fill="rgb(229,146,28)" fg:x="453" fg:w="6"/><text x="5.3942%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="5.1442%" y="773" width="0.0681%" height="15" fill="rgb(225,31,38)" fg:x="453" fg:w="6"/><text x="5.3942%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="5.1442%" y="757" width="0.0681%" height="15" fill="rgb(250,208,3)" fg:x="453" fg:w="6"/><text x="5.3942%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="5.1442%" y="741" width="0.0681%" height="15" fill="rgb(246,54,23)" fg:x="453" fg:w="6"/><text x="5.3942%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="5.1556%" y="725" width="0.0568%" height="15" fill="rgb(243,76,11)" fg:x="454" fg:w="5"/><text x="5.4056%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="5.1556%" y="709" width="0.0568%" height="15" fill="rgb(245,21,50)" fg:x="454" fg:w="5"/><text x="5.4056%" y="719.50"></text></g><g><title>_int_free (6 samples, 0.07%)</title><rect x="5.2124%" y="885" width="0.0681%" height="15" fill="rgb(228,9,43)" fg:x="459" fg:w="6"/><text x="5.4624%" y="895.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.01%)</title><rect x="5.2691%" y="869" width="0.0114%" height="15" fill="rgb(208,100,47)" fg:x="464" fg:w="1"/><text x="5.5191%" y="879.50"></text></g><g><title>bloomfilter::Bloom&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="5.2805%" y="885" width="0.0114%" height="15" fill="rgb(232,26,8)" fg:x="465" fg:w="1"/><text x="5.5305%" y="895.50"></text></g><g><title>std::fs::File::sync_all (10 samples, 0.11%)</title><rect x="5.2918%" y="885" width="0.1136%" height="15" fill="rgb(216,166,38)" fg:x="466" fg:w="10"/><text x="5.5418%" y="895.50"></text></g><g><title>std::sys::unix::fs::File::fsync (10 samples, 0.11%)</title><rect x="5.2918%" y="869" width="0.1136%" height="15" fill="rgb(251,202,51)" fg:x="466" fg:w="10"/><text x="5.5418%" y="879.50"></text></g><g><title>std::sys::unix::cvt_r (10 samples, 0.11%)</title><rect x="5.2918%" y="853" width="0.1136%" height="15" fill="rgb(254,216,34)" fg:x="466" fg:w="10"/><text x="5.5418%" y="863.50"></text></g><g><title>std::sys::unix::fs::File::fsync::{{closure}} (10 samples, 0.11%)</title><rect x="5.2918%" y="837" width="0.1136%" height="15" fill="rgb(251,32,27)" fg:x="466" fg:w="10"/><text x="5.5418%" y="847.50"></text></g><g><title>std::sys::unix::fs::File::fsync::os_fsync (10 samples, 0.11%)</title><rect x="5.2918%" y="821" width="0.1136%" height="15" fill="rgb(208,127,28)" fg:x="466" fg:w="10"/><text x="5.5418%" y="831.50"></text></g><g><title>fsync (10 samples, 0.11%)</title><rect x="5.2918%" y="805" width="0.1136%" height="15" fill="rgb(224,137,22)" fg:x="466" fg:w="10"/><text x="5.5418%" y="815.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="5.3032%" y="789" width="0.1022%" height="15" fill="rgb(254,70,32)" fg:x="467" fg:w="9"/><text x="5.5532%" y="799.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="5.3032%" y="773" width="0.1022%" height="15" fill="rgb(229,75,37)" fg:x="467" fg:w="9"/><text x="5.5532%" y="783.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="5.3032%" y="757" width="0.1022%" height="15" fill="rgb(252,64,23)" fg:x="467" fg:w="9"/><text x="5.5532%" y="767.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="5.3032%" y="741" width="0.1022%" height="15" fill="rgb(232,162,48)" fg:x="467" fg:w="9"/><text x="5.5532%" y="751.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="5.3032%" y="725" width="0.1022%" height="15" fill="rgb(246,160,12)" fg:x="467" fg:w="9"/><text x="5.5532%" y="735.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="5.3032%" y="709" width="0.1022%" height="15" fill="rgb(247,166,0)" fg:x="467" fg:w="9"/><text x="5.5532%" y="719.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="5.3032%" y="693" width="0.1022%" height="15" fill="rgb(249,219,21)" fg:x="467" fg:w="9"/><text x="5.5532%" y="703.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="5.3032%" y="677" width="0.1022%" height="15" fill="rgb(205,209,3)" fg:x="467" fg:w="9"/><text x="5.5532%" y="687.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="5.3032%" y="661" width="0.1022%" height="15" fill="rgb(243,44,1)" fg:x="467" fg:w="9"/><text x="5.5532%" y="671.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="5.3032%" y="645" width="0.1022%" height="15" fill="rgb(206,159,16)" fg:x="467" fg:w="9"/><text x="5.5532%" y="655.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="5.3146%" y="629" width="0.0908%" height="15" fill="rgb(244,77,30)" fg:x="468" fg:w="8"/><text x="5.5646%" y="639.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="5.3259%" y="613" width="0.0795%" height="15" fill="rgb(218,69,12)" fg:x="469" fg:w="7"/><text x="5.5759%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="5.3373%" y="597" width="0.0681%" height="15" fill="rgb(212,87,7)" fg:x="470" fg:w="6"/><text x="5.5873%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="5.3600%" y="581" width="0.0454%" height="15" fill="rgb(245,114,25)" fg:x="472" fg:w="4"/><text x="5.6100%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3940%" y="565" width="0.0114%" height="15" fill="rgb(210,61,42)" fg:x="475" fg:w="1"/><text x="5.6440%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3940%" y="549" width="0.0114%" height="15" fill="rgb(211,52,33)" fg:x="475" fg:w="1"/><text x="5.6440%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3940%" y="533" width="0.0114%" height="15" fill="rgb(234,58,33)" fg:x="475" fg:w="1"/><text x="5.6440%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3940%" y="517" width="0.0114%" height="15" fill="rgb(220,115,36)" fg:x="475" fg:w="1"/><text x="5.6440%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3940%" y="501" width="0.0114%" height="15" fill="rgb(243,153,54)" fg:x="475" fg:w="1"/><text x="5.6440%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3940%" y="485" width="0.0114%" height="15" fill="rgb(251,47,18)" fg:x="475" fg:w="1"/><text x="5.6440%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3940%" y="469" width="0.0114%" height="15" fill="rgb(242,102,42)" fg:x="475" fg:w="1"/><text x="5.6440%" y="479.50"></text></g><g><title>yadb::storage::Tree::write_skipmap_as_sstable::{{closure}} (136 samples, 1.54%)</title><rect x="4.4629%" y="917" width="1.5444%" height="15" fill="rgb(234,31,38)" fg:x="393" fg:w="136"/><text x="4.7129%" y="927.50"></text></g><g><title>yadb::storage::table::Table::write_table (93 samples, 1.06%)</title><rect x="4.9512%" y="901" width="1.0561%" height="15" fill="rgb(221,117,51)" fg:x="436" fg:w="93"/><text x="5.2012%" y="911.50"></text></g><g><title>std::io::Write::write_all (53 samples, 0.60%)</title><rect x="5.4054%" y="885" width="0.6019%" height="15" fill="rgb(212,20,18)" fg:x="476" fg:w="53"/><text x="5.6554%" y="895.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (53 samples, 0.60%)</title><rect x="5.4054%" y="869" width="0.6019%" height="15" fill="rgb(245,133,36)" fg:x="476" fg:w="53"/><text x="5.6554%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::write (53 samples, 0.60%)</title><rect x="5.4054%" y="853" width="0.6019%" height="15" fill="rgb(212,6,19)" fg:x="476" fg:w="53"/><text x="5.6554%" y="863.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (53 samples, 0.60%)</title><rect x="5.4054%" y="837" width="0.6019%" height="15" fill="rgb(218,1,36)" fg:x="476" fg:w="53"/><text x="5.6554%" y="847.50"></text></g><g><title>__libc_write (53 samples, 0.60%)</title><rect x="5.4054%" y="821" width="0.6019%" height="15" fill="rgb(246,84,54)" fg:x="476" fg:w="53"/><text x="5.6554%" y="831.50"></text></g><g><title>__libc_write (53 samples, 0.60%)</title><rect x="5.4054%" y="805" width="0.6019%" height="15" fill="rgb(242,110,6)" fg:x="476" fg:w="53"/><text x="5.6554%" y="815.50"></text></g><g><title>[unknown] (53 samples, 0.60%)</title><rect x="5.4054%" y="789" width="0.6019%" height="15" fill="rgb(214,47,5)" fg:x="476" fg:w="53"/><text x="5.6554%" y="799.50"></text></g><g><title>[unknown] (53 samples, 0.60%)</title><rect x="5.4054%" y="773" width="0.6019%" height="15" fill="rgb(218,159,25)" fg:x="476" fg:w="53"/><text x="5.6554%" y="783.50"></text></g><g><title>[unknown] (53 samples, 0.60%)</title><rect x="5.4054%" y="757" width="0.6019%" height="15" fill="rgb(215,211,28)" fg:x="476" fg:w="53"/><text x="5.6554%" y="767.50"></text></g><g><title>[unknown] (53 samples, 0.60%)</title><rect x="5.4054%" y="741" width="0.6019%" height="15" fill="rgb(238,59,32)" fg:x="476" fg:w="53"/><text x="5.6554%" y="751.50"></text></g><g><title>[unknown] (53 samples, 0.60%)</title><rect x="5.4054%" y="725" width="0.6019%" height="15" fill="rgb(226,82,3)" fg:x="476" fg:w="53"/><text x="5.6554%" y="735.50"></text></g><g><title>[unknown] (53 samples, 0.60%)</title><rect x="5.4054%" y="709" width="0.6019%" height="15" fill="rgb(240,164,32)" fg:x="476" fg:w="53"/><text x="5.6554%" y="719.50"></text></g><g><title>[unknown] (53 samples, 0.60%)</title><rect x="5.4054%" y="693" width="0.6019%" height="15" fill="rgb(232,46,7)" fg:x="476" fg:w="53"/><text x="5.6554%" y="703.50"></text></g><g><title>[unknown] (52 samples, 0.59%)</title><rect x="5.4168%" y="677" width="0.5905%" height="15" fill="rgb(229,129,53)" fg:x="477" fg:w="52"/><text x="5.6668%" y="687.50"></text></g><g><title>[unknown] (52 samples, 0.59%)</title><rect x="5.4168%" y="661" width="0.5905%" height="15" fill="rgb(234,188,29)" fg:x="477" fg:w="52"/><text x="5.6668%" y="671.50"></text></g><g><title>[unknown] (52 samples, 0.59%)</title><rect x="5.4168%" y="645" width="0.5905%" height="15" fill="rgb(246,141,4)" fg:x="477" fg:w="52"/><text x="5.6668%" y="655.50"></text></g><g><title>[unknown] (45 samples, 0.51%)</title><rect x="5.4963%" y="629" width="0.5110%" height="15" fill="rgb(229,23,39)" fg:x="484" fg:w="45"/><text x="5.7463%" y="639.50"></text></g><g><title>[unknown] (41 samples, 0.47%)</title><rect x="5.5417%" y="613" width="0.4656%" height="15" fill="rgb(206,12,3)" fg:x="488" fg:w="41"/><text x="5.7917%" y="623.50"></text></g><g><title>[unknown] (41 samples, 0.47%)</title><rect x="5.5417%" y="597" width="0.4656%" height="15" fill="rgb(252,226,20)" fg:x="488" fg:w="41"/><text x="5.7917%" y="607.50"></text></g><g><title>[unknown] (39 samples, 0.44%)</title><rect x="5.5644%" y="581" width="0.4429%" height="15" fill="rgb(216,123,35)" fg:x="490" fg:w="39"/><text x="5.8144%" y="591.50"></text></g><g><title>[unknown] (33 samples, 0.37%)</title><rect x="5.6325%" y="565" width="0.3747%" height="15" fill="rgb(212,68,40)" fg:x="496" fg:w="33"/><text x="5.8825%" y="575.50"></text></g><g><title>[unknown] (29 samples, 0.33%)</title><rect x="5.6779%" y="549" width="0.3293%" height="15" fill="rgb(254,125,32)" fg:x="500" fg:w="29"/><text x="5.9279%" y="559.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="5.7688%" y="533" width="0.2385%" height="15" fill="rgb(253,97,22)" fg:x="508" fg:w="21"/><text x="6.0188%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="5.9391%" y="517" width="0.0681%" height="15" fill="rgb(241,101,14)" fg:x="523" fg:w="6"/><text x="6.1891%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="5.9732%" y="501" width="0.0341%" height="15" fill="rgb(238,103,29)" fg:x="526" fg:w="3"/><text x="6.2232%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="5.9846%" y="485" width="0.0227%" height="15" fill="rgb(233,195,47)" fg:x="527" fg:w="2"/><text x="6.2346%" y="495.50"></text></g><g><title>__GI___libc_malloc (38 samples, 0.43%)</title><rect x="6.0073%" y="869" width="0.4315%" height="15" fill="rgb(246,218,30)" fg:x="529" fg:w="38"/><text x="6.2573%" y="879.50"></text></g><g><title>_int_malloc (38 samples, 0.43%)</title><rect x="6.0073%" y="853" width="0.4315%" height="15" fill="rgb(219,145,47)" fg:x="529" fg:w="38"/><text x="6.2573%" y="863.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.01%)</title><rect x="6.4274%" y="837" width="0.0114%" height="15" fill="rgb(243,12,26)" fg:x="566" fg:w="1"/><text x="6.6774%" y="847.50"></text></g><g><title>test::run_test::run_test_inner::{{closure}} (187 samples, 2.12%)</title><rect x="4.4288%" y="1253" width="2.1236%" height="15" fill="rgb(214,87,16)" fg:x="390" fg:w="187"/><text x="4.6788%" y="1263.50">t..</text></g><g><title>test::run_test_in_process (187 samples, 2.12%)</title><rect x="4.4288%" y="1237" width="2.1236%" height="15" fill="rgb(208,99,42)" fg:x="390" fg:w="187"/><text x="4.6788%" y="1247.50">t..</text></g><g><title>std::panic::catch_unwind (187 samples, 2.12%)</title><rect x="4.4288%" y="1221" width="2.1236%" height="15" fill="rgb(253,99,2)" fg:x="390" fg:w="187"/><text x="4.6788%" y="1231.50">s..</text></g><g><title>std::panicking::try (187 samples, 2.12%)</title><rect x="4.4288%" y="1205" width="2.1236%" height="15" fill="rgb(220,168,23)" fg:x="390" fg:w="187"/><text x="4.6788%" y="1215.50">s..</text></g><g><title>std::panicking::try::do_call (187 samples, 2.12%)</title><rect x="4.4288%" y="1189" width="2.1236%" height="15" fill="rgb(242,38,24)" fg:x="390" fg:w="187"/><text x="4.6788%" y="1199.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (187 samples, 2.12%)</title><rect x="4.4288%" y="1173" width="2.1236%" height="15" fill="rgb(225,182,9)" fg:x="390" fg:w="187"/><text x="4.6788%" y="1183.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (187 samples, 2.12%)</title><rect x="4.4288%" y="1157" width="2.1236%" height="15" fill="rgb(243,178,37)" fg:x="390" fg:w="187"/><text x="4.6788%" y="1167.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (187 samples, 2.12%)</title><rect x="4.4288%" y="1141" width="2.1236%" height="15" fill="rgb(232,139,19)" fg:x="390" fg:w="187"/><text x="4.6788%" y="1151.50">c..</text></g><g><title>test::run_test::{{closure}} (187 samples, 2.12%)</title><rect x="4.4288%" y="1125" width="2.1236%" height="15" fill="rgb(225,201,24)" fg:x="390" fg:w="187"/><text x="4.6788%" y="1135.50">t..</text></g><g><title>test::__rust_begin_short_backtrace (187 samples, 2.12%)</title><rect x="4.4288%" y="1109" width="2.1236%" height="15" fill="rgb(221,47,46)" fg:x="390" fg:w="187"/><text x="4.6788%" y="1119.50">t..</text></g><g><title>core::ops::function::FnOnce::call_once (187 samples, 2.12%)</title><rect x="4.4288%" y="1093" width="2.1236%" height="15" fill="rgb(249,23,13)" fg:x="390" fg:w="187"/><text x="4.6788%" y="1103.50">c..</text></g><g><title>core::ops::function::FnOnce::call_once (187 samples, 2.12%)</title><rect x="4.4288%" y="1077" width="2.1236%" height="15" fill="rgb(219,9,5)" fg:x="390" fg:w="187"/><text x="4.6788%" y="1087.50">c..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (187 samples, 2.12%)</title><rect x="4.4288%" y="1061" width="2.1236%" height="15" fill="rgb(254,171,16)" fg:x="390" fg:w="187"/><text x="4.6788%" y="1071.50">t..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (187 samples, 2.12%)</title><rect x="4.4288%" y="1045" width="2.1236%" height="15" fill="rgb(230,171,20)" fg:x="390" fg:w="187"/><text x="4.6788%" y="1055.50">t..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (187 samples, 2.12%)</title><rect x="4.4288%" y="1029" width="2.1236%" height="15" fill="rgb(210,71,41)" fg:x="390" fg:w="187"/><text x="4.6788%" y="1039.50">t..</text></g><g><title>tokio::runtime::context::set_scheduler (187 samples, 2.12%)</title><rect x="4.4288%" y="1013" width="2.1236%" height="15" fill="rgb(206,173,20)" fg:x="390" fg:w="187"/><text x="4.6788%" y="1023.50">t..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (187 samples, 2.12%)</title><rect x="4.4288%" y="997" width="2.1236%" height="15" fill="rgb(233,88,34)" fg:x="390" fg:w="187"/><text x="4.6788%" y="1007.50">t..</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (184 samples, 2.09%)</title><rect x="4.4629%" y="981" width="2.0895%" height="15" fill="rgb(223,209,46)" fg:x="393" fg:w="184"/><text x="4.7129%" y="991.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (184 samples, 2.09%)</title><rect x="4.4629%" y="965" width="2.0895%" height="15" fill="rgb(250,43,18)" fg:x="393" fg:w="184"/><text x="4.7129%" y="975.50">t..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (184 samples, 2.09%)</title><rect x="4.4629%" y="949" width="2.0895%" height="15" fill="rgb(208,13,10)" fg:x="393" fg:w="184"/><text x="4.7129%" y="959.50">t..</text></g><g><title>yadb::storage::Tree::start_write::_{{closure}} (184 samples, 2.09%)</title><rect x="4.4629%" y="933" width="2.0895%" height="15" fill="rgb(212,200,36)" fg:x="393" fg:w="184"/><text x="4.7129%" y="943.50">y..</text></g><g><title>yadb::storage::memtable::Memtable::insert_or_delete (48 samples, 0.55%)</title><rect x="6.0073%" y="917" width="0.5451%" height="15" fill="rgb(225,90,30)" fg:x="529" fg:w="48"/><text x="6.2573%" y="927.50"></text></g><g><title>crossbeam_skiplist::map::SkipMap&lt;K,V&gt;::insert (48 samples, 0.55%)</title><rect x="6.0073%" y="901" width="0.5451%" height="15" fill="rgb(236,182,39)" fg:x="529" fg:w="48"/><text x="6.2573%" y="911.50"></text></g><g><title>crossbeam_skiplist::base::SkipList&lt;K,V&gt;::insert_internal (48 samples, 0.55%)</title><rect x="6.0073%" y="885" width="0.5451%" height="15" fill="rgb(212,144,35)" fg:x="529" fg:w="48"/><text x="6.2573%" y="895.50"></text></g><g><title>crossbeam_skiplist::base::SkipList&lt;K,V&gt;::search_position (10 samples, 0.11%)</title><rect x="6.4388%" y="869" width="0.1136%" height="15" fill="rgb(228,63,44)" fg:x="567" fg:w="10"/><text x="6.6888%" y="879.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.05%)</title><rect x="6.5069%" y="853" width="0.0454%" height="15" fill="rgb(228,109,6)" fg:x="573" fg:w="4"/><text x="6.7569%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="6.5524%" y="1205" width="0.0114%" height="15" fill="rgb(238,117,24)" fg:x="577" fg:w="1"/><text x="6.8024%" y="1215.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="6.5751%" y="1189" width="0.0114%" height="15" fill="rgb(242,26,26)" fg:x="579" fg:w="1"/><text x="6.8251%" y="1199.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="6.5864%" y="1109" width="0.0341%" height="15" fill="rgb(221,92,48)" fg:x="580" fg:w="3"/><text x="6.8364%" y="1119.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="6.6659%" y="1077" width="0.2839%" height="15" fill="rgb(209,209,32)" fg:x="587" fg:w="25"/><text x="6.9159%" y="1087.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="6.6659%" y="1061" width="0.2839%" height="15" fill="rgb(221,70,22)" fg:x="587" fg:w="25"/><text x="6.9159%" y="1071.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="6.6659%" y="1045" width="0.2839%" height="15" fill="rgb(248,145,5)" fg:x="587" fg:w="25"/><text x="6.9159%" y="1055.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="6.7113%" y="1029" width="0.2385%" height="15" fill="rgb(226,116,26)" fg:x="591" fg:w="21"/><text x="6.9613%" y="1039.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="6.7113%" y="1013" width="0.2385%" height="15" fill="rgb(244,5,17)" fg:x="591" fg:w="21"/><text x="6.9613%" y="1023.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="6.7113%" y="997" width="0.2385%" height="15" fill="rgb(252,159,33)" fg:x="591" fg:w="21"/><text x="6.9613%" y="1007.50"></text></g><g><title>[unknown] (20 samples, 0.23%)</title><rect x="6.7227%" y="981" width="0.2271%" height="15" fill="rgb(206,71,0)" fg:x="592" fg:w="20"/><text x="6.9727%" y="991.50"></text></g><g><title>[unknown] (19 samples, 0.22%)</title><rect x="6.7340%" y="965" width="0.2158%" height="15" fill="rgb(233,118,54)" fg:x="593" fg:w="19"/><text x="6.9840%" y="975.50"></text></g><g><title>[unknown] (19 samples, 0.22%)</title><rect x="6.7340%" y="949" width="0.2158%" height="15" fill="rgb(234,83,48)" fg:x="593" fg:w="19"/><text x="6.9840%" y="959.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="6.7681%" y="933" width="0.1817%" height="15" fill="rgb(228,3,54)" fg:x="596" fg:w="16"/><text x="7.0181%" y="943.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="6.8022%" y="917" width="0.1476%" height="15" fill="rgb(226,155,13)" fg:x="599" fg:w="13"/><text x="7.0522%" y="927.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (54 samples, 0.61%)</title><rect x="6.5637%" y="1205" width="0.6132%" height="15" fill="rgb(241,28,37)" fg:x="578" fg:w="54"/><text x="6.8137%" y="1215.50"></text></g><g><title>__rdl_alloc (52 samples, 0.59%)</title><rect x="6.5864%" y="1189" width="0.5905%" height="15" fill="rgb(233,93,10)" fg:x="580" fg:w="52"/><text x="6.8364%" y="1199.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (52 samples, 0.59%)</title><rect x="6.5864%" y="1173" width="0.5905%" height="15" fill="rgb(225,113,19)" fg:x="580" fg:w="52"/><text x="6.8364%" y="1183.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (52 samples, 0.59%)</title><rect x="6.5864%" y="1157" width="0.5905%" height="15" fill="rgb(241,2,18)" fg:x="580" fg:w="52"/><text x="6.8364%" y="1167.50"></text></g><g><title>__posix_memalign (52 samples, 0.59%)</title><rect x="6.5864%" y="1141" width="0.5905%" height="15" fill="rgb(228,207,21)" fg:x="580" fg:w="52"/><text x="6.8364%" y="1151.50"></text></g><g><title>_int_memalign (52 samples, 0.59%)</title><rect x="6.5864%" y="1125" width="0.5905%" height="15" fill="rgb(213,211,35)" fg:x="580" fg:w="52"/><text x="6.8364%" y="1135.50"></text></g><g><title>_int_malloc (49 samples, 0.56%)</title><rect x="6.6205%" y="1109" width="0.5564%" height="15" fill="rgb(209,83,10)" fg:x="583" fg:w="49"/><text x="6.8705%" y="1119.50"></text></g><g><title>sysmalloc (49 samples, 0.56%)</title><rect x="6.6205%" y="1093" width="0.5564%" height="15" fill="rgb(209,164,1)" fg:x="583" fg:w="49"/><text x="6.8705%" y="1103.50"></text></g><g><title>__GI___mprotect (20 samples, 0.23%)</title><rect x="6.9498%" y="1077" width="0.2271%" height="15" fill="rgb(213,184,43)" fg:x="612" fg:w="20"/><text x="7.1998%" y="1087.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="6.9952%" y="1061" width="0.1817%" height="15" fill="rgb(231,61,34)" fg:x="616" fg:w="16"/><text x="7.2452%" y="1071.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="6.9952%" y="1045" width="0.1817%" height="15" fill="rgb(235,75,3)" fg:x="616" fg:w="16"/><text x="7.2452%" y="1055.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="6.9952%" y="1029" width="0.1817%" height="15" fill="rgb(220,106,47)" fg:x="616" fg:w="16"/><text x="7.2452%" y="1039.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="6.9952%" y="1013" width="0.1817%" height="15" fill="rgb(210,196,33)" fg:x="616" fg:w="16"/><text x="7.2452%" y="1023.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="6.9952%" y="997" width="0.1817%" height="15" fill="rgb(229,154,42)" fg:x="616" fg:w="16"/><text x="7.2452%" y="1007.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="7.0293%" y="981" width="0.1476%" height="15" fill="rgb(228,114,26)" fg:x="619" fg:w="13"/><text x="7.2793%" y="991.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="7.0520%" y="965" width="0.1249%" height="15" fill="rgb(208,144,1)" fg:x="621" fg:w="11"/><text x="7.3020%" y="975.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="7.0747%" y="949" width="0.1022%" height="15" fill="rgb(239,112,37)" fg:x="623" fg:w="9"/><text x="7.3247%" y="959.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="7.0747%" y="933" width="0.1022%" height="15" fill="rgb(210,96,50)" fg:x="623" fg:w="9"/><text x="7.3247%" y="943.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="7.0861%" y="917" width="0.0908%" height="15" fill="rgb(222,178,2)" fg:x="624" fg:w="8"/><text x="7.3361%" y="927.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="7.0974%" y="901" width="0.0795%" height="15" fill="rgb(226,74,18)" fg:x="625" fg:w="7"/><text x="7.3474%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="7.1429%" y="885" width="0.0341%" height="15" fill="rgb(225,67,54)" fg:x="629" fg:w="3"/><text x="7.3929%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.1656%" y="869" width="0.0114%" height="15" fill="rgb(251,92,32)" fg:x="631" fg:w="1"/><text x="7.4156%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.1656%" y="853" width="0.0114%" height="15" fill="rgb(228,149,22)" fg:x="631" fg:w="1"/><text x="7.4156%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.1656%" y="837" width="0.0114%" height="15" fill="rgb(243,54,13)" fg:x="631" fg:w="1"/><text x="7.4156%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.1656%" y="821" width="0.0114%" height="15" fill="rgb(243,180,28)" fg:x="631" fg:w="1"/><text x="7.4156%" y="831.50"></text></g><g><title>tokio::task::spawn::spawn (57 samples, 0.65%)</title><rect x="6.5524%" y="1253" width="0.6473%" height="15" fill="rgb(208,167,24)" fg:x="577" fg:w="57"/><text x="6.8024%" y="1263.50"></text></g><g><title>tokio::runtime::context::current::with_current (57 samples, 0.65%)</title><rect x="6.5524%" y="1237" width="0.6473%" height="15" fill="rgb(245,73,45)" fg:x="577" fg:w="57"/><text x="6.8024%" y="1247.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (57 samples, 0.65%)</title><rect x="6.5524%" y="1221" width="0.6473%" height="15" fill="rgb(237,203,48)" fg:x="577" fg:w="57"/><text x="6.8024%" y="1231.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (2 samples, 0.02%)</title><rect x="7.1769%" y="1205" width="0.0227%" height="15" fill="rgb(211,197,16)" fg:x="632" fg:w="2"/><text x="7.4269%" y="1215.50"></text></g><g><title>[unknown] (642 samples, 7.29%)</title><rect x="0.0000%" y="1269" width="7.2905%" height="15" fill="rgb(243,99,51)" fg:x="0" fg:w="642"/><text x="0.2500%" y="1279.50">[unknown]</text></g><g><title>yadb::storage::Tree::put (8 samples, 0.09%)</title><rect x="7.1996%" y="1253" width="0.0908%" height="15" fill="rgb(215,123,29)" fg:x="634" fg:w="8"/><text x="7.4496%" y="1263.50"></text></g><g><title>tokio::task::spawn::spawn (8 samples, 0.09%)</title><rect x="7.1996%" y="1237" width="0.0908%" height="15" fill="rgb(239,186,37)" fg:x="634" fg:w="8"/><text x="7.4496%" y="1247.50"></text></g><g><title>tokio::runtime::context::current::with_current (8 samples, 0.09%)</title><rect x="7.1996%" y="1221" width="0.0908%" height="15" fill="rgb(252,136,39)" fg:x="634" fg:w="8"/><text x="7.4496%" y="1231.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.07%)</title><rect x="7.2223%" y="1205" width="0.0681%" height="15" fill="rgb(223,213,32)" fg:x="636" fg:w="6"/><text x="7.4723%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::runtime::Runtime&gt; (1 samples, 0.01%)</title><rect x="7.2905%" y="853" width="0.0114%" height="15" fill="rgb(233,115,5)" fg:x="642" fg:w="1"/><text x="7.5405%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core&gt;&gt; (1 samples, 0.01%)</title><rect x="7.2905%" y="837" width="0.0114%" height="15" fill="rgb(207,226,44)" fg:x="642" fg:w="1"/><text x="7.5405%" y="847.50"></text></g><g><title>__GI_munmap (1 samples, 0.01%)</title><rect x="7.2905%" y="821" width="0.0114%" height="15" fill="rgb(208,126,0)" fg:x="642" fg:w="1"/><text x="7.5405%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.2905%" y="805" width="0.0114%" height="15" fill="rgb(244,66,21)" fg:x="642" fg:w="1"/><text x="7.5405%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.2905%" y="789" width="0.0114%" height="15" fill="rgb(222,97,12)" fg:x="642" fg:w="1"/><text x="7.5405%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.2905%" y="773" width="0.0114%" height="15" fill="rgb(219,213,19)" fg:x="642" fg:w="1"/><text x="7.5405%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.2905%" y="757" width="0.0114%" height="15" fill="rgb(252,169,30)" fg:x="642" fg:w="1"/><text x="7.5405%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.2905%" y="741" width="0.0114%" height="15" fill="rgb(206,32,51)" fg:x="642" fg:w="1"/><text x="7.5405%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.2905%" y="725" width="0.0114%" height="15" fill="rgb(250,172,42)" fg:x="642" fg:w="1"/><text x="7.5405%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.2905%" y="709" width="0.0114%" height="15" fill="rgb(209,34,43)" fg:x="642" fg:w="1"/><text x="7.5405%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.2905%" y="693" width="0.0114%" height="15" fill="rgb(223,11,35)" fg:x="642" fg:w="1"/><text x="7.5405%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.2905%" y="677" width="0.0114%" height="15" fill="rgb(251,219,26)" fg:x="642" fg:w="1"/><text x="7.5405%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.2905%" y="661" width="0.0114%" height="15" fill="rgb(231,119,3)" fg:x="642" fg:w="1"/><text x="7.5405%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.2905%" y="645" width="0.0114%" height="15" fill="rgb(216,97,11)" fg:x="642" fg:w="1"/><text x="7.5405%" y="655.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (3 samples, 0.03%)</title><rect x="7.4949%" y="677" width="0.0341%" height="15" fill="rgb(223,59,9)" fg:x="660" fg:w="3"/><text x="7.7449%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.07%)</title><rect x="7.5403%" y="661" width="0.0681%" height="15" fill="rgb(233,93,31)" fg:x="664" fg:w="6"/><text x="7.7903%" y="671.50"></text></g><g><title>futures_task::waker::clone_arc_raw (1 samples, 0.01%)</title><rect x="7.6198%" y="645" width="0.0114%" height="15" fill="rgb(239,81,33)" fg:x="671" fg:w="1"/><text x="7.8698%" y="655.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (12 samples, 0.14%)</title><rect x="7.5290%" y="677" width="0.1363%" height="15" fill="rgb(213,120,34)" fg:x="663" fg:w="12"/><text x="7.7790%" y="687.50"></text></g><g><title>tokio::runtime::task::harness::can_read_output (5 samples, 0.06%)</title><rect x="7.6084%" y="661" width="0.0568%" height="15" fill="rgb(243,49,53)" fg:x="670" fg:w="5"/><text x="7.8584%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::set_join_waker (3 samples, 0.03%)</title><rect x="7.6312%" y="645" width="0.0341%" height="15" fill="rgb(247,216,33)" fg:x="672" fg:w="3"/><text x="7.8812%" y="655.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.20%)</title><rect x="7.4835%" y="693" width="0.2044%" height="15" fill="rgb(226,26,14)" fg:x="659" fg:w="18"/><text x="7.7335%" y="703.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::try_read_output (2 samples, 0.02%)</title><rect x="7.6652%" y="677" width="0.0227%" height="15" fill="rgb(215,49,53)" fg:x="675" fg:w="2"/><text x="7.9152%" y="687.50"></text></g><g><title>_int_free (4 samples, 0.05%)</title><rect x="7.6879%" y="693" width="0.0454%" height="15" fill="rgb(245,162,40)" fg:x="677" fg:w="4"/><text x="7.9379%" y="703.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="7.7447%" y="677" width="0.0227%" height="15" fill="rgb(229,68,17)" fg:x="682" fg:w="2"/><text x="7.9947%" y="687.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.01%)</title><rect x="7.7561%" y="661" width="0.0114%" height="15" fill="rgb(213,182,10)" fg:x="683" fg:w="1"/><text x="8.0061%" y="671.50"></text></g><g><title>std::panicking::try (6 samples, 0.07%)</title><rect x="7.7674%" y="677" width="0.0681%" height="15" fill="rgb(245,125,30)" fg:x="684" fg:w="6"/><text x="8.0174%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.07%)</title><rect x="7.7674%" y="661" width="0.0681%" height="15" fill="rgb(232,202,2)" fg:x="684" fg:w="6"/><text x="8.0174%" y="671.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (33 samples, 0.37%)</title><rect x="7.4835%" y="725" width="0.3747%" height="15" fill="rgb(237,140,51)" fg:x="659" fg:w="33"/><text x="7.7335%" y="735.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (33 samples, 0.37%)</title><rect x="7.4835%" y="709" width="0.3747%" height="15" fill="rgb(236,157,25)" fg:x="659" fg:w="33"/><text x="7.7335%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (11 samples, 0.12%)</title><rect x="7.7334%" y="693" width="0.1249%" height="15" fill="rgb(219,209,0)" fg:x="681" fg:w="11"/><text x="7.9834%" y="703.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (2 samples, 0.02%)</title><rect x="7.8356%" y="677" width="0.0227%" height="15" fill="rgb(240,116,54)" fg:x="690" fg:w="2"/><text x="8.0856%" y="687.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (2 samples, 0.02%)</title><rect x="7.8583%" y="725" width="0.0227%" height="15" fill="rgb(216,10,36)" fg:x="692" fg:w="2"/><text x="8.1083%" y="735.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="7.8923%" y="709" width="0.0114%" height="15" fill="rgb(222,72,44)" fg:x="695" fg:w="1"/><text x="8.1423%" y="719.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="7.9037%" y="709" width="0.0114%" height="15" fill="rgb(232,159,9)" fg:x="696" fg:w="1"/><text x="8.1537%" y="719.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (52 samples, 0.59%)</title><rect x="7.3586%" y="741" width="0.5905%" height="15" fill="rgb(210,39,32)" fg:x="648" fg:w="52"/><text x="7.6086%" y="751.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (6 samples, 0.07%)</title><rect x="7.8810%" y="725" width="0.0681%" height="15" fill="rgb(216,194,45)" fg:x="694" fg:w="6"/><text x="8.1310%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.03%)</title><rect x="7.9151%" y="709" width="0.0341%" height="15" fill="rgb(218,18,35)" fg:x="697" fg:w="3"/><text x="8.1651%" y="719.50"></text></g><g><title>&lt;tempfile::dir::TempDir as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="7.9491%" y="741" width="0.0341%" height="15" fill="rgb(207,83,51)" fg:x="700" fg:w="3"/><text x="8.1991%" y="751.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all (3 samples, 0.03%)</title><rect x="7.9491%" y="725" width="0.0341%" height="15" fill="rgb(225,63,43)" fg:x="700" fg:w="3"/><text x="8.1991%" y="735.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all_modern (3 samples, 0.03%)</title><rect x="7.9491%" y="709" width="0.0341%" height="15" fill="rgb(207,57,36)" fg:x="700" fg:w="3"/><text x="8.1991%" y="719.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (3 samples, 0.03%)</title><rect x="7.9491%" y="693" width="0.0341%" height="15" fill="rgb(216,99,33)" fg:x="700" fg:w="3"/><text x="8.1991%" y="703.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (3 samples, 0.03%)</title><rect x="7.9491%" y="677" width="0.0341%" height="15" fill="rgb(225,42,16)" fg:x="700" fg:w="3"/><text x="8.1991%" y="687.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all_modern::{{closure}} (3 samples, 0.03%)</title><rect x="7.9491%" y="661" width="0.0341%" height="15" fill="rgb(220,201,45)" fg:x="700" fg:w="3"/><text x="8.1991%" y="671.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all_recursive (3 samples, 0.03%)</title><rect x="7.9491%" y="645" width="0.0341%" height="15" fill="rgb(225,33,4)" fg:x="700" fg:w="3"/><text x="8.1991%" y="655.50"></text></g><g><title>std::sys::unix::fs::remove_dir_impl::remove_dir_all_recursive (3 samples, 0.03%)</title><rect x="7.9491%" y="629" width="0.0341%" height="15" fill="rgb(224,33,50)" fg:x="700" fg:w="3"/><text x="8.1991%" y="639.50"></text></g><g><title>__GI_unlinkat (3 samples, 0.03%)</title><rect x="7.9491%" y="613" width="0.0341%" height="15" fill="rgb(246,198,51)" fg:x="700" fg:w="3"/><text x="8.1991%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="7.9491%" y="597" width="0.0341%" height="15" fill="rgb(205,22,4)" fg:x="700" fg:w="3"/><text x="8.1991%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="7.9491%" y="581" width="0.0341%" height="15" fill="rgb(206,3,8)" fg:x="700" fg:w="3"/><text x="8.1991%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="7.9491%" y="565" width="0.0341%" height="15" fill="rgb(251,23,15)" fg:x="700" fg:w="3"/><text x="8.1991%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="7.9491%" y="549" width="0.0341%" height="15" fill="rgb(252,88,28)" fg:x="700" fg:w="3"/><text x="8.1991%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="7.9491%" y="533" width="0.0341%" height="15" fill="rgb(212,127,14)" fg:x="700" fg:w="3"/><text x="8.1991%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="7.9491%" y="517" width="0.0341%" height="15" fill="rgb(247,145,37)" fg:x="700" fg:w="3"/><text x="8.1991%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="7.9491%" y="501" width="0.0341%" height="15" fill="rgb(209,117,53)" fg:x="700" fg:w="3"/><text x="8.1991%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="7.9491%" y="485" width="0.0341%" height="15" fill="rgb(212,90,42)" fg:x="700" fg:w="3"/><text x="8.1991%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="7.9491%" y="469" width="0.0341%" height="15" fill="rgb(218,164,37)" fg:x="700" fg:w="3"/><text x="8.1991%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="7.9491%" y="453" width="0.0341%" height="15" fill="rgb(246,65,34)" fg:x="700" fg:w="3"/><text x="8.1991%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="7.9491%" y="437" width="0.0341%" height="15" fill="rgb(231,100,33)" fg:x="700" fg:w="3"/><text x="8.1991%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="7.9605%" y="421" width="0.0227%" height="15" fill="rgb(228,126,14)" fg:x="701" fg:w="2"/><text x="8.2105%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="7.9605%" y="405" width="0.0227%" height="15" fill="rgb(215,173,21)" fg:x="701" fg:w="2"/><text x="8.2105%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="7.9605%" y="389" width="0.0227%" height="15" fill="rgb(210,6,40)" fg:x="701" fg:w="2"/><text x="8.2105%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="7.9605%" y="373" width="0.0227%" height="15" fill="rgb(212,48,18)" fg:x="701" fg:w="2"/><text x="8.2105%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="7.9605%" y="357" width="0.0227%" height="15" fill="rgb(230,214,11)" fg:x="701" fg:w="2"/><text x="8.2105%" y="367.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="7.9832%" y="741" width="0.0114%" height="15" fill="rgb(254,105,39)" fg:x="703" fg:w="1"/><text x="8.2332%" y="751.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.03%)</title><rect x="7.9945%" y="741" width="0.0341%" height="15" fill="rgb(245,158,5)" fg:x="704" fg:w="3"/><text x="8.2445%" y="751.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="8.0059%" y="725" width="0.0227%" height="15" fill="rgb(249,208,11)" fg:x="705" fg:w="2"/><text x="8.2559%" y="735.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="8.0400%" y="725" width="0.0114%" height="15" fill="rgb(210,39,28)" fg:x="708" fg:w="1"/><text x="8.2900%" y="735.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="8.1081%" y="693" width="0.1136%" height="15" fill="rgb(211,56,53)" fg:x="714" fg:w="10"/><text x="8.3581%" y="703.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="8.1081%" y="677" width="0.1136%" height="15" fill="rgb(226,201,30)" fg:x="714" fg:w="10"/><text x="8.3581%" y="687.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="8.1081%" y="661" width="0.1136%" height="15" fill="rgb(239,101,34)" fg:x="714" fg:w="10"/><text x="8.3581%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="8.1535%" y="645" width="0.0681%" height="15" fill="rgb(226,209,5)" fg:x="718" fg:w="6"/><text x="8.4035%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="8.1535%" y="629" width="0.0681%" height="15" fill="rgb(250,105,47)" fg:x="718" fg:w="6"/><text x="8.4035%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="8.1535%" y="613" width="0.0681%" height="15" fill="rgb(230,72,3)" fg:x="718" fg:w="6"/><text x="8.4035%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="8.1535%" y="597" width="0.0681%" height="15" fill="rgb(232,218,39)" fg:x="718" fg:w="6"/><text x="8.4035%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="8.1535%" y="581" width="0.0681%" height="15" fill="rgb(248,166,6)" fg:x="718" fg:w="6"/><text x="8.4035%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="8.1649%" y="565" width="0.0568%" height="15" fill="rgb(247,89,20)" fg:x="719" fg:w="5"/><text x="8.4149%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="8.1762%" y="549" width="0.0454%" height="15" fill="rgb(248,130,54)" fg:x="720" fg:w="4"/><text x="8.4262%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="8.1762%" y="533" width="0.0454%" height="15" fill="rgb(234,196,4)" fg:x="720" fg:w="4"/><text x="8.4262%" y="543.50"></text></g><g><title>__calloc (22 samples, 0.25%)</title><rect x="8.0286%" y="741" width="0.2498%" height="15" fill="rgb(250,143,31)" fg:x="707" fg:w="22"/><text x="8.2786%" y="751.50"></text></g><g><title>_int_malloc (20 samples, 0.23%)</title><rect x="8.0513%" y="725" width="0.2271%" height="15" fill="rgb(211,110,34)" fg:x="709" fg:w="20"/><text x="8.3013%" y="735.50"></text></g><g><title>sysmalloc (19 samples, 0.22%)</title><rect x="8.0627%" y="709" width="0.2158%" height="15" fill="rgb(215,124,48)" fg:x="710" fg:w="19"/><text x="8.3127%" y="719.50"></text></g><g><title>__GI___mprotect (5 samples, 0.06%)</title><rect x="8.2217%" y="693" width="0.0568%" height="15" fill="rgb(216,46,13)" fg:x="724" fg:w="5"/><text x="8.4717%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="8.2217%" y="677" width="0.0568%" height="15" fill="rgb(205,184,25)" fg:x="724" fg:w="5"/><text x="8.4717%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="8.2217%" y="661" width="0.0568%" height="15" fill="rgb(228,1,10)" fg:x="724" fg:w="5"/><text x="8.4717%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="8.2217%" y="645" width="0.0568%" height="15" fill="rgb(213,116,27)" fg:x="724" fg:w="5"/><text x="8.4717%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="8.2217%" y="629" width="0.0568%" height="15" fill="rgb(241,95,50)" fg:x="724" fg:w="5"/><text x="8.4717%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="8.2330%" y="613" width="0.0454%" height="15" fill="rgb(238,48,32)" fg:x="725" fg:w="4"/><text x="8.4830%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="8.2444%" y="597" width="0.0341%" height="15" fill="rgb(235,113,49)" fg:x="726" fg:w="3"/><text x="8.4944%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="8.2444%" y="581" width="0.0341%" height="15" fill="rgb(205,127,43)" fg:x="726" fg:w="3"/><text x="8.4944%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="8.2444%" y="565" width="0.0341%" height="15" fill="rgb(250,162,2)" fg:x="726" fg:w="3"/><text x="8.4944%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.2557%" y="549" width="0.0227%" height="15" fill="rgb(220,13,41)" fg:x="727" fg:w="2"/><text x="8.5057%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.2557%" y="533" width="0.0227%" height="15" fill="rgb(249,221,25)" fg:x="727" fg:w="2"/><text x="8.5057%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.2557%" y="517" width="0.0227%" height="15" fill="rgb(215,208,19)" fg:x="727" fg:w="2"/><text x="8.5057%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.2557%" y="501" width="0.0227%" height="15" fill="rgb(236,175,2)" fg:x="727" fg:w="2"/><text x="8.5057%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.2557%" y="485" width="0.0227%" height="15" fill="rgb(241,52,2)" fg:x="727" fg:w="2"/><text x="8.5057%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.2557%" y="469" width="0.0227%" height="15" fill="rgb(248,140,14)" fg:x="727" fg:w="2"/><text x="8.5057%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.2557%" y="453" width="0.0227%" height="15" fill="rgb(253,22,42)" fg:x="727" fg:w="2"/><text x="8.5057%" y="463.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="8.2784%" y="741" width="0.0227%" height="15" fill="rgb(234,61,47)" fg:x="729" fg:w="2"/><text x="8.5284%" y="751.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (1 samples, 0.01%)</title><rect x="8.3012%" y="741" width="0.0114%" height="15" fill="rgb(208,226,15)" fg:x="731" fg:w="1"/><text x="8.5512%" y="751.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.01%)</title><rect x="8.3012%" y="725" width="0.0114%" height="15" fill="rgb(217,221,4)" fg:x="731" fg:w="1"/><text x="8.5512%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="8.3012%" y="709" width="0.0114%" height="15" fill="rgb(212,174,34)" fg:x="731" fg:w="1"/><text x="8.5512%" y="719.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (3 samples, 0.03%)</title><rect x="8.3125%" y="741" width="0.0341%" height="15" fill="rgb(253,83,4)" fg:x="732" fg:w="3"/><text x="8.5625%" y="751.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.03%)</title><rect x="8.3125%" y="725" width="0.0341%" height="15" fill="rgb(250,195,49)" fg:x="732" fg:w="3"/><text x="8.5625%" y="735.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="8.3239%" y="709" width="0.0227%" height="15" fill="rgb(241,192,25)" fg:x="733" fg:w="2"/><text x="8.5739%" y="719.50"></text></g><g><title>yadb::storage::Tree::get (3 samples, 0.03%)</title><rect x="8.3466%" y="741" width="0.0341%" height="15" fill="rgb(208,124,10)" fg:x="735" fg:w="3"/><text x="8.5966%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="8.3693%" y="725" width="0.0114%" height="15" fill="rgb(222,33,0)" fg:x="737" fg:w="1"/><text x="8.6193%" y="735.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (97 samples, 1.10%)</title><rect x="7.3132%" y="773" width="1.1015%" height="15" fill="rgb(234,209,28)" fg:x="644" fg:w="97"/><text x="7.5632%" y="783.50"></text></g><g><title>test_storage::split_bench::{{closure}} (97 samples, 1.10%)</title><rect x="7.3132%" y="757" width="1.1015%" height="15" fill="rgb(224,11,23)" fg:x="644" fg:w="97"/><text x="7.5632%" y="767.50"></text></g><g><title>yadb::storage::Tree::put (3 samples, 0.03%)</title><rect x="8.3806%" y="741" width="0.0341%" height="15" fill="rgb(232,99,1)" fg:x="738" fg:w="3"/><text x="8.6306%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="8.4034%" y="725" width="0.0114%" height="15" fill="rgb(237,95,45)" fg:x="740" fg:w="1"/><text x="8.6534%" y="735.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="8.4034%" y="709" width="0.0114%" height="15" fill="rgb(208,109,11)" fg:x="740" fg:w="1"/><text x="8.6534%" y="719.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (7 samples, 0.08%)</title><rect x="8.4261%" y="757" width="0.0795%" height="15" fill="rgb(216,190,48)" fg:x="742" fg:w="7"/><text x="8.6761%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (3 samples, 0.03%)</title><rect x="8.4715%" y="741" width="0.0341%" height="15" fill="rgb(251,171,36)" fg:x="746" fg:w="3"/><text x="8.7215%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.03%)</title><rect x="8.5056%" y="741" width="0.0341%" height="15" fill="rgb(230,62,22)" fg:x="749" fg:w="3"/><text x="8.7556%" y="751.50"></text></g><g><title>__clock_gettime_2 (3 samples, 0.03%)</title><rect x="8.5056%" y="725" width="0.0341%" height="15" fill="rgb(225,114,35)" fg:x="749" fg:w="3"/><text x="8.7556%" y="735.50"></text></g><g><title>[[vdso]] (2 samples, 0.02%)</title><rect x="8.5169%" y="709" width="0.0227%" height="15" fill="rgb(215,118,42)" fg:x="750" fg:w="2"/><text x="8.7669%" y="719.50"></text></g><g><title>[[vdso]] (1 samples, 0.01%)</title><rect x="8.5283%" y="693" width="0.0114%" height="15" fill="rgb(243,119,21)" fg:x="751" fg:w="1"/><text x="8.7783%" y="703.50"></text></g><g><title>tokio::runtime::park::Inner::park (5 samples, 0.06%)</title><rect x="8.5396%" y="741" width="0.0568%" height="15" fill="rgb(252,177,53)" fg:x="752" fg:w="5"/><text x="8.7896%" y="751.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (5 samples, 0.06%)</title><rect x="8.5396%" y="725" width="0.0568%" height="15" fill="rgb(237,209,29)" fg:x="752" fg:w="5"/><text x="8.7896%" y="735.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (5 samples, 0.06%)</title><rect x="8.5396%" y="709" width="0.0568%" height="15" fill="rgb(212,65,23)" fg:x="752" fg:w="5"/><text x="8.7896%" y="719.50"></text></g><g><title>std::sys::unix::futex::futex_wait (5 samples, 0.06%)</title><rect x="8.5396%" y="693" width="0.0568%" height="15" fill="rgb(230,222,46)" fg:x="752" fg:w="5"/><text x="8.7896%" y="703.50"></text></g><g><title>syscall (5 samples, 0.06%)</title><rect x="8.5396%" y="677" width="0.0568%" height="15" fill="rgb(215,135,32)" fg:x="752" fg:w="5"/><text x="8.7896%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.5737%" y="661" width="0.0227%" height="15" fill="rgb(246,101,22)" fg:x="755" fg:w="2"/><text x="8.8237%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.5737%" y="645" width="0.0227%" height="15" fill="rgb(206,107,13)" fg:x="755" fg:w="2"/><text x="8.8237%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.5737%" y="629" width="0.0227%" height="15" fill="rgb(250,100,44)" fg:x="755" fg:w="2"/><text x="8.8237%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.5737%" y="613" width="0.0227%" height="15" fill="rgb(231,147,38)" fg:x="755" fg:w="2"/><text x="8.8237%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.5737%" y="597" width="0.0227%" height="15" fill="rgb(229,8,40)" fg:x="755" fg:w="2"/><text x="8.8237%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.5737%" y="581" width="0.0227%" height="15" fill="rgb(221,135,30)" fg:x="755" fg:w="2"/><text x="8.8237%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.5737%" y="565" width="0.0227%" height="15" fill="rgb(249,193,18)" fg:x="755" fg:w="2"/><text x="8.8237%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.5737%" y="549" width="0.0227%" height="15" fill="rgb(209,133,39)" fg:x="755" fg:w="2"/><text x="8.8237%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.5737%" y="533" width="0.0227%" height="15" fill="rgb(232,100,14)" fg:x="755" fg:w="2"/><text x="8.8237%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.02%)</title><rect x="8.6305%" y="677" width="0.0227%" height="15" fill="rgb(224,185,1)" fg:x="760" fg:w="2"/><text x="8.8805%" y="687.50"></text></g><g><title>std::sys::unix::futex::futex_wait::{{closure}} (2 samples, 0.02%)</title><rect x="8.6305%" y="661" width="0.0227%" height="15" fill="rgb(223,139,8)" fg:x="760" fg:w="2"/><text x="8.8805%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.02%)</title><rect x="8.6305%" y="645" width="0.0227%" height="15" fill="rgb(232,213,38)" fg:x="760" fg:w="2"/><text x="8.8805%" y="655.50"></text></g><g><title>__clock_gettime_2 (2 samples, 0.02%)</title><rect x="8.6305%" y="629" width="0.0227%" height="15" fill="rgb(207,94,22)" fg:x="760" fg:w="2"/><text x="8.8805%" y="639.50"></text></g><g><title>[[vdso]] (1 samples, 0.01%)</title><rect x="8.6418%" y="613" width="0.0114%" height="15" fill="rgb(219,183,54)" fg:x="761" fg:w="1"/><text x="8.8918%" y="623.50"></text></g><g><title>[[vdso]] (1 samples, 0.01%)</title><rect x="8.6418%" y="597" width="0.0114%" height="15" fill="rgb(216,185,54)" fg:x="761" fg:w="1"/><text x="8.8918%" y="607.50"></text></g><g><title>std::sys::unix::futex::futex_wait (46 samples, 0.52%)</title><rect x="8.6191%" y="693" width="0.5224%" height="15" fill="rgb(254,217,39)" fg:x="759" fg:w="46"/><text x="8.8691%" y="703.50"></text></g><g><title>syscall (43 samples, 0.49%)</title><rect x="8.6532%" y="677" width="0.4883%" height="15" fill="rgb(240,178,23)" fg:x="762" fg:w="43"/><text x="8.9032%" y="687.50"></text></g><g><title>[unknown] (34 samples, 0.39%)</title><rect x="8.7554%" y="661" width="0.3861%" height="15" fill="rgb(218,11,47)" fg:x="771" fg:w="34"/><text x="9.0054%" y="671.50"></text></g><g><title>[unknown] (34 samples, 0.39%)</title><rect x="8.7554%" y="645" width="0.3861%" height="15" fill="rgb(218,51,51)" fg:x="771" fg:w="34"/><text x="9.0054%" y="655.50"></text></g><g><title>[unknown] (34 samples, 0.39%)</title><rect x="8.7554%" y="629" width="0.3861%" height="15" fill="rgb(238,126,27)" fg:x="771" fg:w="34"/><text x="9.0054%" y="639.50"></text></g><g><title>[unknown] (31 samples, 0.35%)</title><rect x="8.7895%" y="613" width="0.3520%" height="15" fill="rgb(249,202,22)" fg:x="774" fg:w="31"/><text x="9.0395%" y="623.50"></text></g><g><title>[unknown] (30 samples, 0.34%)</title><rect x="8.8008%" y="597" width="0.3407%" height="15" fill="rgb(254,195,49)" fg:x="775" fg:w="30"/><text x="9.0508%" y="607.50"></text></g><g><title>[unknown] (29 samples, 0.33%)</title><rect x="8.8122%" y="581" width="0.3293%" height="15" fill="rgb(208,123,14)" fg:x="776" fg:w="29"/><text x="9.0622%" y="591.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="8.8576%" y="565" width="0.2839%" height="15" fill="rgb(224,200,8)" fg:x="780" fg:w="25"/><text x="9.1076%" y="575.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="8.8917%" y="549" width="0.2498%" height="15" fill="rgb(217,61,36)" fg:x="783" fg:w="22"/><text x="9.1417%" y="559.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="8.9030%" y="533" width="0.2385%" height="15" fill="rgb(206,35,45)" fg:x="784" fg:w="21"/><text x="9.1530%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park (65 samples, 0.74%)</title><rect x="8.4147%" y="773" width="0.7381%" height="15" fill="rgb(217,65,33)" fg:x="741" fg:w="65"/><text x="8.6647%" y="783.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (57 samples, 0.65%)</title><rect x="8.5056%" y="757" width="0.6473%" height="15" fill="rgb(222,158,48)" fg:x="749" fg:w="57"/><text x="8.7556%" y="767.50"></text></g><g><title>tokio::runtime::park::Inner::park_timeout (49 samples, 0.56%)</title><rect x="8.5964%" y="741" width="0.5564%" height="15" fill="rgb(254,2,54)" fg:x="757" fg:w="49"/><text x="8.8464%" y="751.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_timeout (48 samples, 0.55%)</title><rect x="8.6078%" y="725" width="0.5451%" height="15" fill="rgb(250,143,38)" fg:x="758" fg:w="48"/><text x="8.8578%" y="735.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (48 samples, 0.55%)</title><rect x="8.6078%" y="709" width="0.5451%" height="15" fill="rgb(248,25,0)" fg:x="758" fg:w="48"/><text x="8.8578%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="9.1415%" y="693" width="0.0114%" height="15" fill="rgb(206,152,27)" fg:x="805" fg:w="1"/><text x="9.3915%" y="703.50"></text></g><g><title>[[vdso]] (1 samples, 0.01%)</title><rect x="9.1529%" y="709" width="0.0114%" height="15" fill="rgb(240,77,30)" fg:x="806" fg:w="1"/><text x="9.4029%" y="719.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park_yield (2 samples, 0.02%)</title><rect x="9.1529%" y="773" width="0.0227%" height="15" fill="rgb(231,5,3)" fg:x="806" fg:w="2"/><text x="9.4029%" y="783.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (2 samples, 0.02%)</title><rect x="9.1529%" y="757" width="0.0227%" height="15" fill="rgb(207,226,32)" fg:x="806" fg:w="2"/><text x="9.4029%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.02%)</title><rect x="9.1529%" y="741" width="0.0227%" height="15" fill="rgb(222,207,47)" fg:x="806" fg:w="2"/><text x="9.4029%" y="751.50"></text></g><g><title>__clock_gettime_2 (2 samples, 0.02%)</title><rect x="9.1529%" y="725" width="0.0227%" height="15" fill="rgb(229,115,45)" fg:x="806" fg:w="2"/><text x="9.4029%" y="735.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="9.1642%" y="709" width="0.0114%" height="15" fill="rgb(224,191,6)" fg:x="807" fg:w="1"/><text x="9.4142%" y="719.50"></text></g><g><title>&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="9.1869%" y="757" width="0.0114%" height="15" fill="rgb(230,227,24)" fg:x="809" fg:w="1"/><text x="9.4369%" y="767.50"></text></g><g><title>std::panicking::try (5 samples, 0.06%)</title><rect x="9.2551%" y="741" width="0.0568%" height="15" fill="rgb(228,80,19)" fg:x="815" fg:w="5"/><text x="9.5051%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="9.2891%" y="725" width="0.0227%" height="15" fill="rgb(247,229,0)" fg:x="818" fg:w="2"/><text x="9.5391%" y="735.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="9.3913%" y="725" width="0.0227%" height="15" fill="rgb(237,194,15)" fg:x="827" fg:w="2"/><text x="9.6413%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="9.4140%" y="725" width="0.0114%" height="15" fill="rgb(219,203,20)" fg:x="829" fg:w="1"/><text x="9.6640%" y="735.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (2 samples, 0.02%)</title><rect x="9.4254%" y="725" width="0.0227%" height="15" fill="rgb(234,128,8)" fg:x="830" fg:w="2"/><text x="9.6754%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="9.4254%" y="709" width="0.0227%" height="15" fill="rgb(248,202,8)" fg:x="830" fg:w="2"/><text x="9.6754%" y="719.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.01%)</title><rect x="9.4481%" y="725" width="0.0114%" height="15" fill="rgb(206,104,37)" fg:x="832" fg:w="1"/><text x="9.6981%" y="735.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="9.5844%" y="709" width="0.0114%" height="15" fill="rgb(223,8,27)" fg:x="844" fg:w="1"/><text x="9.8344%" y="719.50"></text></g><g><title>__GI___libc_free (3 samples, 0.03%)</title><rect x="9.5957%" y="709" width="0.0341%" height="15" fill="rgb(216,217,28)" fg:x="845" fg:w="3"/><text x="9.8457%" y="719.50"></text></g><g><title>__GI___libc_malloc (98 samples, 1.11%)</title><rect x="9.6298%" y="709" width="1.1129%" height="15" fill="rgb(249,199,1)" fg:x="848" fg:w="98"/><text x="9.8798%" y="719.50"></text></g><g><title>_int_malloc (97 samples, 1.10%)</title><rect x="9.6412%" y="693" width="1.1015%" height="15" fill="rgb(240,85,17)" fg:x="849" fg:w="97"/><text x="9.8912%" y="703.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="10.7086%" y="677" width="0.0341%" height="15" fill="rgb(206,108,45)" fg:x="943" fg:w="3"/><text x="10.9586%" y="687.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="10.7086%" y="661" width="0.0341%" height="15" fill="rgb(245,210,41)" fg:x="943" fg:w="3"/><text x="10.9586%" y="671.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="10.7086%" y="645" width="0.0341%" height="15" fill="rgb(206,13,37)" fg:x="943" fg:w="3"/><text x="10.9586%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="10.7086%" y="629" width="0.0341%" height="15" fill="rgb(250,61,18)" fg:x="943" fg:w="3"/><text x="10.9586%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="10.7086%" y="613" width="0.0341%" height="15" fill="rgb(235,172,48)" fg:x="943" fg:w="3"/><text x="10.9586%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.7200%" y="597" width="0.0227%" height="15" fill="rgb(249,201,17)" fg:x="944" fg:w="2"/><text x="10.9700%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.7200%" y="581" width="0.0227%" height="15" fill="rgb(219,208,6)" fg:x="944" fg:w="2"/><text x="10.9700%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.7200%" y="565" width="0.0227%" height="15" fill="rgb(248,31,23)" fg:x="944" fg:w="2"/><text x="10.9700%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.7200%" y="549" width="0.0227%" height="15" fill="rgb(245,15,42)" fg:x="944" fg:w="2"/><text x="10.9700%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.7313%" y="533" width="0.0114%" height="15" fill="rgb(222,217,39)" fg:x="945" fg:w="1"/><text x="10.9813%" y="543.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.05%)</title><rect x="10.7427%" y="709" width="0.0454%" height="15" fill="rgb(210,219,27)" fg:x="946" fg:w="4"/><text x="10.9927%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="10.7881%" y="709" width="0.0114%" height="15" fill="rgb(252,166,36)" fg:x="950" fg:w="1"/><text x="11.0381%" y="719.50"></text></g><g><title>_int_free (8 samples, 0.09%)</title><rect x="10.7995%" y="709" width="0.0908%" height="15" fill="rgb(245,132,34)" fg:x="951" fg:w="8"/><text x="11.0495%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;yadb::storage::Tree::get_block::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="10.8903%" y="709" width="0.0114%" height="15" fill="rgb(236,54,3)" fg:x="959" fg:w="1"/><text x="11.1403%" y="719.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.01%)</title><rect x="10.9017%" y="693" width="0.0114%" height="15" fill="rgb(241,173,43)" fg:x="960" fg:w="1"/><text x="11.1517%" y="703.50"></text></g><g><title>&lt;crossbeam_epoch::collector::Collector as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="11.0606%" y="661" width="0.0227%" height="15" fill="rgb(215,190,9)" fg:x="974" fg:w="2"/><text x="11.3106%" y="671.50"></text></g><g><title>crossbeam_skiplist::map::SkipMap&lt;K,V&gt;::get (25 samples, 0.28%)</title><rect x="10.9017%" y="709" width="0.2839%" height="15" fill="rgb(242,101,16)" fg:x="960" fg:w="25"/><text x="11.1517%" y="719.50"></text></g><g><title>crossbeam_skiplist::base::try_pin_loop (24 samples, 0.27%)</title><rect x="10.9130%" y="693" width="0.2725%" height="15" fill="rgb(223,190,21)" fg:x="961" fg:w="24"/><text x="11.1630%" y="703.50"></text></g><g><title>crossbeam_skiplist::base::SkipList&lt;K,V&gt;::get (24 samples, 0.27%)</title><rect x="10.9130%" y="677" width="0.2725%" height="15" fill="rgb(215,228,25)" fg:x="961" fg:w="24"/><text x="11.1630%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (9 samples, 0.10%)</title><rect x="11.0834%" y="661" width="0.1022%" height="15" fill="rgb(225,36,22)" fg:x="976" fg:w="9"/><text x="11.3334%" y="671.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::acquire (2 samples, 0.02%)</title><rect x="11.1856%" y="709" width="0.0227%" height="15" fill="rgb(251,106,46)" fg:x="985" fg:w="2"/><text x="11.4356%" y="719.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="11.2423%" y="677" width="0.0227%" height="15" fill="rgb(208,90,1)" fg:x="990" fg:w="2"/><text x="11.4923%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule (1 samples, 0.01%)</title><rect x="11.2650%" y="677" width="0.0114%" height="15" fill="rgb(243,10,4)" fg:x="992" fg:w="1"/><text x="11.5150%" y="687.50"></text></g><g><title>tokio::runtime::task::raw::schedule (2 samples, 0.02%)</title><rect x="11.2764%" y="677" width="0.0227%" height="15" fill="rgb(212,137,27)" fg:x="993" fg:w="2"/><text x="11.5264%" y="687.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (11 samples, 0.12%)</title><rect x="11.2083%" y="709" width="0.1249%" height="15" fill="rgb(231,220,49)" fg:x="987" fg:w="11"/><text x="11.4583%" y="719.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (8 samples, 0.09%)</title><rect x="11.2423%" y="693" width="0.0908%" height="15" fill="rgb(237,96,20)" fg:x="990" fg:w="8"/><text x="11.4923%" y="703.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (3 samples, 0.03%)</title><rect x="11.2991%" y="677" width="0.0341%" height="15" fill="rgb(239,229,30)" fg:x="995" fg:w="3"/><text x="11.5491%" y="687.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (4 samples, 0.05%)</title><rect x="11.3332%" y="709" width="0.0454%" height="15" fill="rgb(219,65,33)" fg:x="998" fg:w="4"/><text x="11.5832%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="15.2850%" y="677" width="0.0114%" height="15" fill="rgb(243,134,7)" fg:x="1346" fg:w="1"/><text x="15.5350%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="15.2850%" y="661" width="0.0114%" height="15" fill="rgb(216,177,54)" fg:x="1346" fg:w="1"/><text x="15.5350%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="15.2850%" y="645" width="0.0114%" height="15" fill="rgb(211,160,20)" fg:x="1346" fg:w="1"/><text x="15.5350%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="15.2850%" y="629" width="0.0114%" height="15" fill="rgb(239,85,39)" fg:x="1346" fg:w="1"/><text x="15.5350%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="15.2850%" y="613" width="0.0114%" height="15" fill="rgb(232,125,22)" fg:x="1346" fg:w="1"/><text x="15.5350%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="15.2850%" y="597" width="0.0114%" height="15" fill="rgb(244,57,34)" fg:x="1346" fg:w="1"/><text x="15.5350%" y="607.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="23.5408%" y="661" width="0.1136%" height="15" fill="rgb(214,203,32)" fg:x="2073" fg:w="10"/><text x="23.7908%" y="671.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="23.5408%" y="645" width="0.1136%" height="15" fill="rgb(207,58,43)" fg:x="2073" fg:w="10"/><text x="23.7908%" y="655.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="23.5408%" y="629" width="0.1136%" height="15" fill="rgb(215,193,15)" fg:x="2073" fg:w="10"/><text x="23.7908%" y="639.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="23.5408%" y="613" width="0.1136%" height="15" fill="rgb(232,15,44)" fg:x="2073" fg:w="10"/><text x="23.7908%" y="623.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="23.5408%" y="597" width="0.1136%" height="15" fill="rgb(212,3,48)" fg:x="2073" fg:w="10"/><text x="23.7908%" y="607.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="23.5635%" y="581" width="0.0908%" height="15" fill="rgb(218,128,7)" fg:x="2075" fg:w="8"/><text x="23.8135%" y="591.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="23.5748%" y="565" width="0.0795%" height="15" fill="rgb(226,216,39)" fg:x="2076" fg:w="7"/><text x="23.8248%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="23.5862%" y="549" width="0.0681%" height="15" fill="rgb(243,47,51)" fg:x="2077" fg:w="6"/><text x="23.8362%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="23.5975%" y="533" width="0.0568%" height="15" fill="rgb(241,183,40)" fg:x="2078" fg:w="5"/><text x="23.8475%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="23.6316%" y="517" width="0.0227%" height="15" fill="rgb(231,217,32)" fg:x="2081" fg:w="2"/><text x="23.8816%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="23.6316%" y="501" width="0.0227%" height="15" fill="rgb(229,61,38)" fg:x="2081" fg:w="2"/><text x="23.8816%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="23.6430%" y="485" width="0.0114%" height="15" fill="rgb(225,210,5)" fg:x="2082" fg:w="1"/><text x="23.8930%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="23.6430%" y="469" width="0.0114%" height="15" fill="rgb(231,79,45)" fg:x="2082" fg:w="1"/><text x="23.8930%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="23.6430%" y="453" width="0.0114%" height="15" fill="rgb(224,100,7)" fg:x="2082" fg:w="1"/><text x="23.8930%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="23.6430%" y="437" width="0.0114%" height="15" fill="rgb(241,198,18)" fg:x="2082" fg:w="1"/><text x="23.8930%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="23.6430%" y="421" width="0.0114%" height="15" fill="rgb(252,97,53)" fg:x="2082" fg:w="1"/><text x="23.8930%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="23.6430%" y="405" width="0.0114%" height="15" fill="rgb(220,88,7)" fg:x="2082" fg:w="1"/><text x="23.8930%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="23.6430%" y="389" width="0.0114%" height="15" fill="rgb(213,176,14)" fg:x="2082" fg:w="1"/><text x="23.8930%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="23.6430%" y="373" width="0.0114%" height="15" fill="rgb(246,73,7)" fg:x="2082" fg:w="1"/><text x="23.8930%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="23.6430%" y="357" width="0.0114%" height="15" fill="rgb(245,64,36)" fg:x="2082" fg:w="1"/><text x="23.8930%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="23.6430%" y="341" width="0.0114%" height="15" fill="rgb(245,80,10)" fg:x="2082" fg:w="1"/><text x="23.8930%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="23.6430%" y="325" width="0.0114%" height="15" fill="rgb(232,107,50)" fg:x="2082" fg:w="1"/><text x="23.8930%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="23.6430%" y="309" width="0.0114%" height="15" fill="rgb(253,3,0)" fg:x="2082" fg:w="1"/><text x="23.8930%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="23.6430%" y="293" width="0.0114%" height="15" fill="rgb(212,99,53)" fg:x="2082" fg:w="1"/><text x="23.8930%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="23.6430%" y="277" width="0.0114%" height="15" fill="rgb(249,111,54)" fg:x="2082" fg:w="1"/><text x="23.8930%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="23.6430%" y="261" width="0.0114%" height="15" fill="rgb(249,55,30)" fg:x="2082" fg:w="1"/><text x="23.8930%" y="271.50"></text></g><g><title>[unknown] (14 samples, 0.16%)</title><rect x="37.6561%" y="645" width="0.1590%" height="15" fill="rgb(237,47,42)" fg:x="3316" fg:w="14"/><text x="37.9061%" y="655.50"></text></g><g><title>[unknown] (14 samples, 0.16%)</title><rect x="37.6561%" y="629" width="0.1590%" height="15" fill="rgb(211,20,18)" fg:x="3316" fg:w="14"/><text x="37.9061%" y="639.50"></text></g><g><title>[unknown] (14 samples, 0.16%)</title><rect x="37.6561%" y="613" width="0.1590%" height="15" fill="rgb(231,203,46)" fg:x="3316" fg:w="14"/><text x="37.9061%" y="623.50"></text></g><g><title>[unknown] (14 samples, 0.16%)</title><rect x="37.6561%" y="597" width="0.1590%" height="15" fill="rgb(237,142,3)" fg:x="3316" fg:w="14"/><text x="37.9061%" y="607.50"></text></g><g><title>[unknown] (14 samples, 0.16%)</title><rect x="37.6561%" y="581" width="0.1590%" height="15" fill="rgb(241,107,1)" fg:x="3316" fg:w="14"/><text x="37.9061%" y="591.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="37.6902%" y="565" width="0.1249%" height="15" fill="rgb(229,83,13)" fg:x="3319" fg:w="11"/><text x="37.9402%" y="575.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="37.6902%" y="549" width="0.1249%" height="15" fill="rgb(241,91,40)" fg:x="3319" fg:w="11"/><text x="37.9402%" y="559.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="37.6902%" y="533" width="0.1249%" height="15" fill="rgb(225,3,45)" fg:x="3319" fg:w="11"/><text x="37.9402%" y="543.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="37.7129%" y="517" width="0.1022%" height="15" fill="rgb(244,223,14)" fg:x="3321" fg:w="9"/><text x="37.9629%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="37.7583%" y="501" width="0.0568%" height="15" fill="rgb(224,124,37)" fg:x="3325" fg:w="5"/><text x="38.0083%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="37.7583%" y="485" width="0.0568%" height="15" fill="rgb(251,171,30)" fg:x="3325" fg:w="5"/><text x="38.0083%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="37.7583%" y="469" width="0.0568%" height="15" fill="rgb(236,46,54)" fg:x="3325" fg:w="5"/><text x="38.0083%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="37.7583%" y="453" width="0.0568%" height="15" fill="rgb(245,213,5)" fg:x="3325" fg:w="5"/><text x="38.0083%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="37.7583%" y="437" width="0.0568%" height="15" fill="rgb(230,144,27)" fg:x="3325" fg:w="5"/><text x="38.0083%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="37.7583%" y="421" width="0.0568%" height="15" fill="rgb(220,86,6)" fg:x="3325" fg:w="5"/><text x="38.0083%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="37.7583%" y="405" width="0.0568%" height="15" fill="rgb(240,20,13)" fg:x="3325" fg:w="5"/><text x="38.0083%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="37.7583%" y="389" width="0.0568%" height="15" fill="rgb(217,89,34)" fg:x="3325" fg:w="5"/><text x="38.0083%" y="399.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="37.7697%" y="373" width="0.0454%" height="15" fill="rgb(229,13,5)" fg:x="3326" fg:w="4"/><text x="38.0197%" y="383.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="37.7697%" y="357" width="0.0454%" height="15" fill="rgb(244,67,35)" fg:x="3326" fg:w="4"/><text x="38.0197%" y="367.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="37.7811%" y="341" width="0.0341%" height="15" fill="rgb(221,40,2)" fg:x="3327" fg:w="3"/><text x="38.0311%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="37.7924%" y="325" width="0.0227%" height="15" fill="rgb(237,157,21)" fg:x="3328" fg:w="2"/><text x="38.0424%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="37.8038%" y="309" width="0.0114%" height="15" fill="rgb(222,94,11)" fg:x="3329" fg:w="1"/><text x="38.0538%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="37.8038%" y="293" width="0.0114%" height="15" fill="rgb(249,113,6)" fg:x="3329" fg:w="1"/><text x="38.0538%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="37.8038%" y="277" width="0.0114%" height="15" fill="rgb(238,137,36)" fg:x="3329" fg:w="1"/><text x="38.0538%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="39.9500%" y="629" width="0.0341%" height="15" fill="rgb(210,102,26)" fg:x="3518" fg:w="3"/><text x="40.2000%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="39.9500%" y="613" width="0.0341%" height="15" fill="rgb(218,30,30)" fg:x="3518" fg:w="3"/><text x="40.2000%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="39.9500%" y="597" width="0.0341%" height="15" fill="rgb(214,67,26)" fg:x="3518" fg:w="3"/><text x="40.2000%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="39.9500%" y="581" width="0.0341%" height="15" fill="rgb(251,9,53)" fg:x="3518" fg:w="3"/><text x="40.2000%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="39.9500%" y="565" width="0.0341%" height="15" fill="rgb(228,204,25)" fg:x="3518" fg:w="3"/><text x="40.2000%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="39.9614%" y="549" width="0.0227%" height="15" fill="rgb(207,153,8)" fg:x="3519" fg:w="2"/><text x="40.2114%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="39.9614%" y="533" width="0.0227%" height="15" fill="rgb(242,9,16)" fg:x="3519" fg:w="2"/><text x="40.2114%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="39.9614%" y="517" width="0.0227%" height="15" fill="rgb(217,211,10)" fg:x="3519" fg:w="2"/><text x="40.2114%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="39.9614%" y="501" width="0.0227%" height="15" fill="rgb(219,228,52)" fg:x="3519" fg:w="2"/><text x="40.2114%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.9727%" y="485" width="0.0114%" height="15" fill="rgb(231,92,29)" fg:x="3520" fg:w="1"/><text x="40.2227%" y="495.50"></text></g><g><title>malloc_consolidate (194 samples, 2.20%)</title><rect x="37.8151%" y="645" width="2.2030%" height="15" fill="rgb(232,8,23)" fg:x="3330" fg:w="194"/><text x="38.0651%" y="655.50">m..</text></g><g><title>unlink_chunk.isra.0 (3 samples, 0.03%)</title><rect x="39.9841%" y="629" width="0.0341%" height="15" fill="rgb(216,211,34)" fg:x="3521" fg:w="3"/><text x="40.2341%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="613" width="0.0114%" height="15" fill="rgb(236,151,0)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="597" width="0.0114%" height="15" fill="rgb(209,168,3)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="581" width="0.0114%" height="15" fill="rgb(208,129,28)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="565" width="0.0114%" height="15" fill="rgb(229,78,22)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="549" width="0.0114%" height="15" fill="rgb(228,187,13)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="533" width="0.0114%" height="15" fill="rgb(240,119,24)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="517" width="0.0114%" height="15" fill="rgb(209,194,42)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="501" width="0.0114%" height="15" fill="rgb(247,200,46)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="485" width="0.0114%" height="15" fill="rgb(218,76,16)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="469" width="0.0114%" height="15" fill="rgb(225,21,48)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="453" width="0.0114%" height="15" fill="rgb(239,223,50)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="437" width="0.0114%" height="15" fill="rgb(244,45,21)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="421" width="0.0114%" height="15" fill="rgb(232,33,43)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="405" width="0.0114%" height="15" fill="rgb(209,8,3)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="389" width="0.0114%" height="15" fill="rgb(214,25,53)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="373" width="0.0114%" height="15" fill="rgb(254,186,54)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="357" width="0.0114%" height="15" fill="rgb(208,174,49)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="341" width="0.0114%" height="15" fill="rgb(233,191,51)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.0068%" y="325" width="0.0114%" height="15" fill="rgb(222,134,10)" fg:x="3523" fg:w="1"/><text x="40.2568%" y="335.50"></text></g><g><title>__GI___libc_malloc (2,496 samples, 28.34%)</title><rect x="15.2964%" y="677" width="28.3443%" height="15" fill="rgb(230,226,20)" fg:x="1347" fg:w="2496"/><text x="15.5464%" y="687.50">__GI___libc_malloc</text></g><g><title>_int_malloc (1,760 samples, 19.99%)</title><rect x="23.6543%" y="661" width="19.9864%" height="15" fill="rgb(251,111,25)" fg:x="2083" fg:w="1760"/><text x="23.9043%" y="671.50">_int_malloc</text></g><g><title>unlink_chunk.isra.0 (319 samples, 3.62%)</title><rect x="40.0182%" y="645" width="3.6225%" height="15" fill="rgb(224,40,46)" fg:x="3524" fg:w="319"/><text x="40.2682%" y="655.50">unli..</text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="43.6180%" y="629" width="0.0227%" height="15" fill="rgb(236,108,47)" fg:x="3841" fg:w="2"/><text x="43.8680%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="43.6180%" y="613" width="0.0227%" height="15" fill="rgb(234,93,0)" fg:x="3841" fg:w="2"/><text x="43.8680%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="43.6180%" y="597" width="0.0227%" height="15" fill="rgb(224,213,32)" fg:x="3841" fg:w="2"/><text x="43.8680%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="43.6180%" y="581" width="0.0227%" height="15" fill="rgb(251,11,48)" fg:x="3841" fg:w="2"/><text x="43.8680%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="43.6180%" y="565" width="0.0227%" height="15" fill="rgb(236,173,5)" fg:x="3841" fg:w="2"/><text x="43.8680%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="43.6180%" y="549" width="0.0227%" height="15" fill="rgb(230,95,12)" fg:x="3841" fg:w="2"/><text x="43.8680%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.6293%" y="533" width="0.0114%" height="15" fill="rgb(232,209,1)" fg:x="3842" fg:w="1"/><text x="43.8793%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.6293%" y="517" width="0.0114%" height="15" fill="rgb(232,6,1)" fg:x="3842" fg:w="1"/><text x="43.8793%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.6293%" y="501" width="0.0114%" height="15" fill="rgb(210,224,50)" fg:x="3842" fg:w="1"/><text x="43.8793%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.6293%" y="485" width="0.0114%" height="15" fill="rgb(228,127,35)" fg:x="3842" fg:w="1"/><text x="43.8793%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.6293%" y="469" width="0.0114%" height="15" fill="rgb(245,102,45)" fg:x="3842" fg:w="1"/><text x="43.8793%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.6293%" y="453" width="0.0114%" height="15" fill="rgb(214,1,49)" fg:x="3842" fg:w="1"/><text x="43.8793%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.6293%" y="437" width="0.0114%" height="15" fill="rgb(226,163,40)" fg:x="3842" fg:w="1"/><text x="43.8793%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.6293%" y="421" width="0.0114%" height="15" fill="rgb(239,212,28)" fg:x="3842" fg:w="1"/><text x="43.8793%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.6293%" y="405" width="0.0114%" height="15" fill="rgb(220,20,13)" fg:x="3842" fg:w="1"/><text x="43.8793%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.6293%" y="389" width="0.0114%" height="15" fill="rgb(210,164,35)" fg:x="3842" fg:w="1"/><text x="43.8793%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.6293%" y="373" width="0.0114%" height="15" fill="rgb(248,109,41)" fg:x="3842" fg:w="1"/><text x="43.8793%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.6293%" y="357" width="0.0114%" height="15" fill="rgb(238,23,50)" fg:x="3842" fg:w="1"/><text x="43.8793%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.6293%" y="341" width="0.0114%" height="15" fill="rgb(211,48,49)" fg:x="3842" fg:w="1"/><text x="43.8793%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.6293%" y="325" width="0.0114%" height="15" fill="rgb(223,36,21)" fg:x="3842" fg:w="1"/><text x="43.8793%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.6293%" y="309" width="0.0114%" height="15" fill="rgb(207,123,46)" fg:x="3842" fg:w="1"/><text x="43.8793%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.6293%" y="293" width="0.0114%" height="15" fill="rgb(240,218,32)" fg:x="3842" fg:w="1"/><text x="43.8793%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.6293%" y="277" width="0.0114%" height="15" fill="rgb(252,5,43)" fg:x="3842" fg:w="1"/><text x="43.8793%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.6293%" y="261" width="0.0114%" height="15" fill="rgb(252,84,19)" fg:x="3842" fg:w="1"/><text x="43.8793%" y="271.50"></text></g><g><title>__memmove_avx_unaligned_erms (997 samples, 11.32%)</title><rect x="43.6407%" y="677" width="11.3218%" height="15" fill="rgb(243,152,39)" fg:x="3843" fg:w="997"/><text x="43.8907%" y="687.50">__memmove_avx_una..</text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="54.8717%" y="661" width="0.0908%" height="15" fill="rgb(234,160,15)" fg:x="4832" fg:w="8"/><text x="55.1217%" y="671.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="54.8717%" y="645" width="0.0908%" height="15" fill="rgb(237,34,20)" fg:x="4832" fg:w="8"/><text x="55.1217%" y="655.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="54.8717%" y="629" width="0.0908%" height="15" fill="rgb(229,97,13)" fg:x="4832" fg:w="8"/><text x="55.1217%" y="639.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="54.8717%" y="613" width="0.0908%" height="15" fill="rgb(234,71,50)" fg:x="4832" fg:w="8"/><text x="55.1217%" y="623.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="54.8717%" y="597" width="0.0908%" height="15" fill="rgb(253,155,4)" fg:x="4832" fg:w="8"/><text x="55.1217%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="54.9057%" y="581" width="0.0568%" height="15" fill="rgb(222,185,37)" fg:x="4835" fg:w="5"/><text x="55.1557%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="54.9171%" y="565" width="0.0454%" height="15" fill="rgb(251,177,13)" fg:x="4836" fg:w="4"/><text x="55.1671%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="54.9171%" y="549" width="0.0454%" height="15" fill="rgb(250,179,40)" fg:x="4836" fg:w="4"/><text x="55.1671%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="54.9171%" y="533" width="0.0454%" height="15" fill="rgb(242,44,2)" fg:x="4836" fg:w="4"/><text x="55.1671%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="54.9171%" y="517" width="0.0454%" height="15" fill="rgb(216,177,13)" fg:x="4836" fg:w="4"/><text x="55.1671%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="54.9285%" y="501" width="0.0341%" height="15" fill="rgb(216,106,43)" fg:x="4837" fg:w="3"/><text x="55.1785%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="54.9398%" y="485" width="0.0227%" height="15" fill="rgb(216,183,2)" fg:x="4838" fg:w="2"/><text x="55.1898%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="54.9512%" y="469" width="0.0114%" height="15" fill="rgb(249,75,3)" fg:x="4839" fg:w="1"/><text x="55.2012%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="54.9512%" y="453" width="0.0114%" height="15" fill="rgb(219,67,39)" fg:x="4839" fg:w="1"/><text x="55.2012%" y="463.50"></text></g><g><title>__rdl_alloc (37 samples, 0.42%)</title><rect x="54.9625%" y="677" width="0.4202%" height="15" fill="rgb(253,228,2)" fg:x="4840" fg:w="37"/><text x="55.2125%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (24 samples, 0.27%)</title><rect x="55.1102%" y="661" width="0.2725%" height="15" fill="rgb(235,138,27)" fg:x="4853" fg:w="24"/><text x="55.3602%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,756 samples, 42.65%)</title><rect x="12.8094%" y="693" width="42.6527%" height="15" fill="rgb(236,97,51)" fg:x="1128" fg:w="3756"/><text x="13.0594%" y="703.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>__rust_alloc (7 samples, 0.08%)</title><rect x="55.3827%" y="677" width="0.0795%" height="15" fill="rgb(240,80,30)" fg:x="4877" fg:w="7"/><text x="55.6327%" y="687.50"></text></g><g><title>__GI___libc_free (593 samples, 6.73%)</title><rect x="55.4622%" y="693" width="6.7340%" height="15" fill="rgb(230,178,19)" fg:x="4884" fg:w="593"/><text x="55.7122%" y="703.50">__GI___li..</text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="62.1395%" y="677" width="0.0568%" height="15" fill="rgb(210,190,27)" fg:x="5472" fg:w="5"/><text x="62.3895%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="62.1395%" y="661" width="0.0568%" height="15" fill="rgb(222,107,31)" fg:x="5472" fg:w="5"/><text x="62.3895%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="62.1395%" y="645" width="0.0568%" height="15" fill="rgb(216,127,34)" fg:x="5472" fg:w="5"/><text x="62.3895%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="62.1395%" y="629" width="0.0568%" height="15" fill="rgb(234,116,52)" fg:x="5472" fg:w="5"/><text x="62.3895%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="62.1395%" y="613" width="0.0568%" height="15" fill="rgb(222,124,15)" fg:x="5472" fg:w="5"/><text x="62.3895%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="62.1395%" y="597" width="0.0568%" height="15" fill="rgb(231,179,28)" fg:x="5472" fg:w="5"/><text x="62.3895%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="62.1508%" y="581" width="0.0454%" height="15" fill="rgb(226,93,45)" fg:x="5473" fg:w="4"/><text x="62.4008%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="62.1508%" y="565" width="0.0454%" height="15" fill="rgb(215,8,51)" fg:x="5473" fg:w="4"/><text x="62.4008%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="62.1508%" y="549" width="0.0454%" height="15" fill="rgb(223,106,5)" fg:x="5473" fg:w="4"/><text x="62.4008%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="62.1622%" y="533" width="0.0341%" height="15" fill="rgb(250,191,5)" fg:x="5474" fg:w="3"/><text x="62.4122%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="62.1735%" y="517" width="0.0227%" height="15" fill="rgb(242,132,44)" fg:x="5475" fg:w="2"/><text x="62.4235%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="62.1735%" y="501" width="0.0227%" height="15" fill="rgb(251,152,29)" fg:x="5475" fg:w="2"/><text x="62.4235%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="62.1849%" y="485" width="0.0114%" height="15" fill="rgb(218,179,5)" fg:x="5476" fg:w="1"/><text x="62.4349%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="62.1849%" y="469" width="0.0114%" height="15" fill="rgb(227,67,19)" fg:x="5476" fg:w="1"/><text x="62.4349%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="62.1849%" y="453" width="0.0114%" height="15" fill="rgb(233,119,31)" fg:x="5476" fg:w="1"/><text x="62.4349%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="62.1849%" y="437" width="0.0114%" height="15" fill="rgb(241,120,22)" fg:x="5476" fg:w="1"/><text x="62.4349%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="62.1849%" y="421" width="0.0114%" height="15" fill="rgb(224,102,30)" fg:x="5476" fg:w="1"/><text x="62.4349%" y="431.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="62.1962%" y="693" width="0.0568%" height="15" fill="rgb(210,164,37)" fg:x="5477" fg:w="5"/><text x="62.4462%" y="703.50"></text></g><g><title>[unknown] (76 samples, 0.86%)</title><rect x="62.5823%" y="677" width="0.8630%" height="15" fill="rgb(226,191,16)" fg:x="5511" fg:w="76"/><text x="62.8323%" y="687.50"></text></g><g><title>[unknown] (76 samples, 0.86%)</title><rect x="62.5823%" y="661" width="0.8630%" height="15" fill="rgb(214,40,45)" fg:x="5511" fg:w="76"/><text x="62.8323%" y="671.50"></text></g><g><title>[unknown] (73 samples, 0.83%)</title><rect x="62.6164%" y="645" width="0.8290%" height="15" fill="rgb(244,29,26)" fg:x="5514" fg:w="73"/><text x="62.8664%" y="655.50"></text></g><g><title>[unknown] (61 samples, 0.69%)</title><rect x="62.7527%" y="629" width="0.6927%" height="15" fill="rgb(216,16,5)" fg:x="5526" fg:w="61"/><text x="63.0027%" y="639.50"></text></g><g><title>[unknown] (60 samples, 0.68%)</title><rect x="62.7640%" y="613" width="0.6814%" height="15" fill="rgb(249,76,35)" fg:x="5527" fg:w="60"/><text x="63.0140%" y="623.50"></text></g><g><title>[unknown] (49 samples, 0.56%)</title><rect x="62.8889%" y="597" width="0.5564%" height="15" fill="rgb(207,11,44)" fg:x="5538" fg:w="49"/><text x="63.1389%" y="607.50"></text></g><g><title>[unknown] (39 samples, 0.44%)</title><rect x="63.0025%" y="581" width="0.4429%" height="15" fill="rgb(228,190,49)" fg:x="5548" fg:w="39"/><text x="63.2525%" y="591.50"></text></g><g><title>[unknown] (34 samples, 0.39%)</title><rect x="63.0593%" y="565" width="0.3861%" height="15" fill="rgb(214,173,12)" fg:x="5553" fg:w="34"/><text x="63.3093%" y="575.50"></text></g><g><title>[unknown] (26 samples, 0.30%)</title><rect x="63.1501%" y="549" width="0.2953%" height="15" fill="rgb(218,26,35)" fg:x="5561" fg:w="26"/><text x="63.4001%" y="559.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="63.3318%" y="533" width="0.1136%" height="15" fill="rgb(220,200,19)" fg:x="5577" fg:w="10"/><text x="63.5818%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.4340%" y="517" width="0.0114%" height="15" fill="rgb(239,95,49)" fg:x="5586" fg:w="1"/><text x="63.6840%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.4340%" y="501" width="0.0114%" height="15" fill="rgb(235,85,53)" fg:x="5586" fg:w="1"/><text x="63.6840%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.4340%" y="485" width="0.0114%" height="15" fill="rgb(233,133,31)" fg:x="5586" fg:w="1"/><text x="63.6840%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.4340%" y="469" width="0.0114%" height="15" fill="rgb(218,25,20)" fg:x="5586" fg:w="1"/><text x="63.6840%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.4340%" y="453" width="0.0114%" height="15" fill="rgb(252,210,38)" fg:x="5586" fg:w="1"/><text x="63.6840%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.4340%" y="437" width="0.0114%" height="15" fill="rgb(242,134,21)" fg:x="5586" fg:w="1"/><text x="63.6840%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.4340%" y="421" width="0.0114%" height="15" fill="rgb(213,28,48)" fg:x="5586" fg:w="1"/><text x="63.6840%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.4340%" y="405" width="0.0114%" height="15" fill="rgb(250,196,2)" fg:x="5586" fg:w="1"/><text x="63.6840%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.4340%" y="389" width="0.0114%" height="15" fill="rgb(227,5,17)" fg:x="5586" fg:w="1"/><text x="63.6840%" y="399.50"></text></g><g><title>__close (106 samples, 1.20%)</title><rect x="62.2530%" y="693" width="1.2037%" height="15" fill="rgb(221,226,24)" fg:x="5482" fg:w="106"/><text x="62.5030%" y="703.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.01%)</title><rect x="63.4454%" y="677" width="0.0114%" height="15" fill="rgb(211,5,48)" fg:x="5587" fg:w="1"/><text x="63.6954%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (12 samples, 0.14%)</title><rect x="63.4567%" y="693" width="0.1363%" height="15" fill="rgb(219,150,6)" fg:x="5588" fg:w="12"/><text x="63.7067%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="63.5930%" y="693" width="0.0114%" height="15" fill="rgb(251,46,16)" fg:x="5600" fg:w="1"/><text x="63.8430%" y="703.50"></text></g><g><title>__rdl_dealloc (24 samples, 0.27%)</title><rect x="63.6044%" y="693" width="0.2725%" height="15" fill="rgb(220,204,40)" fg:x="5601" fg:w="24"/><text x="63.8544%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (24 samples, 0.27%)</title><rect x="63.6044%" y="677" width="0.2725%" height="15" fill="rgb(211,85,2)" fg:x="5601" fg:w="24"/><text x="63.8544%" y="687.50"></text></g><g><title>__rust_alloc (3 samples, 0.03%)</title><rect x="63.8769%" y="693" width="0.0341%" height="15" fill="rgb(229,17,7)" fg:x="5625" fg:w="3"/><text x="64.1269%" y="703.50"></text></g><g><title>__rust_dealloc (21 samples, 0.24%)</title><rect x="63.9110%" y="693" width="0.2385%" height="15" fill="rgb(239,72,28)" fg:x="5628" fg:w="21"/><text x="64.1610%" y="703.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="74.7445%" y="677" width="0.0908%" height="15" fill="rgb(230,47,54)" fg:x="6582" fg:w="8"/><text x="74.9945%" y="687.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="74.7445%" y="661" width="0.0908%" height="15" fill="rgb(214,50,8)" fg:x="6582" fg:w="8"/><text x="74.9945%" y="671.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="74.7445%" y="645" width="0.0908%" height="15" fill="rgb(216,198,43)" fg:x="6582" fg:w="8"/><text x="74.9945%" y="655.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="74.7445%" y="629" width="0.0908%" height="15" fill="rgb(234,20,35)" fg:x="6582" fg:w="8"/><text x="74.9945%" y="639.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="74.7445%" y="613" width="0.0908%" height="15" fill="rgb(254,45,19)" fg:x="6582" fg:w="8"/><text x="74.9945%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="74.7786%" y="597" width="0.0568%" height="15" fill="rgb(219,14,44)" fg:x="6585" fg:w="5"/><text x="75.0286%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="74.7786%" y="581" width="0.0568%" height="15" fill="rgb(217,220,26)" fg:x="6585" fg:w="5"/><text x="75.0286%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="74.7786%" y="565" width="0.0568%" height="15" fill="rgb(213,158,28)" fg:x="6585" fg:w="5"/><text x="75.0286%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="74.7786%" y="549" width="0.0568%" height="15" fill="rgb(252,51,52)" fg:x="6585" fg:w="5"/><text x="75.0286%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="74.8013%" y="533" width="0.0341%" height="15" fill="rgb(246,89,16)" fg:x="6587" fg:w="3"/><text x="75.0513%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="74.8126%" y="517" width="0.0227%" height="15" fill="rgb(216,158,49)" fg:x="6588" fg:w="2"/><text x="75.0626%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="74.8126%" y="501" width="0.0227%" height="15" fill="rgb(236,107,19)" fg:x="6588" fg:w="2"/><text x="75.0626%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="74.8126%" y="485" width="0.0227%" height="15" fill="rgb(228,185,30)" fg:x="6588" fg:w="2"/><text x="75.0626%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="74.8126%" y="469" width="0.0227%" height="15" fill="rgb(246,134,8)" fg:x="6588" fg:w="2"/><text x="75.0626%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="74.8126%" y="453" width="0.0227%" height="15" fill="rgb(214,143,50)" fg:x="6588" fg:w="2"/><text x="75.0626%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="74.8126%" y="437" width="0.0227%" height="15" fill="rgb(228,75,8)" fg:x="6588" fg:w="2"/><text x="75.0626%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="74.8126%" y="421" width="0.0227%" height="15" fill="rgb(207,175,4)" fg:x="6588" fg:w="2"/><text x="75.0626%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="74.8126%" y="405" width="0.0227%" height="15" fill="rgb(205,108,24)" fg:x="6588" fg:w="2"/><text x="75.0626%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="74.8126%" y="389" width="0.0227%" height="15" fill="rgb(244,120,49)" fg:x="6588" fg:w="2"/><text x="75.0626%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="74.8126%" y="373" width="0.0227%" height="15" fill="rgb(223,47,38)" fg:x="6588" fg:w="2"/><text x="75.0626%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="74.8126%" y="357" width="0.0227%" height="15" fill="rgb(229,179,11)" fg:x="6588" fg:w="2"/><text x="75.0626%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="74.8126%" y="341" width="0.0227%" height="15" fill="rgb(231,122,1)" fg:x="6588" fg:w="2"/><text x="75.0626%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="74.8126%" y="325" width="0.0227%" height="15" fill="rgb(245,119,9)" fg:x="6588" fg:w="2"/><text x="75.0626%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="74.8126%" y="309" width="0.0227%" height="15" fill="rgb(241,163,25)" fg:x="6588" fg:w="2"/><text x="75.0626%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="74.8240%" y="293" width="0.0114%" height="15" fill="rgb(217,214,3)" fg:x="6589" fg:w="1"/><text x="75.0740%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="74.8240%" y="277" width="0.0114%" height="15" fill="rgb(240,86,28)" fg:x="6589" fg:w="1"/><text x="75.0740%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="74.8240%" y="261" width="0.0114%" height="15" fill="rgb(215,47,9)" fg:x="6589" fg:w="1"/><text x="75.0740%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="74.8240%" y="245" width="0.0114%" height="15" fill="rgb(252,25,45)" fg:x="6589" fg:w="1"/><text x="75.0740%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="74.8240%" y="229" width="0.0114%" height="15" fill="rgb(251,164,9)" fg:x="6589" fg:w="1"/><text x="75.0740%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="74.8240%" y="213" width="0.0114%" height="15" fill="rgb(233,194,0)" fg:x="6589" fg:w="1"/><text x="75.0740%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="74.8240%" y="197" width="0.0114%" height="15" fill="rgb(249,111,24)" fg:x="6589" fg:w="1"/><text x="75.0740%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="74.8240%" y="181" width="0.0114%" height="15" fill="rgb(250,223,3)" fg:x="6589" fg:w="1"/><text x="75.0740%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="74.8240%" y="165" width="0.0114%" height="15" fill="rgb(236,178,37)" fg:x="6589" fg:w="1"/><text x="75.0740%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="74.8240%" y="149" width="0.0114%" height="15" fill="rgb(241,158,50)" fg:x="6589" fg:w="1"/><text x="75.0740%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="74.8240%" y="133" width="0.0114%" height="15" fill="rgb(213,121,41)" fg:x="6589" fg:w="1"/><text x="75.0740%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="74.8240%" y="117" width="0.0114%" height="15" fill="rgb(240,92,3)" fg:x="6589" fg:w="1"/><text x="75.0740%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="74.8240%" y="101" width="0.0114%" height="15" fill="rgb(205,123,3)" fg:x="6589" fg:w="1"/><text x="75.0740%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="74.8240%" y="85" width="0.0114%" height="15" fill="rgb(205,97,47)" fg:x="6589" fg:w="1"/><text x="75.0740%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="74.8240%" y="69" width="0.0114%" height="15" fill="rgb(247,152,14)" fg:x="6589" fg:w="1"/><text x="75.0740%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="74.8240%" y="53" width="0.0114%" height="15" fill="rgb(248,195,53)" fg:x="6589" fg:w="1"/><text x="75.0740%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="74.8240%" y="37" width="0.0114%" height="15" fill="rgb(226,201,16)" fg:x="6589" fg:w="1"/><text x="75.0740%" y="47.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="81.2287%" y="661" width="0.0795%" height="15" fill="rgb(205,98,0)" fg:x="7153" fg:w="7"/><text x="81.4787%" y="671.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="81.2287%" y="645" width="0.0795%" height="15" fill="rgb(214,191,48)" fg:x="7153" fg:w="7"/><text x="81.4787%" y="655.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="81.2287%" y="629" width="0.0795%" height="15" fill="rgb(237,112,39)" fg:x="7153" fg:w="7"/><text x="81.4787%" y="639.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="81.2287%" y="613" width="0.0795%" height="15" fill="rgb(247,203,27)" fg:x="7153" fg:w="7"/><text x="81.4787%" y="623.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="81.2287%" y="597" width="0.0795%" height="15" fill="rgb(235,124,28)" fg:x="7153" fg:w="7"/><text x="81.4787%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="81.2514%" y="581" width="0.0568%" height="15" fill="rgb(208,207,46)" fg:x="7155" fg:w="5"/><text x="81.5014%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="81.2628%" y="565" width="0.0454%" height="15" fill="rgb(234,176,4)" fg:x="7156" fg:w="4"/><text x="81.5128%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="81.2628%" y="549" width="0.0454%" height="15" fill="rgb(230,133,28)" fg:x="7156" fg:w="4"/><text x="81.5128%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="81.2628%" y="533" width="0.0454%" height="15" fill="rgb(211,137,40)" fg:x="7156" fg:w="4"/><text x="81.5128%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="81.2628%" y="517" width="0.0454%" height="15" fill="rgb(254,35,13)" fg:x="7156" fg:w="4"/><text x="81.5128%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="81.2628%" y="501" width="0.0454%" height="15" fill="rgb(225,49,51)" fg:x="7156" fg:w="4"/><text x="81.5128%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="81.2628%" y="485" width="0.0454%" height="15" fill="rgb(251,10,15)" fg:x="7156" fg:w="4"/><text x="81.5128%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="81.2741%" y="469" width="0.0341%" height="15" fill="rgb(228,207,15)" fg:x="7157" fg:w="3"/><text x="81.5241%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="81.2741%" y="453" width="0.0341%" height="15" fill="rgb(241,99,19)" fg:x="7157" fg:w="3"/><text x="81.5241%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="81.2741%" y="437" width="0.0341%" height="15" fill="rgb(207,104,49)" fg:x="7157" fg:w="3"/><text x="81.5241%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="81.2741%" y="421" width="0.0341%" height="15" fill="rgb(234,99,18)" fg:x="7157" fg:w="3"/><text x="81.5241%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="81.2855%" y="405" width="0.0227%" height="15" fill="rgb(213,191,49)" fg:x="7158" fg:w="2"/><text x="81.5355%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="81.2855%" y="389" width="0.0227%" height="15" fill="rgb(210,226,19)" fg:x="7158" fg:w="2"/><text x="81.5355%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="81.2855%" y="373" width="0.0227%" height="15" fill="rgb(229,97,18)" fg:x="7158" fg:w="2"/><text x="81.5355%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.2968%" y="357" width="0.0114%" height="15" fill="rgb(211,167,15)" fg:x="7159" fg:w="1"/><text x="81.5468%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.2968%" y="341" width="0.0114%" height="15" fill="rgb(210,169,34)" fg:x="7159" fg:w="1"/><text x="81.5468%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.2968%" y="325" width="0.0114%" height="15" fill="rgb(241,121,31)" fg:x="7159" fg:w="1"/><text x="81.5468%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.2968%" y="309" width="0.0114%" height="15" fill="rgb(232,40,11)" fg:x="7159" fg:w="1"/><text x="81.5468%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.2968%" y="293" width="0.0114%" height="15" fill="rgb(205,86,26)" fg:x="7159" fg:w="1"/><text x="81.5468%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.2968%" y="277" width="0.0114%" height="15" fill="rgb(231,126,28)" fg:x="7159" fg:w="1"/><text x="81.5468%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.2968%" y="261" width="0.0114%" height="15" fill="rgb(219,221,18)" fg:x="7159" fg:w="1"/><text x="81.5468%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.2968%" y="245" width="0.0114%" height="15" fill="rgb(211,40,0)" fg:x="7159" fg:w="1"/><text x="81.5468%" y="255.50"></text></g><g><title>malloc_consolidate (603 samples, 6.85%)</title><rect x="74.8353%" y="677" width="6.8476%" height="15" fill="rgb(239,85,43)" fg:x="6590" fg:w="603"/><text x="75.0853%" y="687.50">malloc_co..</text></g><g><title>unlink_chunk.isra.0 (33 samples, 0.37%)</title><rect x="81.3082%" y="661" width="0.3747%" height="15" fill="rgb(231,55,21)" fg:x="7160" fg:w="33"/><text x="81.5582%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.6716%" y="645" width="0.0114%" height="15" fill="rgb(225,184,43)" fg:x="7192" fg:w="1"/><text x="81.9216%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.6716%" y="629" width="0.0114%" height="15" fill="rgb(251,158,41)" fg:x="7192" fg:w="1"/><text x="81.9216%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.6716%" y="613" width="0.0114%" height="15" fill="rgb(234,159,37)" fg:x="7192" fg:w="1"/><text x="81.9216%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.6716%" y="597" width="0.0114%" height="15" fill="rgb(216,204,22)" fg:x="7192" fg:w="1"/><text x="81.9216%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.6716%" y="581" width="0.0114%" height="15" fill="rgb(214,17,3)" fg:x="7192" fg:w="1"/><text x="81.9216%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.6716%" y="565" width="0.0114%" height="15" fill="rgb(212,111,17)" fg:x="7192" fg:w="1"/><text x="81.9216%" y="575.50"></text></g><g><title>_int_free (1,545 samples, 17.54%)</title><rect x="64.1494%" y="693" width="17.5449%" height="15" fill="rgb(221,157,24)" fg:x="5649" fg:w="1545"/><text x="64.3994%" y="703.50">_int_free</text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.01%)</title><rect x="81.6829%" y="677" width="0.0114%" height="15" fill="rgb(252,16,13)" fg:x="7193" fg:w="1"/><text x="81.9329%" y="687.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.06%)</title><rect x="81.7170%" y="661" width="0.0568%" height="15" fill="rgb(221,62,2)" fg:x="7196" fg:w="5"/><text x="81.9670%" y="671.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="81.7624%" y="645" width="0.0114%" height="15" fill="rgb(247,87,22)" fg:x="7200" fg:w="1"/><text x="82.0124%" y="655.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="81.7738%" y="661" width="0.0114%" height="15" fill="rgb(215,73,9)" fg:x="7201" fg:w="1"/><text x="82.0238%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.10%)</title><rect x="81.6943%" y="693" width="0.1022%" height="15" fill="rgb(207,175,33)" fg:x="7194" fg:w="9"/><text x="81.9443%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.09%)</title><rect x="81.7057%" y="677" width="0.0908%" height="15" fill="rgb(243,129,54)" fg:x="7195" fg:w="8"/><text x="81.9557%" y="687.50"></text></g><g><title>__rust_realloc (1 samples, 0.01%)</title><rect x="81.7851%" y="661" width="0.0114%" height="15" fill="rgb(227,119,45)" fg:x="7202" fg:w="1"/><text x="82.0351%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.05%)</title><rect x="81.8192%" y="661" width="0.0454%" height="15" fill="rgb(205,109,36)" fg:x="7205" fg:w="4"/><text x="82.0692%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.05%)</title><rect x="81.8192%" y="645" width="0.0454%" height="15" fill="rgb(205,6,39)" fg:x="7205" fg:w="4"/><text x="82.0692%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="81.8306%" y="629" width="0.0341%" height="15" fill="rgb(221,32,16)" fg:x="7206" fg:w="3"/><text x="82.0806%" y="639.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.03%)</title><rect x="81.8306%" y="613" width="0.0341%" height="15" fill="rgb(228,144,50)" fg:x="7206" fg:w="3"/><text x="82.0806%" y="623.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="81.8533%" y="597" width="0.0114%" height="15" fill="rgb(229,201,53)" fg:x="7208" fg:w="1"/><text x="82.1033%" y="607.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (9 samples, 0.10%)</title><rect x="81.7965%" y="693" width="0.1022%" height="15" fill="rgb(249,153,27)" fg:x="7203" fg:w="9"/><text x="82.0465%" y="703.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (8 samples, 0.09%)</title><rect x="81.8079%" y="677" width="0.0908%" height="15" fill="rgb(227,106,25)" fg:x="7204" fg:w="8"/><text x="82.0579%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="81.8646%" y="661" width="0.0341%" height="15" fill="rgb(230,65,29)" fg:x="7209" fg:w="3"/><text x="82.1146%" y="671.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="81.8987%" y="693" width="0.0114%" height="15" fill="rgb(221,57,46)" fg:x="7212" fg:w="1"/><text x="82.1487%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.8987%" y="677" width="0.0114%" height="15" fill="rgb(229,161,17)" fg:x="7212" fg:w="1"/><text x="82.1487%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="81.8987%" y="661" width="0.0114%" height="15" fill="rgb(222,213,11)" fg:x="7212" fg:w="1"/><text x="82.1487%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;yadb::storage::async_cache::AsyncCache&lt;yadb::storage::table::Index,yadb::storage::table::Table,(),yadb::storage::errors::YAStorageError&gt;::get::{{closure}}&gt; (5 samples, 0.06%)</title><rect x="81.9101%" y="693" width="0.0568%" height="15" fill="rgb(235,35,13)" fg:x="7213" fg:w="5"/><text x="82.1601%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="81.9668%" y="693" width="0.0114%" height="15" fill="rgb(233,158,34)" fg:x="7218" fg:w="1"/><text x="82.2168%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="81.9668%" y="677" width="0.0114%" height="15" fill="rgb(215,151,48)" fg:x="7218" fg:w="1"/><text x="82.2168%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="81.9668%" y="661" width="0.0114%" height="15" fill="rgb(229,84,14)" fg:x="7218" fg:w="1"/><text x="82.2168%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="81.9782%" y="693" width="0.0227%" height="15" fill="rgb(229,68,14)" fg:x="7219" fg:w="2"/><text x="82.2282%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="81.9896%" y="677" width="0.0114%" height="15" fill="rgb(243,106,26)" fg:x="7220" fg:w="1"/><text x="82.2396%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1 samples, 0.01%)</title><rect x="82.0009%" y="693" width="0.0114%" height="15" fill="rgb(206,45,38)" fg:x="7221" fg:w="1"/><text x="82.2509%" y="703.50"></text></g><g><title>schnellru::LruMap&lt;K,V,L,S&gt;::hash_key (1 samples, 0.01%)</title><rect x="82.0123%" y="693" width="0.0114%" height="15" fill="rgb(226,6,15)" fg:x="7222" fg:w="1"/><text x="82.2623%" y="703.50"></text></g><g><title>schnellru::LruMap&lt;K,V,L,S&gt;::try_grow_and_insert (4 samples, 0.05%)</title><rect x="82.0236%" y="693" width="0.0454%" height="15" fill="rgb(232,22,54)" fg:x="7223" fg:w="4"/><text x="82.2736%" y="703.50"></text></g><g><title>schnellru::LruMap&lt;K,V,L,S&gt;::try_grow (4 samples, 0.05%)</title><rect x="82.0236%" y="677" width="0.0454%" height="15" fill="rgb(229,222,32)" fg:x="7223" fg:w="4"/><text x="82.2736%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="82.0690%" y="565" width="0.0341%" height="15" fill="rgb(228,62,29)" fg:x="7227" fg:w="3"/><text x="82.3190%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="82.0690%" y="549" width="0.0341%" height="15" fill="rgb(251,103,34)" fg:x="7227" fg:w="3"/><text x="82.3190%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.03%)</title><rect x="82.0690%" y="533" width="0.0341%" height="15" fill="rgb(233,12,30)" fg:x="7227" fg:w="3"/><text x="82.3190%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="82.0690%" y="517" width="0.0341%" height="15" fill="rgb(238,52,0)" fg:x="7227" fg:w="3"/><text x="82.3190%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="82.0690%" y="501" width="0.0341%" height="15" fill="rgb(223,98,5)" fg:x="7227" fg:w="3"/><text x="82.3190%" y="511.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="82.0690%" y="485" width="0.0341%" height="15" fill="rgb(228,75,37)" fg:x="7227" fg:w="3"/><text x="82.3190%" y="495.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.03%)</title><rect x="82.0690%" y="469" width="0.0341%" height="15" fill="rgb(205,115,49)" fg:x="7227" fg:w="3"/><text x="82.3190%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.0918%" y="453" width="0.0114%" height="15" fill="rgb(250,154,43)" fg:x="7229" fg:w="1"/><text x="82.3418%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.0918%" y="437" width="0.0114%" height="15" fill="rgb(226,43,29)" fg:x="7229" fg:w="1"/><text x="82.3418%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.0918%" y="421" width="0.0114%" height="15" fill="rgb(249,228,39)" fg:x="7229" fg:w="1"/><text x="82.3418%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.0918%" y="405" width="0.0114%" height="15" fill="rgb(216,79,43)" fg:x="7229" fg:w="1"/><text x="82.3418%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.0918%" y="389" width="0.0114%" height="15" fill="rgb(228,95,12)" fg:x="7229" fg:w="1"/><text x="82.3418%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.0918%" y="373" width="0.0114%" height="15" fill="rgb(249,221,15)" fg:x="7229" fg:w="1"/><text x="82.3418%" y="383.50"></text></g><g><title>std::path::Path::to_path_buf (4 samples, 0.05%)</title><rect x="82.0690%" y="677" width="0.0454%" height="15" fill="rgb(233,34,13)" fg:x="7227" fg:w="4"/><text x="82.3190%" y="687.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (4 samples, 0.05%)</title><rect x="82.0690%" y="661" width="0.0454%" height="15" fill="rgb(214,103,39)" fg:x="7227" fg:w="4"/><text x="82.3190%" y="671.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (4 samples, 0.05%)</title><rect x="82.0690%" y="645" width="0.0454%" height="15" fill="rgb(251,126,39)" fg:x="7227" fg:w="4"/><text x="82.3190%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.05%)</title><rect x="82.0690%" y="629" width="0.0454%" height="15" fill="rgb(214,216,36)" fg:x="7227" fg:w="4"/><text x="82.3190%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="82.0690%" y="613" width="0.0454%" height="15" fill="rgb(220,221,8)" fg:x="7227" fg:w="4"/><text x="82.3190%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="82.0690%" y="597" width="0.0454%" height="15" fill="rgb(240,216,3)" fg:x="7227" fg:w="4"/><text x="82.3190%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="82.0690%" y="581" width="0.0454%" height="15" fill="rgb(232,218,17)" fg:x="7227" fg:w="4"/><text x="82.3190%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="82.1031%" y="565" width="0.0114%" height="15" fill="rgb(229,163,45)" fg:x="7230" fg:w="1"/><text x="82.3531%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="82.1031%" y="549" width="0.0114%" height="15" fill="rgb(231,110,42)" fg:x="7230" fg:w="1"/><text x="82.3531%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="82.1031%" y="533" width="0.0114%" height="15" fill="rgb(208,170,48)" fg:x="7230" fg:w="1"/><text x="82.3531%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="82.1258%" y="501" width="0.0114%" height="15" fill="rgb(239,116,25)" fg:x="7232" fg:w="1"/><text x="82.3758%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="82.2280%" y="405" width="0.0114%" height="15" fill="rgb(219,200,50)" fg:x="7241" fg:w="1"/><text x="82.4780%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="82.2394%" y="405" width="0.0227%" height="15" fill="rgb(245,200,0)" fg:x="7242" fg:w="2"/><text x="82.4894%" y="415.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="82.2621%" y="405" width="0.0341%" height="15" fill="rgb(245,119,33)" fg:x="7244" fg:w="3"/><text x="82.5121%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (239 samples, 2.71%)</title><rect x="82.1372%" y="501" width="2.7141%" height="15" fill="rgb(231,125,12)" fg:x="7233" fg:w="239"/><text x="82.3872%" y="511.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (237 samples, 2.69%)</title><rect x="82.1599%" y="485" width="2.6913%" height="15" fill="rgb(216,96,41)" fg:x="7235" fg:w="237"/><text x="82.4099%" y="495.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (237 samples, 2.69%)</title><rect x="82.1599%" y="469" width="2.6913%" height="15" fill="rgb(248,43,45)" fg:x="7235" fg:w="237"/><text x="82.4099%" y="479.50">al..</text></g><g><title>alloc::alloc::realloc (237 samples, 2.69%)</title><rect x="82.1599%" y="453" width="2.6913%" height="15" fill="rgb(217,222,7)" fg:x="7235" fg:w="237"/><text x="82.4099%" y="463.50">al..</text></g><g><title>__GI___libc_realloc (237 samples, 2.69%)</title><rect x="82.1599%" y="437" width="2.6913%" height="15" fill="rgb(233,28,6)" fg:x="7235" fg:w="237"/><text x="82.4099%" y="447.50">__..</text></g><g><title>_int_realloc (232 samples, 2.63%)</title><rect x="82.2167%" y="421" width="2.6346%" height="15" fill="rgb(231,218,15)" fg:x="7240" fg:w="232"/><text x="82.4667%" y="431.50">_i..</text></g><g><title>_int_malloc (225 samples, 2.56%)</title><rect x="82.2962%" y="405" width="2.5551%" height="15" fill="rgb(226,171,48)" fg:x="7247" fg:w="225"/><text x="82.5462%" y="415.50">_i..</text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="84.8172%" y="389" width="0.0341%" height="15" fill="rgb(235,201,9)" fg:x="7469" fg:w="3"/><text x="85.0672%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="84.8172%" y="373" width="0.0341%" height="15" fill="rgb(217,80,15)" fg:x="7469" fg:w="3"/><text x="85.0672%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="84.8172%" y="357" width="0.0341%" height="15" fill="rgb(219,152,8)" fg:x="7469" fg:w="3"/><text x="85.0672%" y="367.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="84.8172%" y="341" width="0.0341%" height="15" fill="rgb(243,107,38)" fg:x="7469" fg:w="3"/><text x="85.0672%" y="351.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="84.8172%" y="325" width="0.0341%" height="15" fill="rgb(231,17,5)" fg:x="7469" fg:w="3"/><text x="85.0672%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="84.8285%" y="309" width="0.0227%" height="15" fill="rgb(209,25,54)" fg:x="7470" fg:w="2"/><text x="85.0785%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.8399%" y="293" width="0.0114%" height="15" fill="rgb(219,0,2)" fg:x="7471" fg:w="1"/><text x="85.0899%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.8399%" y="277" width="0.0114%" height="15" fill="rgb(246,9,5)" fg:x="7471" fg:w="1"/><text x="85.0899%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.8399%" y="261" width="0.0114%" height="15" fill="rgb(226,159,4)" fg:x="7471" fg:w="1"/><text x="85.0899%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.8399%" y="245" width="0.0114%" height="15" fill="rgb(219,175,34)" fg:x="7471" fg:w="1"/><text x="85.0899%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.8399%" y="229" width="0.0114%" height="15" fill="rgb(236,10,46)" fg:x="7471" fg:w="1"/><text x="85.0899%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.8399%" y="213" width="0.0114%" height="15" fill="rgb(240,211,16)" fg:x="7471" fg:w="1"/><text x="85.0899%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.8399%" y="197" width="0.0114%" height="15" fill="rgb(205,3,43)" fg:x="7471" fg:w="1"/><text x="85.0899%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.8399%" y="181" width="0.0114%" height="15" fill="rgb(245,7,22)" fg:x="7471" fg:w="1"/><text x="85.0899%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.8399%" y="165" width="0.0114%" height="15" fill="rgb(239,132,32)" fg:x="7471" fg:w="1"/><text x="85.0899%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (242 samples, 2.75%)</title><rect x="82.1145%" y="565" width="2.7481%" height="15" fill="rgb(228,202,34)" fg:x="7231" fg:w="242"/><text x="82.3645%" y="575.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (242 samples, 2.75%)</title><rect x="82.1145%" y="549" width="2.7481%" height="15" fill="rgb(254,200,22)" fg:x="7231" fg:w="242"/><text x="82.3645%" y="559.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (241 samples, 2.74%)</title><rect x="82.1258%" y="533" width="2.7368%" height="15" fill="rgb(219,10,39)" fg:x="7232" fg:w="241"/><text x="82.3758%" y="543.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (241 samples, 2.74%)</title><rect x="82.1258%" y="517" width="2.7368%" height="15" fill="rgb(226,210,39)" fg:x="7232" fg:w="241"/><text x="82.3758%" y="527.50">al..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="84.8512%" y="501" width="0.0114%" height="15" fill="rgb(208,219,16)" fg:x="7472" fg:w="1"/><text x="85.1012%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="84.8512%" y="485" width="0.0114%" height="15" fill="rgb(216,158,51)" fg:x="7472" fg:w="1"/><text x="85.1012%" y="495.50"></text></g><g><title>std::path::Path::_join (247 samples, 2.80%)</title><rect x="82.0690%" y="693" width="2.8049%" height="15" fill="rgb(233,14,44)" fg:x="7227" fg:w="247"/><text x="82.3190%" y="703.50">st..</text></g><g><title>std::path::PathBuf::push (243 samples, 2.76%)</title><rect x="82.1145%" y="677" width="2.7595%" height="15" fill="rgb(237,97,39)" fg:x="7231" fg:w="243"/><text x="82.3645%" y="687.50">st..</text></g><g><title>std::path::PathBuf::_push (243 samples, 2.76%)</title><rect x="82.1145%" y="661" width="2.7595%" height="15" fill="rgb(218,198,43)" fg:x="7231" fg:w="243"/><text x="82.3645%" y="671.50">st..</text></g><g><title>std::ffi::os_str::OsString::push (243 samples, 2.76%)</title><rect x="82.1145%" y="645" width="2.7595%" height="15" fill="rgb(231,104,20)" fg:x="7231" fg:w="243"/><text x="82.3645%" y="655.50">st..</text></g><g><title>std::sys::unix::os_str::Buf::push_slice (243 samples, 2.76%)</title><rect x="82.1145%" y="629" width="2.7595%" height="15" fill="rgb(254,36,13)" fg:x="7231" fg:w="243"/><text x="82.3645%" y="639.50">st..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (243 samples, 2.76%)</title><rect x="82.1145%" y="613" width="2.7595%" height="15" fill="rgb(248,14,50)" fg:x="7231" fg:w="243"/><text x="82.3645%" y="623.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (243 samples, 2.76%)</title><rect x="82.1145%" y="597" width="2.7595%" height="15" fill="rgb(217,107,29)" fg:x="7231" fg:w="243"/><text x="82.3645%" y="607.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (243 samples, 2.76%)</title><rect x="82.1145%" y="581" width="2.7595%" height="15" fill="rgb(251,169,33)" fg:x="7231" fg:w="243"/><text x="82.3645%" y="591.50">al..</text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="84.8626%" y="565" width="0.0114%" height="15" fill="rgb(217,108,32)" fg:x="7473" fg:w="1"/><text x="85.1126%" y="575.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (7 samples, 0.08%)</title><rect x="84.8739%" y="693" width="0.0795%" height="15" fill="rgb(219,66,42)" fg:x="7474" fg:w="7"/><text x="85.1239%" y="703.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (5 samples, 0.06%)</title><rect x="84.9534%" y="693" width="0.0568%" height="15" fill="rgb(206,180,7)" fg:x="7481" fg:w="5"/><text x="85.2034%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.9989%" y="677" width="0.0114%" height="15" fill="rgb(208,226,31)" fg:x="7485" fg:w="1"/><text x="85.2489%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.9989%" y="661" width="0.0114%" height="15" fill="rgb(218,26,49)" fg:x="7485" fg:w="1"/><text x="85.2489%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.9989%" y="645" width="0.0114%" height="15" fill="rgb(233,197,48)" fg:x="7485" fg:w="1"/><text x="85.2489%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.9989%" y="629" width="0.0114%" height="15" fill="rgb(252,181,51)" fg:x="7485" fg:w="1"/><text x="85.2489%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.9989%" y="613" width="0.0114%" height="15" fill="rgb(253,90,19)" fg:x="7485" fg:w="1"/><text x="85.2489%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.9989%" y="597" width="0.0114%" height="15" fill="rgb(215,171,30)" fg:x="7485" fg:w="1"/><text x="85.2489%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.9989%" y="581" width="0.0114%" height="15" fill="rgb(214,222,9)" fg:x="7485" fg:w="1"/><text x="85.2489%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.9989%" y="565" width="0.0114%" height="15" fill="rgb(223,3,22)" fg:x="7485" fg:w="1"/><text x="85.2489%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.9989%" y="549" width="0.0114%" height="15" fill="rgb(225,196,46)" fg:x="7485" fg:w="1"/><text x="85.2489%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.9989%" y="533" width="0.0114%" height="15" fill="rgb(209,110,37)" fg:x="7485" fg:w="1"/><text x="85.2489%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.9989%" y="517" width="0.0114%" height="15" fill="rgb(249,89,12)" fg:x="7485" fg:w="1"/><text x="85.2489%" y="527.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (4 samples, 0.05%)</title><rect x="85.0329%" y="677" width="0.0454%" height="15" fill="rgb(226,27,33)" fg:x="7488" fg:w="4"/><text x="85.2829%" y="687.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="85.0784%" y="677" width="0.0227%" height="15" fill="rgb(213,82,22)" fg:x="7492" fg:w="2"/><text x="85.3284%" y="687.50"></text></g><g><title>tokio::sync::mutex::Mutex&lt;T&gt;::lock::{{closure}} (9 samples, 0.10%)</title><rect x="85.0102%" y="693" width="0.1022%" height="15" fill="rgb(248,140,0)" fg:x="7486" fg:w="9"/><text x="85.2602%" y="703.50"></text></g><g><title>tokio::trace::async_trace_leaf (1 samples, 0.01%)</title><rect x="85.1011%" y="677" width="0.0114%" height="15" fill="rgb(228,106,3)" fg:x="7494" fg:w="1"/><text x="85.3511%" y="687.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (20 samples, 0.23%)</title><rect x="85.1351%" y="661" width="0.2271%" height="15" fill="rgb(209,23,37)" fg:x="7497" fg:w="20"/><text x="85.3851%" y="671.50"></text></g><g><title>std::sys::unix::fs::File::seek (20 samples, 0.23%)</title><rect x="85.1351%" y="645" width="0.2271%" height="15" fill="rgb(241,93,50)" fg:x="7497" fg:w="20"/><text x="85.3851%" y="655.50"></text></g><g><title>__lseek64 (20 samples, 0.23%)</title><rect x="85.1351%" y="629" width="0.2271%" height="15" fill="rgb(253,46,43)" fg:x="7497" fg:w="20"/><text x="85.3851%" y="639.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="85.1806%" y="613" width="0.1817%" height="15" fill="rgb(226,206,43)" fg:x="7501" fg:w="16"/><text x="85.4306%" y="623.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="85.1806%" y="597" width="0.1817%" height="15" fill="rgb(217,54,7)" fg:x="7501" fg:w="16"/><text x="85.4306%" y="607.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="85.1806%" y="581" width="0.1817%" height="15" fill="rgb(223,5,52)" fg:x="7501" fg:w="16"/><text x="85.4306%" y="591.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="85.2373%" y="565" width="0.1249%" height="15" fill="rgb(206,52,46)" fg:x="7506" fg:w="11"/><text x="85.4873%" y="575.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="85.2487%" y="549" width="0.1136%" height="15" fill="rgb(253,136,11)" fg:x="7507" fg:w="10"/><text x="85.4987%" y="559.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="85.2600%" y="533" width="0.1022%" height="15" fill="rgb(208,106,33)" fg:x="7508" fg:w="9"/><text x="85.5100%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="85.2941%" y="517" width="0.0681%" height="15" fill="rgb(206,54,4)" fg:x="7511" fg:w="6"/><text x="85.5441%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="85.3395%" y="501" width="0.0227%" height="15" fill="rgb(213,3,15)" fg:x="7515" fg:w="2"/><text x="85.5895%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.3509%" y="485" width="0.0114%" height="15" fill="rgb(252,211,39)" fg:x="7516" fg:w="1"/><text x="85.6009%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.3509%" y="469" width="0.0114%" height="15" fill="rgb(223,6,36)" fg:x="7516" fg:w="1"/><text x="85.6009%" y="479.50"></text></g><g><title>__memset_avx2_erms (1 samples, 0.01%)</title><rect x="85.5099%" y="629" width="0.0114%" height="15" fill="rgb(252,169,45)" fg:x="7530" fg:w="1"/><text x="85.7599%" y="639.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="85.5212%" y="629" width="0.0114%" height="15" fill="rgb(212,48,26)" fg:x="7531" fg:w="1"/><text x="85.7712%" y="639.50"></text></g><g><title>__calloc (17 samples, 0.19%)</title><rect x="85.4077%" y="645" width="0.1931%" height="15" fill="rgb(251,102,48)" fg:x="7521" fg:w="17"/><text x="85.6577%" y="655.50"></text></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="85.5326%" y="629" width="0.0681%" height="15" fill="rgb(243,208,16)" fg:x="7532" fg:w="6"/><text x="85.7826%" y="639.50"></text></g><g><title>unlink_chunk.isra.0 (2 samples, 0.02%)</title><rect x="85.5780%" y="613" width="0.0227%" height="15" fill="rgb(219,96,24)" fg:x="7536" fg:w="2"/><text x="85.8280%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="85.6007%" y="645" width="0.0227%" height="15" fill="rgb(219,33,29)" fg:x="7538" fg:w="2"/><text x="85.8507%" y="655.50"></text></g><g><title>__rdl_alloc_zeroed (1 samples, 0.01%)</title><rect x="85.6234%" y="645" width="0.0114%" height="15" fill="rgb(223,176,5)" fg:x="7540" fg:w="1"/><text x="85.8734%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (1 samples, 0.01%)</title><rect x="85.6234%" y="629" width="0.0114%" height="15" fill="rgb(228,140,14)" fg:x="7540" fg:w="1"/><text x="85.8734%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="85.6348%" y="645" width="0.0114%" height="15" fill="rgb(217,179,31)" fg:x="7541" fg:w="1"/><text x="85.8848%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="85.6462%" y="645" width="0.0227%" height="15" fill="rgb(230,9,30)" fg:x="7542" fg:w="2"/><text x="85.8962%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="85.6575%" y="629" width="0.0114%" height="15" fill="rgb(230,136,20)" fg:x="7543" fg:w="1"/><text x="85.9075%" y="639.50"></text></g><g><title>[unknown] (44 samples, 0.50%)</title><rect x="85.7370%" y="549" width="0.4997%" height="15" fill="rgb(215,210,22)" fg:x="7550" fg:w="44"/><text x="85.9870%" y="559.50"></text></g><g><title>[unknown] (44 samples, 0.50%)</title><rect x="85.7370%" y="533" width="0.4997%" height="15" fill="rgb(218,43,5)" fg:x="7550" fg:w="44"/><text x="85.9870%" y="543.50"></text></g><g><title>[unknown] (44 samples, 0.50%)</title><rect x="85.7370%" y="517" width="0.4997%" height="15" fill="rgb(216,11,5)" fg:x="7550" fg:w="44"/><text x="85.9870%" y="527.50"></text></g><g><title>[unknown] (42 samples, 0.48%)</title><rect x="85.7597%" y="501" width="0.4769%" height="15" fill="rgb(209,82,29)" fg:x="7552" fg:w="42"/><text x="86.0097%" y="511.50"></text></g><g><title>[unknown] (42 samples, 0.48%)</title><rect x="85.7597%" y="485" width="0.4769%" height="15" fill="rgb(244,115,12)" fg:x="7552" fg:w="42"/><text x="86.0097%" y="495.50"></text></g><g><title>[unknown] (41 samples, 0.47%)</title><rect x="85.7711%" y="469" width="0.4656%" height="15" fill="rgb(222,82,18)" fg:x="7553" fg:w="41"/><text x="86.0211%" y="479.50"></text></g><g><title>[unknown] (39 samples, 0.44%)</title><rect x="85.7938%" y="453" width="0.4429%" height="15" fill="rgb(249,227,8)" fg:x="7555" fg:w="39"/><text x="86.0438%" y="463.50"></text></g><g><title>[unknown] (38 samples, 0.43%)</title><rect x="85.8051%" y="437" width="0.4315%" height="15" fill="rgb(253,141,45)" fg:x="7556" fg:w="38"/><text x="86.0551%" y="447.50"></text></g><g><title>[unknown] (35 samples, 0.40%)</title><rect x="85.8392%" y="421" width="0.3975%" height="15" fill="rgb(234,184,4)" fg:x="7559" fg:w="35"/><text x="86.0892%" y="431.50"></text></g><g><title>[unknown] (34 samples, 0.39%)</title><rect x="85.8506%" y="405" width="0.3861%" height="15" fill="rgb(218,194,23)" fg:x="7560" fg:w="34"/><text x="86.1006%" y="415.50"></text></g><g><title>[unknown] (18 samples, 0.20%)</title><rect x="86.0323%" y="389" width="0.2044%" height="15" fill="rgb(235,66,41)" fg:x="7576" fg:w="18"/><text x="86.2823%" y="399.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="86.1458%" y="373" width="0.0908%" height="15" fill="rgb(245,217,1)" fg:x="7586" fg:w="8"/><text x="86.3958%" y="383.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.01%)</title><rect x="86.2367%" y="549" width="0.0114%" height="15" fill="rgb(229,91,1)" fg:x="7594" fg:w="1"/><text x="86.4867%" y="559.50"></text></g><g><title>yadb::storage::LSMCache::get_block::{{closure}} (101 samples, 1.15%)</title><rect x="85.1124%" y="693" width="1.1469%" height="15" fill="rgb(207,101,30)" fg:x="7495" fg:w="101"/><text x="85.3624%" y="703.50"></text></g><g><title>yadb::storage::table::Table::get_datablock (99 samples, 1.12%)</title><rect x="85.1351%" y="677" width="1.1242%" height="15" fill="rgb(223,82,49)" fg:x="7497" fg:w="99"/><text x="85.3851%" y="687.50"></text></g><g><title>yadb::storage::table::DataBlock::deserialize (79 samples, 0.90%)</title><rect x="85.3623%" y="661" width="0.8971%" height="15" fill="rgb(218,167,17)" fg:x="7517" fg:w="79"/><text x="85.6123%" y="671.50"></text></g><g><title>std::io::default_read_exact (52 samples, 0.59%)</title><rect x="85.6689%" y="645" width="0.5905%" height="15" fill="rgb(208,103,14)" fg:x="7544" fg:w="52"/><text x="85.9189%" y="655.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (51 samples, 0.58%)</title><rect x="85.6802%" y="629" width="0.5792%" height="15" fill="rgb(238,20,8)" fg:x="7545" fg:w="51"/><text x="85.9302%" y="639.50"></text></g><g><title>std::sys::unix::fs::File::read (51 samples, 0.58%)</title><rect x="85.6802%" y="613" width="0.5792%" height="15" fill="rgb(218,80,54)" fg:x="7545" fg:w="51"/><text x="85.9302%" y="623.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (51 samples, 0.58%)</title><rect x="85.6802%" y="597" width="0.5792%" height="15" fill="rgb(240,144,17)" fg:x="7545" fg:w="51"/><text x="85.9302%" y="607.50"></text></g><g><title>__libc_read (51 samples, 0.58%)</title><rect x="85.6802%" y="581" width="0.5792%" height="15" fill="rgb(245,27,50)" fg:x="7545" fg:w="51"/><text x="85.9302%" y="591.50"></text></g><g><title>__libc_read (51 samples, 0.58%)</title><rect x="85.6802%" y="565" width="0.5792%" height="15" fill="rgb(251,51,7)" fg:x="7545" fg:w="51"/><text x="85.9302%" y="575.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.01%)</title><rect x="86.2480%" y="549" width="0.0114%" height="15" fill="rgb(245,217,29)" fg:x="7595" fg:w="1"/><text x="86.4980%" y="559.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (1 samples, 0.01%)</title><rect x="86.2594%" y="661" width="0.0114%" height="15" fill="rgb(221,176,29)" fg:x="7596" fg:w="1"/><text x="86.5094%" y="671.50"></text></g><g><title>std::sys::unix::fs::File::seek (1 samples, 0.01%)</title><rect x="86.2594%" y="645" width="0.0114%" height="15" fill="rgb(212,180,24)" fg:x="7596" fg:w="1"/><text x="86.5094%" y="655.50"></text></g><g><title>__lseek64 (1 samples, 0.01%)</title><rect x="86.2594%" y="629" width="0.0114%" height="15" fill="rgb(254,24,2)" fg:x="7596" fg:w="1"/><text x="86.5094%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.07%)</title><rect x="86.2707%" y="661" width="0.0681%" height="15" fill="rgb(230,100,2)" fg:x="7597" fg:w="6"/><text x="86.5207%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.07%)</title><rect x="86.2707%" y="645" width="0.0681%" height="15" fill="rgb(219,142,25)" fg:x="7597" fg:w="6"/><text x="86.5207%" y="655.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.07%)</title><rect x="86.2707%" y="629" width="0.0681%" height="15" fill="rgb(240,73,43)" fg:x="7597" fg:w="6"/><text x="86.5207%" y="639.50"></text></g><g><title>_int_realloc (6 samples, 0.07%)</title><rect x="86.2707%" y="613" width="0.0681%" height="15" fill="rgb(214,114,15)" fg:x="7597" fg:w="6"/><text x="86.5207%" y="623.50"></text></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="86.2707%" y="597" width="0.0681%" height="15" fill="rgb(207,130,4)" fg:x="7597" fg:w="6"/><text x="86.5207%" y="607.50"></text></g><g><title>malloc_consolidate (4 samples, 0.05%)</title><rect x="86.2934%" y="581" width="0.0454%" height="15" fill="rgb(221,25,40)" fg:x="7599" fg:w="4"/><text x="86.5434%" y="591.50"></text></g><g><title>unlink_chunk.isra.0 (2 samples, 0.02%)</title><rect x="86.3161%" y="565" width="0.0227%" height="15" fill="rgb(241,184,7)" fg:x="7601" fg:w="2"/><text x="86.5661%" y="575.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="86.4184%" y="565" width="0.2498%" height="15" fill="rgb(235,159,4)" fg:x="7610" fg:w="22"/><text x="86.6684%" y="575.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="86.4184%" y="549" width="0.2498%" height="15" fill="rgb(214,87,48)" fg:x="7610" fg:w="22"/><text x="86.6684%" y="559.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="86.4184%" y="533" width="0.2498%" height="15" fill="rgb(246,198,24)" fg:x="7610" fg:w="22"/><text x="86.6684%" y="543.50"></text></g><g><title>[unknown] (17 samples, 0.19%)</title><rect x="86.4751%" y="517" width="0.1931%" height="15" fill="rgb(209,66,40)" fg:x="7615" fg:w="17"/><text x="86.7251%" y="527.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="86.4865%" y="501" width="0.1817%" height="15" fill="rgb(233,147,39)" fg:x="7616" fg:w="16"/><text x="86.7365%" y="511.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="86.5433%" y="485" width="0.1249%" height="15" fill="rgb(231,145,52)" fg:x="7621" fg:w="11"/><text x="86.7933%" y="495.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="86.5546%" y="469" width="0.1136%" height="15" fill="rgb(206,20,26)" fg:x="7622" fg:w="10"/><text x="86.8046%" y="479.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="86.5887%" y="453" width="0.0795%" height="15" fill="rgb(238,220,4)" fg:x="7625" fg:w="7"/><text x="86.8387%" y="463.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="86.5887%" y="437" width="0.0795%" height="15" fill="rgb(252,195,42)" fg:x="7625" fg:w="7"/><text x="86.8387%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="86.6000%" y="421" width="0.0681%" height="15" fill="rgb(209,10,6)" fg:x="7626" fg:w="6"/><text x="86.8500%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="86.6455%" y="405" width="0.0227%" height="15" fill="rgb(229,3,52)" fg:x="7630" fg:w="2"/><text x="86.8955%" y="415.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (30 samples, 0.34%)</title><rect x="86.3389%" y="645" width="0.3407%" height="15" fill="rgb(253,49,37)" fg:x="7603" fg:w="30"/><text x="86.5889%" y="655.50"></text></g><g><title>std::sys::unix::fs::File::read (30 samples, 0.34%)</title><rect x="86.3389%" y="629" width="0.3407%" height="15" fill="rgb(240,103,49)" fg:x="7603" fg:w="30"/><text x="86.5889%" y="639.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (30 samples, 0.34%)</title><rect x="86.3389%" y="613" width="0.3407%" height="15" fill="rgb(250,182,30)" fg:x="7603" fg:w="30"/><text x="86.5889%" y="623.50"></text></g><g><title>__libc_read (30 samples, 0.34%)</title><rect x="86.3389%" y="597" width="0.3407%" height="15" fill="rgb(248,8,30)" fg:x="7603" fg:w="30"/><text x="86.5889%" y="607.50"></text></g><g><title>__libc_read (30 samples, 0.34%)</title><rect x="86.3389%" y="581" width="0.3407%" height="15" fill="rgb(237,120,30)" fg:x="7603" fg:w="30"/><text x="86.5889%" y="591.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.01%)</title><rect x="86.6682%" y="565" width="0.0114%" height="15" fill="rgb(221,146,34)" fg:x="7632" fg:w="1"/><text x="86.9182%" y="575.50"></text></g><g><title>yadb::storage::LSMCache::get_index::{{closure}} (38 samples, 0.43%)</title><rect x="86.2594%" y="693" width="0.4315%" height="15" fill="rgb(242,55,13)" fg:x="7596" fg:w="38"/><text x="86.5094%" y="703.50"></text></g><g><title>yadb::storage::table::Table::get_index (38 samples, 0.43%)</title><rect x="86.2594%" y="677" width="0.4315%" height="15" fill="rgb(242,112,31)" fg:x="7596" fg:w="38"/><text x="86.5094%" y="687.50"></text></g><g><title>std::io::default_read_exact (31 samples, 0.35%)</title><rect x="86.3389%" y="661" width="0.3520%" height="15" fill="rgb(249,192,27)" fg:x="7603" fg:w="31"/><text x="86.5889%" y="671.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.01%)</title><rect x="86.6795%" y="645" width="0.0114%" height="15" fill="rgb(208,204,44)" fg:x="7633" fg:w="1"/><text x="86.9295%" y="655.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 0.01%)</title><rect x="86.6795%" y="629" width="0.0114%" height="15" fill="rgb(208,93,54)" fg:x="7633" fg:w="1"/><text x="86.9295%" y="639.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 0.01%)</title><rect x="86.6795%" y="613" width="0.0114%" height="15" fill="rgb(242,1,31)" fg:x="7633" fg:w="1"/><text x="86.9295%" y="623.50"></text></g><g><title>__libc_read (1 samples, 0.01%)</title><rect x="86.6795%" y="597" width="0.0114%" height="15" fill="rgb(241,83,25)" fg:x="7633" fg:w="1"/><text x="86.9295%" y="607.50"></text></g><g><title>__libc_read (1 samples, 0.01%)</title><rect x="86.6795%" y="581" width="0.0114%" height="15" fill="rgb(205,169,50)" fg:x="7633" fg:w="1"/><text x="86.9295%" y="591.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.01%)</title><rect x="86.6795%" y="565" width="0.0114%" height="15" fill="rgb(239,186,37)" fg:x="7633" fg:w="1"/><text x="86.9295%" y="575.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (95 samples, 1.08%)</title><rect x="86.7363%" y="677" width="1.0788%" height="15" fill="rgb(205,221,10)" fg:x="7638" fg:w="95"/><text x="86.9863%" y="687.50"></text></g><g><title>std::sys::unix::fs::File::seek (95 samples, 1.08%)</title><rect x="86.7363%" y="661" width="1.0788%" height="15" fill="rgb(218,196,15)" fg:x="7638" fg:w="95"/><text x="86.9863%" y="671.50"></text></g><g><title>__lseek64 (92 samples, 1.04%)</title><rect x="86.7704%" y="645" width="1.0447%" height="15" fill="rgb(218,196,35)" fg:x="7641" fg:w="92"/><text x="87.0204%" y="655.50"></text></g><g><title>[unknown] (44 samples, 0.50%)</title><rect x="87.3155%" y="629" width="0.4997%" height="15" fill="rgb(233,63,24)" fg:x="7689" fg:w="44"/><text x="87.5655%" y="639.50"></text></g><g><title>[unknown] (44 samples, 0.50%)</title><rect x="87.3155%" y="613" width="0.4997%" height="15" fill="rgb(225,8,4)" fg:x="7689" fg:w="44"/><text x="87.5655%" y="623.50"></text></g><g><title>[unknown] (39 samples, 0.44%)</title><rect x="87.3722%" y="597" width="0.4429%" height="15" fill="rgb(234,105,35)" fg:x="7694" fg:w="39"/><text x="87.6222%" y="607.50"></text></g><g><title>[unknown] (28 samples, 0.32%)</title><rect x="87.4972%" y="581" width="0.3180%" height="15" fill="rgb(236,21,32)" fg:x="7705" fg:w="28"/><text x="87.7472%" y="591.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="87.5312%" y="565" width="0.2839%" height="15" fill="rgb(228,109,6)" fg:x="7708" fg:w="25"/><text x="87.7812%" y="575.50"></text></g><g><title>[unknown] (14 samples, 0.16%)</title><rect x="87.6561%" y="549" width="0.1590%" height="15" fill="rgb(229,215,31)" fg:x="7719" fg:w="14"/><text x="87.9061%" y="559.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="87.7129%" y="533" width="0.1022%" height="15" fill="rgb(221,52,54)" fg:x="7724" fg:w="9"/><text x="87.9629%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="87.7924%" y="517" width="0.0227%" height="15" fill="rgb(252,129,43)" fg:x="7731" fg:w="2"/><text x="88.0424%" y="527.50"></text></g><g><title>__GI___libc_free (3 samples, 0.03%)</title><rect x="87.8151%" y="677" width="0.0341%" height="15" fill="rgb(248,183,27)" fg:x="7733" fg:w="3"/><text x="88.0651%" y="687.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="87.8492%" y="677" width="0.0114%" height="15" fill="rgb(250,0,22)" fg:x="7736" fg:w="1"/><text x="88.0992%" y="687.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="87.8605%" y="677" width="0.0227%" height="15" fill="rgb(213,166,10)" fg:x="7737" fg:w="2"/><text x="88.1105%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.02%)</title><rect x="87.8946%" y="661" width="0.0227%" height="15" fill="rgb(207,163,36)" fg:x="7740" fg:w="2"/><text x="88.1446%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="645" width="0.0114%" height="15" fill="rgb(208,122,22)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="629" width="0.0114%" height="15" fill="rgb(207,104,49)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="613" width="0.0114%" height="15" fill="rgb(248,211,50)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="597" width="0.0114%" height="15" fill="rgb(217,13,45)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="581" width="0.0114%" height="15" fill="rgb(211,216,49)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="565" width="0.0114%" height="15" fill="rgb(221,58,53)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="549" width="0.0114%" height="15" fill="rgb(220,112,41)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="533" width="0.0114%" height="15" fill="rgb(236,38,28)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="517" width="0.0114%" height="15" fill="rgb(227,195,22)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="501" width="0.0114%" height="15" fill="rgb(214,55,33)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="485" width="0.0114%" height="15" fill="rgb(248,80,13)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="469" width="0.0114%" height="15" fill="rgb(238,52,6)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="453" width="0.0114%" height="15" fill="rgb(224,198,47)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="437" width="0.0114%" height="15" fill="rgb(233,171,20)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="421" width="0.0114%" height="15" fill="rgb(241,30,25)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="405" width="0.0114%" height="15" fill="rgb(207,171,38)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="389" width="0.0114%" height="15" fill="rgb(234,70,1)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="373" width="0.0114%" height="15" fill="rgb(232,178,18)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.9060%" y="357" width="0.0114%" height="15" fill="rgb(241,78,40)" fg:x="7741" fg:w="1"/><text x="88.1560%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::align_offset (1 samples, 0.01%)</title><rect x="87.9400%" y="565" width="0.0114%" height="15" fill="rgb(222,35,25)" fg:x="7744" fg:w="1"/><text x="88.1900%" y="575.50"></text></g><g><title>core::ptr::align_offset (1 samples, 0.01%)</title><rect x="87.9400%" y="549" width="0.0114%" height="15" fill="rgb(207,92,16)" fg:x="7744" fg:w="1"/><text x="88.1900%" y="559.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (4 samples, 0.05%)</title><rect x="87.9173%" y="613" width="0.0454%" height="15" fill="rgb(216,59,51)" fg:x="7742" fg:w="4"/><text x="88.1673%" y="623.50"></text></g><g><title>core::slice::memchr::memchr (2 samples, 0.02%)</title><rect x="87.9400%" y="597" width="0.0227%" height="15" fill="rgb(213,80,28)" fg:x="7744" fg:w="2"/><text x="88.1900%" y="607.50"></text></g><g><title>core::slice::memchr::memchr_aligned (2 samples, 0.02%)</title><rect x="87.9400%" y="581" width="0.0227%" height="15" fill="rgb(220,93,7)" fg:x="7744" fg:w="2"/><text x="88.1900%" y="591.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.01%)</title><rect x="87.9514%" y="565" width="0.0114%" height="15" fill="rgb(225,24,44)" fg:x="7745" fg:w="1"/><text x="88.2014%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="87.9628%" y="613" width="0.0227%" height="15" fill="rgb(243,74,40)" fg:x="7746" fg:w="2"/><text x="88.2128%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="87.9628%" y="597" width="0.0227%" height="15" fill="rgb(228,39,7)" fg:x="7746" fg:w="2"/><text x="88.2128%" y="607.50"></text></g><g><title>[unknown] (237 samples, 2.69%)</title><rect x="88.3489%" y="533" width="2.6913%" height="15" fill="rgb(227,79,8)" fg:x="7780" fg:w="237"/><text x="88.5989%" y="543.50">[u..</text></g><g><title>[unknown] (237 samples, 2.69%)</title><rect x="88.3489%" y="517" width="2.6913%" height="15" fill="rgb(236,58,11)" fg:x="7780" fg:w="237"/><text x="88.5989%" y="527.50">[u..</text></g><g><title>[unknown] (235 samples, 2.67%)</title><rect x="88.3716%" y="501" width="2.6686%" height="15" fill="rgb(249,63,35)" fg:x="7782" fg:w="235"/><text x="88.6216%" y="511.50">[u..</text></g><g><title>[unknown] (221 samples, 2.51%)</title><rect x="88.5305%" y="485" width="2.5097%" height="15" fill="rgb(252,114,16)" fg:x="7796" fg:w="221"/><text x="88.7805%" y="495.50">[u..</text></g><g><title>[unknown] (212 samples, 2.41%)</title><rect x="88.6328%" y="469" width="2.4074%" height="15" fill="rgb(254,151,24)" fg:x="7805" fg:w="212"/><text x="88.8828%" y="479.50">[u..</text></g><g><title>[unknown] (210 samples, 2.38%)</title><rect x="88.6555%" y="453" width="2.3847%" height="15" fill="rgb(253,54,39)" fg:x="7807" fg:w="210"/><text x="88.9055%" y="463.50">[u..</text></g><g><title>[unknown] (196 samples, 2.23%)</title><rect x="88.8144%" y="437" width="2.2258%" height="15" fill="rgb(243,25,45)" fg:x="7821" fg:w="196"/><text x="89.0644%" y="447.50">[..</text></g><g><title>[unknown] (165 samples, 1.87%)</title><rect x="89.1665%" y="421" width="1.8737%" height="15" fill="rgb(234,134,9)" fg:x="7852" fg:w="165"/><text x="89.4165%" y="431.50">[..</text></g><g><title>[unknown] (125 samples, 1.42%)</title><rect x="89.6207%" y="405" width="1.4195%" height="15" fill="rgb(227,166,31)" fg:x="7892" fg:w="125"/><text x="89.8707%" y="415.50"></text></g><g><title>[unknown] (92 samples, 1.04%)</title><rect x="89.9955%" y="389" width="1.0447%" height="15" fill="rgb(245,143,41)" fg:x="7925" fg:w="92"/><text x="90.2455%" y="399.50"></text></g><g><title>[unknown] (40 samples, 0.45%)</title><rect x="90.5860%" y="373" width="0.4542%" height="15" fill="rgb(238,181,32)" fg:x="7977" fg:w="40"/><text x="90.8360%" y="383.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="90.8017%" y="357" width="0.2385%" height="15" fill="rgb(224,113,18)" fg:x="7996" fg:w="21"/><text x="91.0517%" y="367.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="90.9380%" y="341" width="0.1022%" height="15" fill="rgb(240,229,28)" fg:x="8008" fg:w="9"/><text x="91.1880%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="90.9834%" y="325" width="0.0568%" height="15" fill="rgb(250,185,3)" fg:x="8012" fg:w="5"/><text x="91.2334%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.0288%" y="309" width="0.0114%" height="15" fill="rgb(212,59,25)" fg:x="8016" fg:w="1"/><text x="91.2788%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.0288%" y="293" width="0.0114%" height="15" fill="rgb(221,87,20)" fg:x="8016" fg:w="1"/><text x="91.2788%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.0288%" y="277" width="0.0114%" height="15" fill="rgb(213,74,28)" fg:x="8016" fg:w="1"/><text x="91.2788%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.0288%" y="261" width="0.0114%" height="15" fill="rgb(224,132,34)" fg:x="8016" fg:w="1"/><text x="91.2788%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.0288%" y="245" width="0.0114%" height="15" fill="rgb(222,101,24)" fg:x="8016" fg:w="1"/><text x="91.2788%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.0288%" y="229" width="0.0114%" height="15" fill="rgb(254,142,4)" fg:x="8016" fg:w="1"/><text x="91.2788%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.0288%" y="213" width="0.0114%" height="15" fill="rgb(230,229,49)" fg:x="8016" fg:w="1"/><text x="91.2788%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.0288%" y="197" width="0.0114%" height="15" fill="rgb(238,70,47)" fg:x="8016" fg:w="1"/><text x="91.2788%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.0288%" y="181" width="0.0114%" height="15" fill="rgb(231,160,17)" fg:x="8016" fg:w="1"/><text x="91.2788%" y="191.50"></text></g><g><title>std::fs::OpenOptions::_open (279 samples, 3.17%)</title><rect x="87.8833%" y="677" width="3.1683%" height="15" fill="rgb(218,68,53)" fg:x="7739" fg:w="279"/><text x="88.1333%" y="687.50">std..</text></g><g><title>std::sys::unix::fs::File::open (276 samples, 3.13%)</title><rect x="87.9173%" y="661" width="3.1342%" height="15" fill="rgb(236,111,10)" fg:x="7742" fg:w="276"/><text x="88.1673%" y="671.50">std..</text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (276 samples, 3.13%)</title><rect x="87.9173%" y="645" width="3.1342%" height="15" fill="rgb(224,34,41)" fg:x="7742" fg:w="276"/><text x="88.1673%" y="655.50">std..</text></g><g><title>std::sys::common::small_c_string::run_with_cstr (276 samples, 3.13%)</title><rect x="87.9173%" y="629" width="3.1342%" height="15" fill="rgb(241,118,19)" fg:x="7742" fg:w="276"/><text x="88.1673%" y="639.50">std..</text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (270 samples, 3.07%)</title><rect x="87.9855%" y="613" width="3.0661%" height="15" fill="rgb(238,129,25)" fg:x="7748" fg:w="270"/><text x="88.2355%" y="623.50">std..</text></g><g><title>std::sys::unix::fs::File::open_c (270 samples, 3.07%)</title><rect x="87.9855%" y="597" width="3.0661%" height="15" fill="rgb(238,22,31)" fg:x="7748" fg:w="270"/><text x="88.2355%" y="607.50">std..</text></g><g><title>std::sys::unix::cvt_r (268 samples, 3.04%)</title><rect x="88.0082%" y="581" width="3.0434%" height="15" fill="rgb(222,174,48)" fg:x="7750" fg:w="268"/><text x="88.2582%" y="591.50">std..</text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (268 samples, 3.04%)</title><rect x="88.0082%" y="565" width="3.0434%" height="15" fill="rgb(206,152,40)" fg:x="7750" fg:w="268"/><text x="88.2582%" y="575.50">std..</text></g><g><title>__libc_open64 (268 samples, 3.04%)</title><rect x="88.0082%" y="549" width="3.0434%" height="15" fill="rgb(218,99,54)" fg:x="7750" fg:w="268"/><text x="88.2582%" y="559.50">__l..</text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.01%)</title><rect x="91.0402%" y="533" width="0.0114%" height="15" fill="rgb(220,174,26)" fg:x="8017" fg:w="1"/><text x="91.2902%" y="543.50"></text></g><g><title>[unknown] (61 samples, 0.69%)</title><rect x="91.3355%" y="581" width="0.6927%" height="15" fill="rgb(245,116,9)" fg:x="8043" fg:w="61"/><text x="91.5855%" y="591.50"></text></g><g><title>[unknown] (61 samples, 0.69%)</title><rect x="91.3355%" y="565" width="0.6927%" height="15" fill="rgb(209,72,35)" fg:x="8043" fg:w="61"/><text x="91.5855%" y="575.50"></text></g><g><title>[unknown] (57 samples, 0.65%)</title><rect x="91.3809%" y="549" width="0.6473%" height="15" fill="rgb(226,126,21)" fg:x="8047" fg:w="57"/><text x="91.6309%" y="559.50"></text></g><g><title>[unknown] (50 samples, 0.57%)</title><rect x="91.4604%" y="533" width="0.5678%" height="15" fill="rgb(227,192,1)" fg:x="8054" fg:w="50"/><text x="91.7104%" y="543.50"></text></g><g><title>[unknown] (46 samples, 0.52%)</title><rect x="91.5058%" y="517" width="0.5224%" height="15" fill="rgb(237,180,29)" fg:x="8058" fg:w="46"/><text x="91.7558%" y="527.50"></text></g><g><title>[unknown] (42 samples, 0.48%)</title><rect x="91.5512%" y="501" width="0.4769%" height="15" fill="rgb(230,197,35)" fg:x="8062" fg:w="42"/><text x="91.8012%" y="511.50"></text></g><g><title>[unknown] (35 samples, 0.40%)</title><rect x="91.6307%" y="485" width="0.3975%" height="15" fill="rgb(246,193,31)" fg:x="8069" fg:w="35"/><text x="91.8807%" y="495.50"></text></g><g><title>[unknown] (30 samples, 0.34%)</title><rect x="91.6875%" y="469" width="0.3407%" height="15" fill="rgb(241,36,4)" fg:x="8074" fg:w="30"/><text x="91.9375%" y="479.50"></text></g><g><title>[unknown] (27 samples, 0.31%)</title><rect x="91.7216%" y="453" width="0.3066%" height="15" fill="rgb(241,130,17)" fg:x="8077" fg:w="27"/><text x="91.9716%" y="463.50"></text></g><g><title>[unknown] (23 samples, 0.26%)</title><rect x="91.7670%" y="437" width="0.2612%" height="15" fill="rgb(206,137,32)" fg:x="8081" fg:w="23"/><text x="92.0170%" y="447.50"></text></g><g><title>[unknown] (15 samples, 0.17%)</title><rect x="91.8578%" y="421" width="0.1703%" height="15" fill="rgb(237,228,51)" fg:x="8089" fg:w="15"/><text x="92.1078%" y="431.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="91.8805%" y="405" width="0.1476%" height="15" fill="rgb(243,6,42)" fg:x="8091" fg:w="13"/><text x="92.1305%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="91.9714%" y="389" width="0.0568%" height="15" fill="rgb(251,74,28)" fg:x="8099" fg:w="5"/><text x="92.2214%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="92.0168%" y="373" width="0.0114%" height="15" fill="rgb(218,20,49)" fg:x="8103" fg:w="1"/><text x="92.2668%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="92.0168%" y="357" width="0.0114%" height="15" fill="rgb(238,28,14)" fg:x="8103" fg:w="1"/><text x="92.2668%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="92.0168%" y="341" width="0.0114%" height="15" fill="rgb(229,40,46)" fg:x="8103" fg:w="1"/><text x="92.2668%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="92.0168%" y="325" width="0.0114%" height="15" fill="rgb(244,195,20)" fg:x="8103" fg:w="1"/><text x="92.2668%" y="335.50"></text></g><g><title>__pthread_disable_asynccancel (2 samples, 0.02%)</title><rect x="92.0282%" y="581" width="0.0227%" height="15" fill="rgb(253,56,35)" fg:x="8104" fg:w="2"/><text x="92.2782%" y="591.50"></text></g><g><title>yadb::storage::table::Table::new (473 samples, 5.37%)</title><rect x="86.6909%" y="693" width="5.3713%" height="15" fill="rgb(210,149,44)" fg:x="7634" fg:w="473"/><text x="86.9409%" y="703.50">yadb::s..</text></g><g><title>std::io::default_read_exact (89 samples, 1.01%)</title><rect x="91.0516%" y="677" width="1.0107%" height="15" fill="rgb(240,135,12)" fg:x="8018" fg:w="89"/><text x="91.3016%" y="687.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (89 samples, 1.01%)</title><rect x="91.0516%" y="661" width="1.0107%" height="15" fill="rgb(251,24,50)" fg:x="8018" fg:w="89"/><text x="91.3016%" y="671.50"></text></g><g><title>std::sys::unix::fs::File::read (88 samples, 1.00%)</title><rect x="91.0629%" y="645" width="0.9993%" height="15" fill="rgb(243,200,47)" fg:x="8019" fg:w="88"/><text x="91.3129%" y="655.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (88 samples, 1.00%)</title><rect x="91.0629%" y="629" width="0.9993%" height="15" fill="rgb(224,166,26)" fg:x="8019" fg:w="88"/><text x="91.3129%" y="639.50"></text></g><g><title>__libc_read (88 samples, 1.00%)</title><rect x="91.0629%" y="613" width="0.9993%" height="15" fill="rgb(233,0,47)" fg:x="8019" fg:w="88"/><text x="91.3129%" y="623.50"></text></g><g><title>__libc_read (88 samples, 1.00%)</title><rect x="91.0629%" y="597" width="0.9993%" height="15" fill="rgb(253,80,5)" fg:x="8019" fg:w="88"/><text x="91.3129%" y="607.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.01%)</title><rect x="92.0509%" y="581" width="0.0114%" height="15" fill="rgb(214,133,25)" fg:x="8106" fg:w="1"/><text x="92.3009%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="92.1190%" y="677" width="0.0114%" height="15" fill="rgb(209,27,14)" fg:x="8112" fg:w="1"/><text x="92.3690%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="92.1190%" y="661" width="0.0114%" height="15" fill="rgb(219,102,51)" fg:x="8112" fg:w="1"/><text x="92.3690%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="92.1190%" y="645" width="0.0114%" height="15" fill="rgb(237,18,16)" fg:x="8112" fg:w="1"/><text x="92.3690%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="92.1190%" y="629" width="0.0114%" height="15" fill="rgb(241,85,17)" fg:x="8112" fg:w="1"/><text x="92.3690%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="92.1190%" y="613" width="0.0114%" height="15" fill="rgb(236,90,42)" fg:x="8112" fg:w="1"/><text x="92.3690%" y="623.50"></text></g><g><title>yadb::storage::Tree::get::_{{closure}} (7,283 samples, 82.70%)</title><rect x="9.4595%" y="725" width="82.7050%" height="15" fill="rgb(249,57,21)" fg:x="833" fg:w="7283"/><text x="9.7095%" y="735.50">yadb::storage::Tree::get::_{{closure}}</text></g><g><title>yadb::storage::Tree::get_block::{{closure}} (7,114 samples, 80.79%)</title><rect x="11.3786%" y="709" width="80.7858%" height="15" fill="rgb(243,12,36)" fg:x="1002" fg:w="7114"/><text x="11.6286%" y="719.50">yadb::storage::Tree::get_block::{{closure}}</text></g><g><title>yadb::storage::table::search_index (9 samples, 0.10%)</title><rect x="92.0622%" y="693" width="0.1022%" height="15" fill="rgb(253,128,47)" fg:x="8107" fg:w="9"/><text x="92.3122%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.03%)</title><rect x="92.1304%" y="677" width="0.0341%" height="15" fill="rgb(207,33,20)" fg:x="8113" fg:w="3"/><text x="92.3804%" y="687.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="92.3234%" y="709" width="0.0227%" height="15" fill="rgb(233,215,35)" fg:x="8130" fg:w="2"/><text x="92.5734%" y="719.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (1 samples, 0.01%)</title><rect x="92.3802%" y="677" width="0.0114%" height="15" fill="rgb(249,188,52)" fg:x="8135" fg:w="1"/><text x="92.6302%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.03%)</title><rect x="92.3688%" y="693" width="0.0341%" height="15" fill="rgb(225,12,32)" fg:x="8134" fg:w="3"/><text x="92.6188%" y="703.50"></text></g><g><title>tokio::sync::oneshot::mut_load (1 samples, 0.01%)</title><rect x="92.3916%" y="677" width="0.0114%" height="15" fill="rgb(247,98,14)" fg:x="8136" fg:w="1"/><text x="92.6416%" y="687.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (2 samples, 0.02%)</title><rect x="92.4029%" y="693" width="0.0227%" height="15" fill="rgb(247,219,48)" fg:x="8137" fg:w="2"/><text x="92.6529%" y="703.50"></text></g><g><title>tokio::sync::oneshot::State::load (1 samples, 0.01%)</title><rect x="92.4256%" y="693" width="0.0114%" height="15" fill="rgb(253,60,48)" fg:x="8139" fg:w="1"/><text x="92.6756%" y="703.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.10%)</title><rect x="92.3461%" y="709" width="0.1022%" height="15" fill="rgb(245,15,52)" fg:x="8132" fg:w="9"/><text x="92.5961%" y="719.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task (1 samples, 0.01%)</title><rect x="92.4370%" y="693" width="0.0114%" height="15" fill="rgb(220,133,28)" fg:x="8140" fg:w="1"/><text x="92.6870%" y="703.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.01%)</title><rect x="92.4370%" y="677" width="0.0114%" height="15" fill="rgb(217,180,4)" fg:x="8140" fg:w="1"/><text x="92.6870%" y="687.50"></text></g><g><title>__GI___libc_free (3 samples, 0.03%)</title><rect x="92.4483%" y="709" width="0.0341%" height="15" fill="rgb(251,24,1)" fg:x="8141" fg:w="3"/><text x="92.6983%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="92.4824%" y="709" width="0.0114%" height="15" fill="rgb(212,185,49)" fg:x="8144" fg:w="1"/><text x="92.7324%" y="719.50"></text></g><g><title>_int_free (5 samples, 0.06%)</title><rect x="92.4938%" y="709" width="0.0568%" height="15" fill="rgb(215,175,22)" fg:x="8145" fg:w="5"/><text x="92.7438%" y="719.50"></text></g><g><title>unlink_chunk.isra.0 (2 samples, 0.02%)</title><rect x="92.5278%" y="693" width="0.0227%" height="15" fill="rgb(250,205,14)" fg:x="8148" fg:w="2"/><text x="92.7778%" y="703.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::acquire (3 samples, 0.03%)</title><rect x="92.5505%" y="709" width="0.0341%" height="15" fill="rgb(225,211,22)" fg:x="8150" fg:w="3"/><text x="92.8005%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.07%)</title><rect x="92.5846%" y="693" width="0.0681%" height="15" fill="rgb(251,179,42)" fg:x="8153" fg:w="6"/><text x="92.8346%" y="703.50"></text></g><g><title>yadb::storage::memtable::Memtable::insert_or_delete (7 samples, 0.08%)</title><rect x="92.5846%" y="709" width="0.0795%" height="15" fill="rgb(208,216,51)" fg:x="8153" fg:w="7"/><text x="92.8346%" y="719.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="92.6527%" y="693" width="0.0114%" height="15" fill="rgb(235,36,11)" fg:x="8159" fg:w="1"/><text x="92.9027%" y="703.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="92.6641%" y="693" width="0.0114%" height="15" fill="rgb(213,189,28)" fg:x="8160" fg:w="1"/><text x="92.9141%" y="703.50"></text></g><g><title>yadb::storage::wal::WALEntry::serialize (2 samples, 0.02%)</title><rect x="92.6754%" y="693" width="0.0227%" height="15" fill="rgb(227,203,42)" fg:x="8161" fg:w="2"/><text x="92.9254%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="92.6754%" y="677" width="0.0227%" height="15" fill="rgb(244,72,36)" fg:x="8161" fg:w="2"/><text x="92.9254%" y="687.50"></text></g><g><title>yadb::storage::Tree::start_write::_{{closure}} (50 samples, 0.57%)</title><rect x="92.1644%" y="725" width="0.5678%" height="15" fill="rgb(213,53,17)" fg:x="8116" fg:w="50"/><text x="92.4144%" y="735.50"></text></g><g><title>yadb::storage::wal::WALFile::append_to_wal (6 samples, 0.07%)</title><rect x="92.6641%" y="709" width="0.0681%" height="15" fill="rgb(207,167,3)" fg:x="8160" fg:w="6"/><text x="92.9141%" y="719.50"></text></g><g><title>yadb::storage::wal::batch_writer::AsyncBufferedWriter::write (3 samples, 0.03%)</title><rect x="92.6982%" y="693" width="0.0341%" height="15" fill="rgb(216,98,30)" fg:x="8163" fg:w="3"/><text x="92.9482%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="92.7777%" y="693" width="0.0227%" height="15" fill="rgb(236,123,15)" fg:x="8170" fg:w="2"/><text x="93.0277%" y="703.50"></text></g><g><title>__rdl_alloc (16 samples, 0.18%)</title><rect x="92.8004%" y="693" width="0.1817%" height="15" fill="rgb(248,81,50)" fg:x="8172" fg:w="16"/><text x="93.0504%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (16 samples, 0.18%)</title><rect x="92.8004%" y="677" width="0.1817%" height="15" fill="rgb(214,120,4)" fg:x="8172" fg:w="16"/><text x="93.0504%" y="687.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (16 samples, 0.18%)</title><rect x="92.8004%" y="661" width="0.1817%" height="15" fill="rgb(208,179,34)" fg:x="8172" fg:w="16"/><text x="93.0504%" y="671.50"></text></g><g><title>__posix_memalign (16 samples, 0.18%)</title><rect x="92.8004%" y="645" width="0.1817%" height="15" fill="rgb(227,140,7)" fg:x="8172" fg:w="16"/><text x="93.0504%" y="655.50"></text></g><g><title>_int_memalign (16 samples, 0.18%)</title><rect x="92.8004%" y="629" width="0.1817%" height="15" fill="rgb(214,22,6)" fg:x="8172" fg:w="16"/><text x="93.0504%" y="639.50"></text></g><g><title>_int_malloc (16 samples, 0.18%)</title><rect x="92.8004%" y="613" width="0.1817%" height="15" fill="rgb(207,137,27)" fg:x="8172" fg:w="16"/><text x="93.0504%" y="623.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_write::AsyncWrite&gt;::poll_write (47 samples, 0.53%)</title><rect x="92.7436%" y="709" width="0.5337%" height="15" fill="rgb(210,8,46)" fg:x="8167" fg:w="47"/><text x="92.9936%" y="719.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (26 samples, 0.30%)</title><rect x="92.9821%" y="693" width="0.2953%" height="15" fill="rgb(240,16,54)" fg:x="8188" fg:w="26"/><text x="93.2321%" y="703.50"></text></g><g><title>syscall (26 samples, 0.30%)</title><rect x="92.9821%" y="677" width="0.2953%" height="15" fill="rgb(211,209,29)" fg:x="8188" fg:w="26"/><text x="93.2321%" y="687.50"></text></g><g><title>[unknown] (23 samples, 0.26%)</title><rect x="93.0161%" y="661" width="0.2612%" height="15" fill="rgb(226,228,24)" fg:x="8191" fg:w="23"/><text x="93.2661%" y="671.50"></text></g><g><title>[unknown] (23 samples, 0.26%)</title><rect x="93.0161%" y="645" width="0.2612%" height="15" fill="rgb(222,84,9)" fg:x="8191" fg:w="23"/><text x="93.2661%" y="655.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="93.0388%" y="629" width="0.2385%" height="15" fill="rgb(234,203,30)" fg:x="8193" fg:w="21"/><text x="93.2888%" y="639.50"></text></g><g><title>[unknown] (20 samples, 0.23%)</title><rect x="93.0502%" y="613" width="0.2271%" height="15" fill="rgb(238,109,14)" fg:x="8194" fg:w="20"/><text x="93.3002%" y="623.50"></text></g><g><title>[unknown] (20 samples, 0.23%)</title><rect x="93.0502%" y="597" width="0.2271%" height="15" fill="rgb(233,206,34)" fg:x="8194" fg:w="20"/><text x="93.3002%" y="607.50"></text></g><g><title>[unknown] (17 samples, 0.19%)</title><rect x="93.0843%" y="581" width="0.1931%" height="15" fill="rgb(220,167,47)" fg:x="8197" fg:w="17"/><text x="93.3343%" y="591.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="93.0956%" y="565" width="0.1817%" height="15" fill="rgb(238,105,10)" fg:x="8198" fg:w="16"/><text x="93.3456%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="93.2546%" y="549" width="0.0227%" height="15" fill="rgb(213,227,17)" fg:x="8212" fg:w="2"/><text x="93.5046%" y="559.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (4 samples, 0.05%)</title><rect x="93.2773%" y="693" width="0.0454%" height="15" fill="rgb(217,132,38)" fg:x="8214" fg:w="4"/><text x="93.5273%" y="703.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (4 samples, 0.05%)</title><rect x="93.2773%" y="677" width="0.0454%" height="15" fill="rgb(242,146,4)" fg:x="8214" fg:w="4"/><text x="93.5273%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="93.3114%" y="661" width="0.0114%" height="15" fill="rgb(212,61,9)" fg:x="8217" fg:w="1"/><text x="93.5614%" y="671.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="93.3114%" y="645" width="0.0114%" height="15" fill="rgb(247,126,22)" fg:x="8217" fg:w="1"/><text x="93.5614%" y="655.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (3 samples, 0.03%)</title><rect x="93.3227%" y="677" width="0.0341%" height="15" fill="rgb(220,196,2)" fg:x="8218" fg:w="3"/><text x="93.5727%" y="687.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (3 samples, 0.03%)</title><rect x="93.3227%" y="661" width="0.0341%" height="15" fill="rgb(208,46,4)" fg:x="8218" fg:w="3"/><text x="93.5727%" y="671.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (1 samples, 0.01%)</title><rect x="93.3454%" y="645" width="0.0114%" height="15" fill="rgb(252,104,46)" fg:x="8220" fg:w="1"/><text x="93.5954%" y="655.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (8 samples, 0.09%)</title><rect x="93.2773%" y="709" width="0.0908%" height="15" fill="rgb(237,152,48)" fg:x="8214" fg:w="8"/><text x="93.5273%" y="719.50"></text></g><g><title>tokio::time::interval::Interval::poll_tick (4 samples, 0.05%)</title><rect x="93.3227%" y="693" width="0.0454%" height="15" fill="rgb(221,59,37)" fg:x="8218" fg:w="4"/><text x="93.5727%" y="703.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.01%)</title><rect x="93.3568%" y="677" width="0.0114%" height="15" fill="rgb(209,202,51)" fg:x="8221" fg:w="1"/><text x="93.6068%" y="687.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.01%)</title><rect x="93.3568%" y="661" width="0.0114%" height="15" fill="rgb(228,81,30)" fg:x="8221" fg:w="1"/><text x="93.6068%" y="671.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.01%)</title><rect x="93.3568%" y="645" width="0.0114%" height="15" fill="rgb(227,42,39)" fg:x="8221" fg:w="1"/><text x="93.6068%" y="655.50"></text></g><g><title>&lt;tokio::io::seek::Seek&lt;S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="93.3682%" y="709" width="0.0114%" height="15" fill="rgb(221,26,2)" fg:x="8222" fg:w="1"/><text x="93.6182%" y="719.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_seek::AsyncSeek&gt;::start_seek (1 samples, 0.01%)</title><rect x="93.3682%" y="693" width="0.0114%" height="15" fill="rgb(254,61,31)" fg:x="8222" fg:w="1"/><text x="93.6182%" y="703.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (1 samples, 0.01%)</title><rect x="93.3682%" y="677" width="0.0114%" height="15" fill="rgb(222,173,38)" fg:x="8222" fg:w="1"/><text x="93.6182%" y="687.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="93.3682%" y="661" width="0.0114%" height="15" fill="rgb(218,50,12)" fg:x="8222" fg:w="1"/><text x="93.6182%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="93.3682%" y="645" width="0.0114%" height="15" fill="rgb(223,88,40)" fg:x="8222" fg:w="1"/><text x="93.6182%" y="655.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (1 samples, 0.01%)</title><rect x="93.3682%" y="629" width="0.0114%" height="15" fill="rgb(237,54,19)" fg:x="8222" fg:w="1"/><text x="93.6182%" y="639.50"></text></g><g><title>__posix_memalign (1 samples, 0.01%)</title><rect x="93.3682%" y="613" width="0.0114%" height="15" fill="rgb(251,129,25)" fg:x="8222" fg:w="1"/><text x="93.6182%" y="623.50"></text></g><g><title>_int_memalign (1 samples, 0.01%)</title><rect x="93.3682%" y="597" width="0.0114%" height="15" fill="rgb(238,97,19)" fg:x="8222" fg:w="1"/><text x="93.6182%" y="607.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="93.3682%" y="581" width="0.0114%" height="15" fill="rgb(240,169,18)" fg:x="8222" fg:w="1"/><text x="93.6182%" y="591.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="93.3795%" y="709" width="0.0227%" height="15" fill="rgb(230,187,49)" fg:x="8223" fg:w="2"/><text x="93.6295%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.10%)</title><rect x="93.4022%" y="709" width="0.1022%" height="15" fill="rgb(209,44,26)" fg:x="8225" fg:w="9"/><text x="93.6522%" y="719.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="93.5385%" y="693" width="0.0114%" height="15" fill="rgb(244,0,6)" fg:x="8237" fg:w="1"/><text x="93.7885%" y="703.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.01%)</title><rect x="93.5385%" y="677" width="0.0114%" height="15" fill="rgb(248,18,21)" fg:x="8237" fg:w="1"/><text x="93.7885%" y="687.50"></text></g><g><title>_int_free (5 samples, 0.06%)</title><rect x="93.5044%" y="709" width="0.0568%" height="15" fill="rgb(245,180,19)" fg:x="8234" fg:w="5"/><text x="93.7544%" y="719.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.01%)</title><rect x="93.5499%" y="693" width="0.0114%" height="15" fill="rgb(252,118,36)" fg:x="8238" fg:w="1"/><text x="93.7999%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="93.5612%" y="709" width="0.0114%" height="15" fill="rgb(210,224,19)" fg:x="8239" fg:w="1"/><text x="93.8112%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="93.5612%" y="693" width="0.0114%" height="15" fill="rgb(218,30,24)" fg:x="8239" fg:w="1"/><text x="93.8112%" y="703.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="93.5612%" y="677" width="0.0114%" height="15" fill="rgb(219,75,50)" fg:x="8239" fg:w="1"/><text x="93.8112%" y="687.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="93.5612%" y="661" width="0.0114%" height="15" fill="rgb(234,72,50)" fg:x="8239" fg:w="1"/><text x="93.8112%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="93.5612%" y="645" width="0.0114%" height="15" fill="rgb(219,100,48)" fg:x="8239" fg:w="1"/><text x="93.8112%" y="655.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.05%)</title><rect x="93.6180%" y="693" width="0.0454%" height="15" fill="rgb(253,5,41)" fg:x="8244" fg:w="4"/><text x="93.8680%" y="703.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (3 samples, 0.03%)</title><rect x="93.6293%" y="677" width="0.0341%" height="15" fill="rgb(247,181,11)" fg:x="8245" fg:w="3"/><text x="93.8793%" y="687.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="93.6521%" y="661" width="0.0114%" height="15" fill="rgb(222,223,25)" fg:x="8247" fg:w="1"/><text x="93.9021%" y="671.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="93.6634%" y="661" width="0.0114%" height="15" fill="rgb(214,198,28)" fg:x="8248" fg:w="1"/><text x="93.9134%" y="671.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="93.6748%" y="661" width="0.0114%" height="15" fill="rgb(230,46,43)" fg:x="8249" fg:w="1"/><text x="93.9248%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="93.6861%" y="661" width="0.0114%" height="15" fill="rgb(233,65,53)" fg:x="8250" fg:w="1"/><text x="93.9361%" y="671.50"></text></g><g><title>tokio::fs::file::Inner::poll_complete_inflight (4 samples, 0.05%)</title><rect x="93.6634%" y="693" width="0.0454%" height="15" fill="rgb(221,121,27)" fg:x="8248" fg:w="4"/><text x="93.9134%" y="703.50"></text></g><g><title>tokio::fs::file::Inner::poll_flush (4 samples, 0.05%)</title><rect x="93.6634%" y="677" width="0.0454%" height="15" fill="rgb(247,70,47)" fg:x="8248" fg:w="4"/><text x="93.9134%" y="687.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (1 samples, 0.01%)</title><rect x="93.6975%" y="661" width="0.0114%" height="15" fill="rgb(228,85,35)" fg:x="8251" fg:w="1"/><text x="93.9475%" y="671.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (24 samples, 0.27%)</title><rect x="93.7429%" y="661" width="0.2725%" height="15" fill="rgb(209,50,18)" fg:x="8255" fg:w="24"/><text x="93.9929%" y="671.50"></text></g><g><title>syscall (23 samples, 0.26%)</title><rect x="93.7543%" y="645" width="0.2612%" height="15" fill="rgb(250,19,35)" fg:x="8256" fg:w="23"/><text x="94.0043%" y="655.50"></text></g><g><title>[unknown] (19 samples, 0.22%)</title><rect x="93.7997%" y="629" width="0.2158%" height="15" fill="rgb(253,107,29)" fg:x="8260" fg:w="19"/><text x="94.0497%" y="639.50"></text></g><g><title>[unknown] (19 samples, 0.22%)</title><rect x="93.7997%" y="613" width="0.2158%" height="15" fill="rgb(252,179,29)" fg:x="8260" fg:w="19"/><text x="94.0497%" y="623.50"></text></g><g><title>[unknown] (18 samples, 0.20%)</title><rect x="93.8110%" y="597" width="0.2044%" height="15" fill="rgb(238,194,6)" fg:x="8261" fg:w="18"/><text x="94.0610%" y="607.50"></text></g><g><title>[unknown] (17 samples, 0.19%)</title><rect x="93.8224%" y="581" width="0.1931%" height="15" fill="rgb(238,164,29)" fg:x="8262" fg:w="17"/><text x="94.0724%" y="591.50"></text></g><g><title>[unknown] (17 samples, 0.19%)</title><rect x="93.8224%" y="565" width="0.1931%" height="15" fill="rgb(224,25,9)" fg:x="8262" fg:w="17"/><text x="94.0724%" y="575.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="93.8337%" y="549" width="0.1817%" height="15" fill="rgb(244,153,23)" fg:x="8263" fg:w="16"/><text x="94.0837%" y="559.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="93.8792%" y="533" width="0.1363%" height="15" fill="rgb(212,203,14)" fg:x="8267" fg:w="12"/><text x="94.1292%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.0041%" y="517" width="0.0114%" height="15" fill="rgb(220,164,20)" fg:x="8278" fg:w="1"/><text x="94.2541%" y="527.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (39 samples, 0.44%)</title><rect x="93.7088%" y="693" width="0.4429%" height="15" fill="rgb(222,203,48)" fg:x="8252" fg:w="39"/><text x="93.9588%" y="703.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (37 samples, 0.42%)</title><rect x="93.7315%" y="677" width="0.4202%" height="15" fill="rgb(215,159,22)" fg:x="8254" fg:w="37"/><text x="93.9815%" y="687.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (12 samples, 0.14%)</title><rect x="94.0154%" y="661" width="0.1363%" height="15" fill="rgb(216,183,47)" fg:x="8279" fg:w="12"/><text x="94.2654%" y="671.50"></text></g><g><title>__rdl_alloc (12 samples, 0.14%)</title><rect x="94.0154%" y="645" width="0.1363%" height="15" fill="rgb(229,195,25)" fg:x="8279" fg:w="12"/><text x="94.2654%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (12 samples, 0.14%)</title><rect x="94.0154%" y="629" width="0.1363%" height="15" fill="rgb(224,132,51)" fg:x="8279" fg:w="12"/><text x="94.2654%" y="639.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (12 samples, 0.14%)</title><rect x="94.0154%" y="613" width="0.1363%" height="15" fill="rgb(240,63,7)" fg:x="8279" fg:w="12"/><text x="94.2654%" y="623.50"></text></g><g><title>__posix_memalign (12 samples, 0.14%)</title><rect x="94.0154%" y="597" width="0.1363%" height="15" fill="rgb(249,182,41)" fg:x="8279" fg:w="12"/><text x="94.2654%" y="607.50"></text></g><g><title>_int_memalign (11 samples, 0.12%)</title><rect x="94.0268%" y="581" width="0.1249%" height="15" fill="rgb(243,47,26)" fg:x="8280" fg:w="11"/><text x="94.2768%" y="591.50"></text></g><g><title>_int_malloc (11 samples, 0.12%)</title><rect x="94.0268%" y="565" width="0.1249%" height="15" fill="rgb(233,48,2)" fg:x="8280" fg:w="11"/><text x="94.2768%" y="575.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="94.1517%" y="677" width="0.0114%" height="15" fill="rgb(244,165,34)" fg:x="8291" fg:w="1"/><text x="94.4017%" y="687.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (3 samples, 0.03%)</title><rect x="94.1517%" y="693" width="0.0341%" height="15" fill="rgb(207,89,7)" fg:x="8291" fg:w="3"/><text x="94.4017%" y="703.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="94.1631%" y="677" width="0.0227%" height="15" fill="rgb(244,117,36)" fg:x="8292" fg:w="2"/><text x="94.4131%" y="687.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.01%)</title><rect x="94.1744%" y="661" width="0.0114%" height="15" fill="rgb(226,144,34)" fg:x="8293" fg:w="1"/><text x="94.4244%" y="671.50"></text></g><g><title>tokio::fs::file::File::sync_data::{{closure}} (55 samples, 0.62%)</title><rect x="93.5726%" y="709" width="0.6246%" height="15" fill="rgb(213,23,19)" fg:x="8240" fg:w="55"/><text x="93.8226%" y="719.50"></text></g><g><title>tokio::sync::mutex::Mutex&lt;T&gt;::lock::{{closure}} (1 samples, 0.01%)</title><rect x="94.1858%" y="693" width="0.0114%" height="15" fill="rgb(217,75,12)" fg:x="8294" fg:w="1"/><text x="94.4358%" y="703.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (5 samples, 0.06%)</title><rect x="94.2199%" y="693" width="0.0568%" height="15" fill="rgb(224,159,17)" fg:x="8297" fg:w="5"/><text x="94.4699%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule (1 samples, 0.01%)</title><rect x="94.2766%" y="693" width="0.0114%" height="15" fill="rgb(217,118,1)" fg:x="8302" fg:w="1"/><text x="94.5266%" y="703.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (7,485 samples, 85.00%)</title><rect x="9.3118%" y="741" width="84.9989%" height="15" fill="rgb(232,180,48)" fg:x="820" fg:w="7485"/><text x="9.5618%" y="751.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>yadb::storage::wal::batch_writer::AsyncBufferedWriter::new::_{{closure}} (139 samples, 1.58%)</title><rect x="92.7322%" y="725" width="1.5785%" height="15" fill="rgb(230,27,33)" fg:x="8166" fg:w="139"/><text x="92.9822%" y="735.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (10 samples, 0.11%)</title><rect x="94.1971%" y="709" width="0.1136%" height="15" fill="rgb(205,31,21)" fg:x="8295" fg:w="10"/><text x="94.4471%" y="719.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (2 samples, 0.02%)</title><rect x="94.2880%" y="693" width="0.0227%" height="15" fill="rgb(253,59,4)" fg:x="8303" fg:w="2"/><text x="94.5380%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="94.3107%" y="725" width="0.0114%" height="15" fill="rgb(224,201,9)" fg:x="8305" fg:w="1"/><text x="94.5607%" y="735.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (2 samples, 0.02%)</title><rect x="94.3107%" y="741" width="0.0227%" height="15" fill="rgb(229,206,30)" fg:x="8305" fg:w="2"/><text x="94.5607%" y="751.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.01%)</title><rect x="94.3221%" y="725" width="0.0114%" height="15" fill="rgb(212,67,47)" fg:x="8306" fg:w="1"/><text x="94.5721%" y="735.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (1 samples, 0.01%)</title><rect x="94.4129%" y="677" width="0.0114%" height="15" fill="rgb(211,96,50)" fg:x="8314" fg:w="1"/><text x="94.6629%" y="687.50"></text></g><g><title>futures_task::waker::wake_by_ref_arc_raw (8 samples, 0.09%)</title><rect x="94.3448%" y="709" width="0.0908%" height="15" fill="rgb(252,114,18)" fg:x="8308" fg:w="8"/><text x="94.5948%" y="719.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (8 samples, 0.09%)</title><rect x="94.3448%" y="693" width="0.0908%" height="15" fill="rgb(223,58,37)" fg:x="8308" fg:w="8"/><text x="94.5948%" y="703.50"></text></g><g><title>tokio::util::wake::wake_arc_raw (1 samples, 0.01%)</title><rect x="94.4243%" y="677" width="0.0114%" height="15" fill="rgb(237,70,4)" fg:x="8315" fg:w="1"/><text x="94.6743%" y="687.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.11%)</title><rect x="94.3334%" y="725" width="0.1136%" height="15" fill="rgb(244,85,46)" fg:x="8307" fg:w="10"/><text x="94.5834%" y="735.50"></text></g><g><title>tokio::runtime::task::core::Trailer::wake_join (1 samples, 0.01%)</title><rect x="94.4356%" y="709" width="0.0114%" height="15" fill="rgb(223,39,52)" fg:x="8316" fg:w="1"/><text x="94.6856%" y="719.50"></text></g><g><title>futures_task::waker::wake_by_ref_arc_raw (7 samples, 0.08%)</title><rect x="94.4470%" y="725" width="0.0795%" height="15" fill="rgb(218,200,14)" fg:x="8317" fg:w="7"/><text x="94.6970%" y="735.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (5 samples, 0.06%)</title><rect x="94.4697%" y="709" width="0.0568%" height="15" fill="rgb(208,171,16)" fg:x="8319" fg:w="5"/><text x="94.7197%" y="719.50"></text></g><g><title>tokio::runtime::task::core::Trailer::wake_join (2 samples, 0.02%)</title><rect x="94.5265%" y="725" width="0.0227%" height="15" fill="rgb(234,200,18)" fg:x="8324" fg:w="2"/><text x="94.7765%" y="735.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (25 samples, 0.28%)</title><rect x="94.3334%" y="741" width="0.2839%" height="15" fill="rgb(228,45,11)" fg:x="8307" fg:w="25"/><text x="94.5834%" y="751.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (6 samples, 0.07%)</title><rect x="94.5492%" y="725" width="0.0681%" height="15" fill="rgb(237,182,11)" fg:x="8326" fg:w="6"/><text x="94.7992%" y="735.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner::transition_result_to_poll_future (1 samples, 0.01%)</title><rect x="94.6173%" y="741" width="0.0114%" height="15" fill="rgb(241,175,49)" fg:x="8332" fg:w="1"/><text x="94.8673%" y="751.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (1 samples, 0.01%)</title><rect x="94.6287%" y="741" width="0.0114%" height="15" fill="rgb(247,38,35)" fg:x="8333" fg:w="1"/><text x="94.8787%" y="751.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7,528 samples, 85.49%)</title><rect x="9.1983%" y="757" width="85.4872%" height="15" fill="rgb(228,39,49)" fg:x="810" fg:w="7528"/><text x="9.4483%" y="767.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (4 samples, 0.05%)</title><rect x="94.6400%" y="741" width="0.0454%" height="15" fill="rgb(226,101,26)" fg:x="8334" fg:w="4"/><text x="94.8900%" y="751.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (3 samples, 0.03%)</title><rect x="94.6854%" y="757" width="0.0341%" height="15" fill="rgb(206,141,19)" fg:x="8338" fg:w="3"/><text x="94.9354%" y="767.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (7,534 samples, 85.56%)</title><rect x="9.1756%" y="773" width="85.5553%" height="15" fill="rgb(211,200,13)" fg:x="808" fg:w="7534"/><text x="9.4256%" y="783.50">tokio::runtime::scheduler::current_thread::Context::run_task</text></g><g><title>tokio::runtime::task::raw::poll (1 samples, 0.01%)</title><rect x="94.7195%" y="757" width="0.0114%" height="15" fill="rgb(241,121,6)" fg:x="8341" fg:w="1"/><text x="94.9695%" y="767.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Core::next_task (3 samples, 0.03%)</title><rect x="94.7309%" y="773" width="0.0341%" height="15" fill="rgb(234,221,29)" fg:x="8342" fg:w="3"/><text x="94.9809%" y="783.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Handle::reset_woken (1 samples, 0.01%)</title><rect x="94.7649%" y="773" width="0.0114%" height="15" fill="rgb(229,136,5)" fg:x="8345" fg:w="1"/><text x="95.0149%" y="783.50"></text></g><g><title>split_bench (8,347 samples, 94.79%)</title><rect x="0.0000%" y="1285" width="94.7876%" height="15" fill="rgb(238,36,11)" fg:x="0" fg:w="8347"/><text x="0.2500%" y="1295.50">split_bench</text></g><g><title>__GI___clone (7,705 samples, 87.50%)</title><rect x="7.2905%" y="1269" width="87.4972%" height="15" fill="rgb(251,55,41)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="1279.50">__GI___clone</text></g><g><title>start_thread (7,705 samples, 87.50%)</title><rect x="7.2905%" y="1253" width="87.4972%" height="15" fill="rgb(242,34,40)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="1263.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (7,705 samples, 87.50%)</title><rect x="7.2905%" y="1237" width="87.4972%" height="15" fill="rgb(215,42,17)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="1247.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7,705 samples, 87.50%)</title><rect x="7.2905%" y="1221" width="87.4972%" height="15" fill="rgb(207,44,46)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="1231.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7,705 samples, 87.50%)</title><rect x="7.2905%" y="1205" width="87.4972%" height="15" fill="rgb(211,206,28)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="1215.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (7,705 samples, 87.50%)</title><rect x="7.2905%" y="1189" width="87.4972%" height="15" fill="rgb(237,167,16)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="1199.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (7,705 samples, 87.50%)</title><rect x="7.2905%" y="1173" width="87.4972%" height="15" fill="rgb(233,66,6)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="1183.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (7,705 samples, 87.50%)</title><rect x="7.2905%" y="1157" width="87.4972%" height="15" fill="rgb(246,123,29)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="1167.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (7,705 samples, 87.50%)</title><rect x="7.2905%" y="1141" width="87.4972%" height="15" fill="rgb(209,62,40)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="1151.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (7,705 samples, 87.50%)</title><rect x="7.2905%" y="1125" width="87.4972%" height="15" fill="rgb(218,4,25)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="1135.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,705 samples, 87.50%)</title><rect x="7.2905%" y="1109" width="87.4972%" height="15" fill="rgb(253,91,49)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="1119.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (7,705 samples, 87.50%)</title><rect x="7.2905%" y="1093" width="87.4972%" height="15" fill="rgb(228,155,29)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="1103.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7,705 samples, 87.50%)</title><rect x="7.2905%" y="1077" width="87.4972%" height="15" fill="rgb(243,57,37)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="1087.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>test::run_test::run_test_inner::{{closure}} (7,705 samples, 87.50%)</title><rect x="7.2905%" y="1061" width="87.4972%" height="15" fill="rgb(244,167,17)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="1071.50">test::run_test::run_test_inner::{{closure}}</text></g><g><title>test::run_test::run_test_inner::{{closure}} (7,705 samples, 87.50%)</title><rect x="7.2905%" y="1045" width="87.4972%" height="15" fill="rgb(207,181,38)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="1055.50">test::run_test::run_test_inner::{{closure}}</text></g><g><title>test::run_test_in_process (7,705 samples, 87.50%)</title><rect x="7.2905%" y="1029" width="87.4972%" height="15" fill="rgb(211,8,23)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="1039.50">test::run_test_in_process</text></g><g><title>std::panic::catch_unwind (7,705 samples, 87.50%)</title><rect x="7.2905%" y="1013" width="87.4972%" height="15" fill="rgb(235,11,44)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="1023.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (7,705 samples, 87.50%)</title><rect x="7.2905%" y="997" width="87.4972%" height="15" fill="rgb(248,18,52)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="1007.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (7,705 samples, 87.50%)</title><rect x="7.2905%" y="981" width="87.4972%" height="15" fill="rgb(208,4,7)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="991.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,705 samples, 87.50%)</title><rect x="7.2905%" y="965" width="87.4972%" height="15" fill="rgb(240,17,39)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="975.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7,705 samples, 87.50%)</title><rect x="7.2905%" y="949" width="87.4972%" height="15" fill="rgb(207,170,3)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="959.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (7,705 samples, 87.50%)</title><rect x="7.2905%" y="933" width="87.4972%" height="15" fill="rgb(236,100,52)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="943.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>test::run_test::{{closure}} (7,705 samples, 87.50%)</title><rect x="7.2905%" y="917" width="87.4972%" height="15" fill="rgb(246,78,51)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="927.50">test::run_test::{{closure}}</text></g><g><title>test::__rust_begin_short_backtrace (7,705 samples, 87.50%)</title><rect x="7.2905%" y="901" width="87.4972%" height="15" fill="rgb(211,17,15)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="911.50">test::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (7,705 samples, 87.50%)</title><rect x="7.2905%" y="885" width="87.4972%" height="15" fill="rgb(209,59,46)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="895.50">core::ops::function::FnOnce::call_once</text></g><g><title>core::ops::function::FnOnce::call_once (7,705 samples, 87.50%)</title><rect x="7.2905%" y="869" width="87.4972%" height="15" fill="rgb(210,92,25)" fg:x="642" fg:w="7705"/><text x="7.5405%" y="879.50">core::ops::function::FnOnce::call_once</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (7,704 samples, 87.49%)</title><rect x="7.3018%" y="853" width="87.4858%" height="15" fill="rgb(238,174,52)" fg:x="643" fg:w="7704"/><text x="7.5518%" y="863.50">tokio::runtime::runtime::Runtime::block_on</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (7,704 samples, 87.49%)</title><rect x="7.3018%" y="837" width="87.4858%" height="15" fill="rgb(230,73,7)" fg:x="643" fg:w="7704"/><text x="7.5518%" y="847.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (7,704 samples, 87.49%)</title><rect x="7.3018%" y="821" width="87.4858%" height="15" fill="rgb(243,124,40)" fg:x="643" fg:w="7704"/><text x="7.5518%" y="831.50">tokio::runtime::scheduler::current_thread::CoreGuard::block_on</text></g><g><title>tokio::runtime::context::set_scheduler (7,704 samples, 87.49%)</title><rect x="7.3018%" y="805" width="87.4858%" height="15" fill="rgb(244,170,11)" fg:x="643" fg:w="7704"/><text x="7.5518%" y="815.50">tokio::runtime::context::set_scheduler</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (7,704 samples, 87.49%)</title><rect x="7.3018%" y="789" width="87.4858%" height="15" fill="rgb(207,114,54)" fg:x="643" fg:w="7704"/><text x="7.5518%" y="799.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::inject::Inject&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="94.7763%" y="773" width="0.0114%" height="15" fill="rgb(205,42,20)" fg:x="8346" fg:w="1"/><text x="95.0263%" y="783.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="94.7876%" y="1269" width="0.0795%" height="15" fill="rgb(230,30,28)" fg:x="8347" fg:w="7"/><text x="95.0376%" y="1279.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="94.7876%" y="1253" width="0.0795%" height="15" fill="rgb(205,73,54)" fg:x="8347" fg:w="7"/><text x="95.0376%" y="1263.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="94.7876%" y="1237" width="0.0795%" height="15" fill="rgb(254,227,23)" fg:x="8347" fg:w="7"/><text x="95.0376%" y="1247.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="94.7876%" y="1221" width="0.0795%" height="15" fill="rgb(228,202,34)" fg:x="8347" fg:w="7"/><text x="95.0376%" y="1231.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="94.7876%" y="1205" width="0.0795%" height="15" fill="rgb(222,225,37)" fg:x="8347" fg:w="7"/><text x="95.0376%" y="1215.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="94.7876%" y="1189" width="0.0795%" height="15" fill="rgb(221,14,54)" fg:x="8347" fg:w="7"/><text x="95.0376%" y="1199.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="94.7876%" y="1173" width="0.0795%" height="15" fill="rgb(254,102,2)" fg:x="8347" fg:w="7"/><text x="95.0376%" y="1183.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="94.7876%" y="1157" width="0.0795%" height="15" fill="rgb(232,104,17)" fg:x="8347" fg:w="7"/><text x="95.0376%" y="1167.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="94.7876%" y="1141" width="0.0795%" height="15" fill="rgb(250,220,14)" fg:x="8347" fg:w="7"/><text x="95.0376%" y="1151.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="94.7876%" y="1125" width="0.0795%" height="15" fill="rgb(241,158,9)" fg:x="8347" fg:w="7"/><text x="95.0376%" y="1135.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="94.7876%" y="1109" width="0.0795%" height="15" fill="rgb(246,9,43)" fg:x="8347" fg:w="7"/><text x="95.0376%" y="1119.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="94.7990%" y="1093" width="0.0681%" height="15" fill="rgb(206,73,33)" fg:x="8348" fg:w="6"/><text x="95.0490%" y="1103.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="94.7990%" y="1077" width="0.0681%" height="15" fill="rgb(222,79,8)" fg:x="8348" fg:w="6"/><text x="95.0490%" y="1087.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="94.8104%" y="1061" width="0.0568%" height="15" fill="rgb(234,8,54)" fg:x="8349" fg:w="5"/><text x="95.0604%" y="1071.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="94.8217%" y="1045" width="0.0454%" height="15" fill="rgb(209,134,38)" fg:x="8350" fg:w="4"/><text x="95.0717%" y="1055.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="94.8217%" y="1029" width="0.0454%" height="15" fill="rgb(230,127,29)" fg:x="8350" fg:w="4"/><text x="95.0717%" y="1039.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="94.8217%" y="1013" width="0.0454%" height="15" fill="rgb(242,44,41)" fg:x="8350" fg:w="4"/><text x="95.0717%" y="1023.50"></text></g><g><title>test_storage-9f (8 samples, 0.09%)</title><rect x="94.7876%" y="1285" width="0.0908%" height="15" fill="rgb(222,56,43)" fg:x="8347" fg:w="8"/><text x="95.0376%" y="1295.50"></text></g><g><title>_start (1 samples, 0.01%)</title><rect x="94.8671%" y="1269" width="0.0114%" height="15" fill="rgb(238,39,47)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="1279.50"></text></g><g><title>__libc_start_main (1 samples, 0.01%)</title><rect x="94.8671%" y="1253" width="0.0114%" height="15" fill="rgb(226,79,43)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="1263.50"></text></g><g><title>main (1 samples, 0.01%)</title><rect x="94.8671%" y="1237" width="0.0114%" height="15" fill="rgb(242,105,53)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="1247.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.01%)</title><rect x="94.8671%" y="1221" width="0.0114%" height="15" fill="rgb(251,132,46)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.01%)</title><rect x="94.8671%" y="1205" width="0.0114%" height="15" fill="rgb(231,77,14)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="1215.50"></text></g><g><title>std::panicking::try (1 samples, 0.01%)</title><rect x="94.8671%" y="1189" width="0.0114%" height="15" fill="rgb(240,135,9)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="1199.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.01%)</title><rect x="94.8671%" y="1173" width="0.0114%" height="15" fill="rgb(248,109,14)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="1183.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 0.01%)</title><rect x="94.8671%" y="1157" width="0.0114%" height="15" fill="rgb(227,146,52)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="1167.50"></text></g><g><title>std::rt::init (1 samples, 0.01%)</title><rect x="94.8671%" y="1141" width="0.0114%" height="15" fill="rgb(232,54,3)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="1151.50"></text></g><g><title>std::sys::unix::thread::guard::init (1 samples, 0.01%)</title><rect x="94.8671%" y="1125" width="0.0114%" height="15" fill="rgb(229,201,43)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="1135.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start_aligned (1 samples, 0.01%)</title><rect x="94.8671%" y="1109" width="0.0114%" height="15" fill="rgb(252,161,33)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="1119.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start (1 samples, 0.01%)</title><rect x="94.8671%" y="1093" width="0.0114%" height="15" fill="rgb(226,146,40)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="1103.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.01%)</title><rect x="94.8671%" y="1077" width="0.0114%" height="15" fill="rgb(219,47,25)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="1087.50"></text></g><g><title>_IO_getdelim (1 samples, 0.01%)</title><rect x="94.8671%" y="1061" width="0.0114%" height="15" fill="rgb(250,135,13)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="1071.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.01%)</title><rect x="94.8671%" y="1045" width="0.0114%" height="15" fill="rgb(219,229,18)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="1055.50"></text></g><g><title>__GI___read_nocancel (1 samples, 0.01%)</title><rect x="94.8671%" y="1029" width="0.0114%" height="15" fill="rgb(217,152,27)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.8671%" y="1013" width="0.0114%" height="15" fill="rgb(225,71,47)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.8671%" y="997" width="0.0114%" height="15" fill="rgb(220,139,14)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.8671%" y="981" width="0.0114%" height="15" fill="rgb(247,54,32)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.8671%" y="965" width="0.0114%" height="15" fill="rgb(252,131,39)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.8671%" y="949" width="0.0114%" height="15" fill="rgb(210,108,39)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.8671%" y="933" width="0.0114%" height="15" fill="rgb(205,23,29)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.8671%" y="917" width="0.0114%" height="15" fill="rgb(246,139,46)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.8671%" y="901" width="0.0114%" height="15" fill="rgb(250,81,26)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.8671%" y="885" width="0.0114%" height="15" fill="rgb(214,104,7)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.8671%" y="869" width="0.0114%" height="15" fill="rgb(233,189,8)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.8671%" y="853" width="0.0114%" height="15" fill="rgb(228,141,17)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.8671%" y="837" width="0.0114%" height="15" fill="rgb(247,157,1)" fg:x="8354" fg:w="1"/><text x="95.1171%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.9239%" y="1093" width="0.0114%" height="15" fill="rgb(249,225,5)" fg:x="8359" fg:w="1"/><text x="95.1739%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.9239%" y="1077" width="0.0114%" height="15" fill="rgb(242,55,13)" fg:x="8359" fg:w="1"/><text x="95.1739%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.9239%" y="1061" width="0.0114%" height="15" fill="rgb(230,49,50)" fg:x="8359" fg:w="1"/><text x="95.1739%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.9239%" y="1045" width="0.0114%" height="15" fill="rgb(241,111,38)" fg:x="8359" fg:w="1"/><text x="95.1739%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.9239%" y="1029" width="0.0114%" height="15" fill="rgb(252,155,4)" fg:x="8359" fg:w="1"/><text x="95.1739%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.9239%" y="1013" width="0.0114%" height="15" fill="rgb(212,69,32)" fg:x="8359" fg:w="1"/><text x="95.1739%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.9239%" y="997" width="0.0114%" height="15" fill="rgb(243,107,47)" fg:x="8359" fg:w="1"/><text x="95.1739%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.9239%" y="981" width="0.0114%" height="15" fill="rgb(247,130,12)" fg:x="8359" fg:w="1"/><text x="95.1739%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.9239%" y="965" width="0.0114%" height="15" fill="rgb(233,74,16)" fg:x="8359" fg:w="1"/><text x="95.1739%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.9239%" y="949" width="0.0114%" height="15" fill="rgb(208,58,18)" fg:x="8359" fg:w="1"/><text x="95.1739%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.9239%" y="933" width="0.0114%" height="15" fill="rgb(242,225,1)" fg:x="8359" fg:w="1"/><text x="95.1739%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.9239%" y="917" width="0.0114%" height="15" fill="rgb(249,39,40)" fg:x="8359" fg:w="1"/><text x="95.1739%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.9239%" y="901" width="0.0114%" height="15" fill="rgb(207,72,44)" fg:x="8359" fg:w="1"/><text x="95.1739%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.9239%" y="885" width="0.0114%" height="15" fill="rgb(215,193,12)" fg:x="8359" fg:w="1"/><text x="95.1739%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.9239%" y="869" width="0.0114%" height="15" fill="rgb(248,41,39)" fg:x="8359" fg:w="1"/><text x="95.1739%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.9239%" y="853" width="0.0114%" height="15" fill="rgb(253,85,4)" fg:x="8359" fg:w="1"/><text x="95.1739%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.9239%" y="837" width="0.0114%" height="15" fill="rgb(243,70,31)" fg:x="8359" fg:w="1"/><text x="95.1739%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.9239%" y="821" width="0.0114%" height="15" fill="rgb(253,195,26)" fg:x="8359" fg:w="1"/><text x="95.1739%" y="831.50"></text></g><g><title>[[vdso]] (1 samples, 0.01%)</title><rect x="94.9921%" y="1029" width="0.0114%" height="15" fill="rgb(243,42,11)" fg:x="8365" fg:w="1"/><text x="95.2421%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (8 samples, 0.09%)</title><rect x="94.9353%" y="1093" width="0.0908%" height="15" fill="rgb(239,66,17)" fg:x="8360" fg:w="8"/><text x="95.1853%" y="1103.50"></text></g><g><title>std::sys::unix::futex::futex_wait::{{closure}} (8 samples, 0.09%)</title><rect x="94.9353%" y="1077" width="0.0908%" height="15" fill="rgb(217,132,21)" fg:x="8360" fg:w="8"/><text x="95.1853%" y="1087.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (8 samples, 0.09%)</title><rect x="94.9353%" y="1061" width="0.0908%" height="15" fill="rgb(252,202,21)" fg:x="8360" fg:w="8"/><text x="95.1853%" y="1071.50"></text></g><g><title>__clock_gettime_2 (7 samples, 0.08%)</title><rect x="94.9466%" y="1045" width="0.0795%" height="15" fill="rgb(233,98,36)" fg:x="8361" fg:w="7"/><text x="95.1966%" y="1055.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.02%)</title><rect x="95.0034%" y="1029" width="0.0227%" height="15" fill="rgb(216,153,54)" fg:x="8366" fg:w="2"/><text x="95.2534%" y="1039.50"></text></g><g><title>std::sys::unix::futex::futex_wait (76 samples, 0.86%)</title><rect x="94.9126%" y="1109" width="0.8630%" height="15" fill="rgb(250,99,7)" fg:x="8358" fg:w="76"/><text x="95.1626%" y="1119.50"></text></g><g><title>syscall (66 samples, 0.75%)</title><rect x="95.0261%" y="1093" width="0.7495%" height="15" fill="rgb(207,56,50)" fg:x="8368" fg:w="66"/><text x="95.2761%" y="1103.50"></text></g><g><title>[unknown] (58 samples, 0.66%)</title><rect x="95.1170%" y="1077" width="0.6586%" height="15" fill="rgb(244,61,34)" fg:x="8376" fg:w="58"/><text x="95.3670%" y="1087.50"></text></g><g><title>[unknown] (58 samples, 0.66%)</title><rect x="95.1170%" y="1061" width="0.6586%" height="15" fill="rgb(241,50,38)" fg:x="8376" fg:w="58"/><text x="95.3670%" y="1071.50"></text></g><g><title>[unknown] (58 samples, 0.66%)</title><rect x="95.1170%" y="1045" width="0.6586%" height="15" fill="rgb(212,166,30)" fg:x="8376" fg:w="58"/><text x="95.3670%" y="1055.50"></text></g><g><title>[unknown] (54 samples, 0.61%)</title><rect x="95.1624%" y="1029" width="0.6132%" height="15" fill="rgb(249,127,32)" fg:x="8380" fg:w="54"/><text x="95.4124%" y="1039.50"></text></g><g><title>[unknown] (53 samples, 0.60%)</title><rect x="95.1737%" y="1013" width="0.6019%" height="15" fill="rgb(209,103,0)" fg:x="8381" fg:w="53"/><text x="95.4237%" y="1023.50"></text></g><g><title>[unknown] (48 samples, 0.55%)</title><rect x="95.2305%" y="997" width="0.5451%" height="15" fill="rgb(238,209,51)" fg:x="8386" fg:w="48"/><text x="95.4805%" y="1007.50"></text></g><g><title>[unknown] (41 samples, 0.47%)</title><rect x="95.3100%" y="981" width="0.4656%" height="15" fill="rgb(237,56,23)" fg:x="8393" fg:w="41"/><text x="95.5600%" y="991.50"></text></g><g><title>[unknown] (34 samples, 0.39%)</title><rect x="95.3895%" y="965" width="0.3861%" height="15" fill="rgb(215,153,46)" fg:x="8400" fg:w="34"/><text x="95.6395%" y="975.50"></text></g><g><title>[unknown] (27 samples, 0.31%)</title><rect x="95.4690%" y="949" width="0.3066%" height="15" fill="rgb(224,49,31)" fg:x="8407" fg:w="27"/><text x="95.7190%" y="959.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_timeout (77 samples, 0.87%)</title><rect x="94.9126%" y="1141" width="0.8744%" height="15" fill="rgb(250,18,42)" fg:x="8358" fg:w="77"/><text x="95.1626%" y="1151.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (77 samples, 0.87%)</title><rect x="94.9126%" y="1125" width="0.8744%" height="15" fill="rgb(215,176,39)" fg:x="8358" fg:w="77"/><text x="95.1626%" y="1135.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="95.7756%" y="1109" width="0.0114%" height="15" fill="rgb(223,77,29)" fg:x="8434" fg:w="1"/><text x="96.0256%" y="1119.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (1 samples, 0.01%)</title><rect x="95.7756%" y="1093" width="0.0114%" height="15" fill="rgb(234,94,52)" fg:x="8434" fg:w="1"/><text x="96.0256%" y="1103.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="95.7870%" y="1141" width="0.0114%" height="15" fill="rgb(220,154,50)" fg:x="8435" fg:w="1"/><text x="96.0370%" y="1151.50"></text></g><g><title>std::fs::File::set_len (4 samples, 0.05%)</title><rect x="95.8437%" y="1093" width="0.0454%" height="15" fill="rgb(212,11,10)" fg:x="8440" fg:w="4"/><text x="96.0937%" y="1103.50"></text></g><g><title>std::sys::unix::fs::File::truncate (4 samples, 0.05%)</title><rect x="95.8437%" y="1077" width="0.0454%" height="15" fill="rgb(205,166,19)" fg:x="8440" fg:w="4"/><text x="96.0937%" y="1087.50"></text></g><g><title>std::sys::unix::cvt_r (4 samples, 0.05%)</title><rect x="95.8437%" y="1061" width="0.0454%" height="15" fill="rgb(244,198,16)" fg:x="8440" fg:w="4"/><text x="96.0937%" y="1071.50"></text></g><g><title>std::sys::unix::fs::File::truncate::{{closure}} (4 samples, 0.05%)</title><rect x="95.8437%" y="1045" width="0.0454%" height="15" fill="rgb(219,69,12)" fg:x="8440" fg:w="4"/><text x="96.0937%" y="1055.50"></text></g><g><title>__ftruncate (4 samples, 0.05%)</title><rect x="95.8437%" y="1029" width="0.0454%" height="15" fill="rgb(245,30,7)" fg:x="8440" fg:w="4"/><text x="96.0937%" y="1039.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="95.8437%" y="1013" width="0.0454%" height="15" fill="rgb(218,221,48)" fg:x="8440" fg:w="4"/><text x="96.0937%" y="1023.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="95.8437%" y="997" width="0.0454%" height="15" fill="rgb(216,66,15)" fg:x="8440" fg:w="4"/><text x="96.0937%" y="1007.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="95.8437%" y="981" width="0.0454%" height="15" fill="rgb(226,122,50)" fg:x="8440" fg:w="4"/><text x="96.0937%" y="991.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="95.8437%" y="965" width="0.0454%" height="15" fill="rgb(239,156,16)" fg:x="8440" fg:w="4"/><text x="96.0937%" y="975.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="95.8437%" y="949" width="0.0454%" height="15" fill="rgb(224,27,38)" fg:x="8440" fg:w="4"/><text x="96.0937%" y="959.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="95.8437%" y="933" width="0.0454%" height="15" fill="rgb(224,39,27)" fg:x="8440" fg:w="4"/><text x="96.0937%" y="943.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="95.8437%" y="917" width="0.0454%" height="15" fill="rgb(215,92,29)" fg:x="8440" fg:w="4"/><text x="96.0937%" y="927.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="95.8437%" y="901" width="0.0454%" height="15" fill="rgb(207,159,16)" fg:x="8440" fg:w="4"/><text x="96.0937%" y="911.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="95.8437%" y="885" width="0.0454%" height="15" fill="rgb(238,163,47)" fg:x="8440" fg:w="4"/><text x="96.0937%" y="895.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="95.8437%" y="869" width="0.0454%" height="15" fill="rgb(219,91,49)" fg:x="8440" fg:w="4"/><text x="96.0937%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="95.8665%" y="853" width="0.0227%" height="15" fill="rgb(227,167,31)" fg:x="8442" fg:w="2"/><text x="96.1165%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="95.8665%" y="837" width="0.0227%" height="15" fill="rgb(234,80,54)" fg:x="8442" fg:w="2"/><text x="96.1165%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="95.8665%" y="821" width="0.0227%" height="15" fill="rgb(212,114,2)" fg:x="8442" fg:w="2"/><text x="96.1165%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="95.8665%" y="805" width="0.0227%" height="15" fill="rgb(234,50,24)" fg:x="8442" fg:w="2"/><text x="96.1165%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="95.8665%" y="789" width="0.0227%" height="15" fill="rgb(221,68,8)" fg:x="8442" fg:w="2"/><text x="96.1165%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="95.8665%" y="773" width="0.0227%" height="15" fill="rgb(254,180,31)" fg:x="8442" fg:w="2"/><text x="96.1165%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.8778%" y="757" width="0.0114%" height="15" fill="rgb(247,130,50)" fg:x="8443" fg:w="1"/><text x="96.1278%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.8778%" y="741" width="0.0114%" height="15" fill="rgb(211,109,4)" fg:x="8443" fg:w="1"/><text x="96.1278%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.8778%" y="725" width="0.0114%" height="15" fill="rgb(238,50,21)" fg:x="8443" fg:w="1"/><text x="96.1278%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.8778%" y="709" width="0.0114%" height="15" fill="rgb(225,57,45)" fg:x="8443" fg:w="1"/><text x="96.1278%" y="719.50"></text></g><g><title>[unknown] (213 samples, 2.42%)</title><rect x="95.9459%" y="997" width="2.4188%" height="15" fill="rgb(209,196,50)" fg:x="8449" fg:w="213"/><text x="96.1959%" y="1007.50">[u..</text></g><g><title>[unknown] (213 samples, 2.42%)</title><rect x="95.9459%" y="981" width="2.4188%" height="15" fill="rgb(242,140,13)" fg:x="8449" fg:w="213"/><text x="96.1959%" y="991.50">[u..</text></g><g><title>[unknown] (211 samples, 2.40%)</title><rect x="95.9687%" y="965" width="2.3961%" height="15" fill="rgb(217,111,7)" fg:x="8451" fg:w="211"/><text x="96.2187%" y="975.50">[u..</text></g><g><title>[unknown] (210 samples, 2.38%)</title><rect x="95.9800%" y="949" width="2.3847%" height="15" fill="rgb(253,193,51)" fg:x="8452" fg:w="210"/><text x="96.2300%" y="959.50">[u..</text></g><g><title>[unknown] (209 samples, 2.37%)</title><rect x="95.9914%" y="933" width="2.3734%" height="15" fill="rgb(252,70,29)" fg:x="8453" fg:w="209"/><text x="96.2414%" y="943.50">[u..</text></g><g><title>[unknown] (208 samples, 2.36%)</title><rect x="96.0027%" y="917" width="2.3620%" height="15" fill="rgb(232,127,12)" fg:x="8454" fg:w="208"/><text x="96.2527%" y="927.50">[u..</text></g><g><title>[unknown] (202 samples, 2.29%)</title><rect x="96.0709%" y="901" width="2.2939%" height="15" fill="rgb(211,180,21)" fg:x="8460" fg:w="202"/><text x="96.3209%" y="911.50">[..</text></g><g><title>[unknown] (198 samples, 2.25%)</title><rect x="96.1163%" y="885" width="2.2485%" height="15" fill="rgb(229,72,13)" fg:x="8464" fg:w="198"/><text x="96.3663%" y="895.50">[..</text></g><g><title>[unknown] (189 samples, 2.15%)</title><rect x="96.2185%" y="869" width="2.1463%" height="15" fill="rgb(240,211,49)" fg:x="8473" fg:w="189"/><text x="96.4685%" y="879.50">[..</text></g><g><title>[unknown] (168 samples, 1.91%)</title><rect x="96.4570%" y="853" width="1.9078%" height="15" fill="rgb(219,149,40)" fg:x="8494" fg:w="168"/><text x="96.7070%" y="863.50">[..</text></g><g><title>[unknown] (146 samples, 1.66%)</title><rect x="96.7068%" y="837" width="1.6580%" height="15" fill="rgb(210,127,46)" fg:x="8516" fg:w="146"/><text x="96.9568%" y="847.50"></text></g><g><title>[unknown] (132 samples, 1.50%)</title><rect x="96.8658%" y="821" width="1.4990%" height="15" fill="rgb(220,106,7)" fg:x="8530" fg:w="132"/><text x="97.1158%" y="831.50"></text></g><g><title>[unknown] (119 samples, 1.35%)</title><rect x="97.0134%" y="805" width="1.3514%" height="15" fill="rgb(249,31,22)" fg:x="8543" fg:w="119"/><text x="97.2634%" y="815.50"></text></g><g><title>[unknown] (86 samples, 0.98%)</title><rect x="97.3881%" y="789" width="0.9766%" height="15" fill="rgb(253,1,49)" fg:x="8576" fg:w="86"/><text x="97.6381%" y="799.50"></text></g><g><title>[unknown] (72 samples, 0.82%)</title><rect x="97.5471%" y="773" width="0.8176%" height="15" fill="rgb(227,144,33)" fg:x="8590" fg:w="72"/><text x="97.7971%" y="783.50"></text></g><g><title>[unknown] (58 samples, 0.66%)</title><rect x="97.7061%" y="757" width="0.6586%" height="15" fill="rgb(249,163,44)" fg:x="8604" fg:w="58"/><text x="97.9561%" y="767.50"></text></g><g><title>[unknown] (45 samples, 0.51%)</title><rect x="97.8537%" y="741" width="0.5110%" height="15" fill="rgb(234,15,39)" fg:x="8617" fg:w="45"/><text x="98.1037%" y="751.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="98.0014%" y="725" width="0.3634%" height="15" fill="rgb(207,66,16)" fg:x="8630" fg:w="32"/><text x="98.2514%" y="735.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="98.0922%" y="709" width="0.2725%" height="15" fill="rgb(233,112,24)" fg:x="8638" fg:w="24"/><text x="98.3422%" y="719.50"></text></g><g><title>[unknown] (14 samples, 0.16%)</title><rect x="98.2058%" y="693" width="0.1590%" height="15" fill="rgb(230,90,22)" fg:x="8648" fg:w="14"/><text x="98.4558%" y="703.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="98.2398%" y="677" width="0.1249%" height="15" fill="rgb(229,61,13)" fg:x="8651" fg:w="11"/><text x="98.4898%" y="687.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="98.2398%" y="661" width="0.1249%" height="15" fill="rgb(225,57,24)" fg:x="8651" fg:w="11"/><text x="98.4898%" y="671.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="98.2512%" y="645" width="0.1136%" height="15" fill="rgb(208,169,48)" fg:x="8652" fg:w="10"/><text x="98.5012%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="98.2966%" y="629" width="0.0681%" height="15" fill="rgb(244,218,51)" fg:x="8656" fg:w="6"/><text x="98.5466%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="98.3080%" y="613" width="0.0568%" height="15" fill="rgb(214,148,10)" fg:x="8657" fg:w="5"/><text x="98.5580%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="98.3080%" y="597" width="0.0568%" height="15" fill="rgb(225,174,27)" fg:x="8657" fg:w="5"/><text x="98.5580%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="98.3193%" y="581" width="0.0454%" height="15" fill="rgb(230,96,26)" fg:x="8658" fg:w="4"/><text x="98.5693%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.3534%" y="565" width="0.0114%" height="15" fill="rgb(232,10,30)" fg:x="8661" fg:w="1"/><text x="98.6034%" y="575.50"></text></g><g><title>std::fs::File::sync_data (219 samples, 2.49%)</title><rect x="95.8892%" y="1093" width="2.4869%" height="15" fill="rgb(222,8,50)" fg:x="8444" fg:w="219"/><text x="96.1392%" y="1103.50">st..</text></g><g><title>std::sys::unix::fs::File::datasync (217 samples, 2.46%)</title><rect x="95.9119%" y="1077" width="2.4642%" height="15" fill="rgb(213,81,27)" fg:x="8446" fg:w="217"/><text x="96.1619%" y="1087.50">st..</text></g><g><title>std::sys::unix::cvt_r (217 samples, 2.46%)</title><rect x="95.9119%" y="1061" width="2.4642%" height="15" fill="rgb(245,50,10)" fg:x="8446" fg:w="217"/><text x="96.1619%" y="1071.50">st..</text></g><g><title>std::sys::unix::fs::File::datasync::{{closure}} (217 samples, 2.46%)</title><rect x="95.9119%" y="1045" width="2.4642%" height="15" fill="rgb(216,100,18)" fg:x="8446" fg:w="217"/><text x="96.1619%" y="1055.50">st..</text></g><g><title>std::sys::unix::fs::File::datasync::os_datasync (217 samples, 2.46%)</title><rect x="95.9119%" y="1029" width="2.4642%" height="15" fill="rgb(236,147,54)" fg:x="8446" fg:w="217"/><text x="96.1619%" y="1039.50">st..</text></g><g><title>fdatasync (217 samples, 2.46%)</title><rect x="95.9119%" y="1013" width="2.4642%" height="15" fill="rgb(205,143,26)" fg:x="8446" fg:w="217"/><text x="96.1619%" y="1023.50">fd..</text></g><g><title>__libc_enable_asynccancel (1 samples, 0.01%)</title><rect x="98.3648%" y="997" width="0.0114%" height="15" fill="rgb(236,26,9)" fg:x="8662" fg:w="1"/><text x="98.6148%" y="1007.50"></text></g><g><title>std::io::Write::write_all (97 samples, 1.10%)</title><rect x="98.3761%" y="1093" width="1.1015%" height="15" fill="rgb(221,165,53)" fg:x="8663" fg:w="97"/><text x="98.6261%" y="1103.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (95 samples, 1.08%)</title><rect x="98.3988%" y="1077" width="1.0788%" height="15" fill="rgb(214,110,17)" fg:x="8665" fg:w="95"/><text x="98.6488%" y="1087.50"></text></g><g><title>std::sys::unix::fs::File::write (95 samples, 1.08%)</title><rect x="98.3988%" y="1061" width="1.0788%" height="15" fill="rgb(237,197,12)" fg:x="8665" fg:w="95"/><text x="98.6488%" y="1071.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (95 samples, 1.08%)</title><rect x="98.3988%" y="1045" width="1.0788%" height="15" fill="rgb(205,84,17)" fg:x="8665" fg:w="95"/><text x="98.6488%" y="1055.50"></text></g><g><title>__libc_write (95 samples, 1.08%)</title><rect x="98.3988%" y="1029" width="1.0788%" height="15" fill="rgb(237,18,45)" fg:x="8665" fg:w="95"/><text x="98.6488%" y="1039.50"></text></g><g><title>__libc_write (95 samples, 1.08%)</title><rect x="98.3988%" y="1013" width="1.0788%" height="15" fill="rgb(221,87,14)" fg:x="8665" fg:w="95"/><text x="98.6488%" y="1023.50"></text></g><g><title>[unknown] (93 samples, 1.06%)</title><rect x="98.4215%" y="997" width="1.0561%" height="15" fill="rgb(238,186,15)" fg:x="8667" fg:w="93"/><text x="98.6715%" y="1007.50"></text></g><g><title>[unknown] (93 samples, 1.06%)</title><rect x="98.4215%" y="981" width="1.0561%" height="15" fill="rgb(208,115,11)" fg:x="8667" fg:w="93"/><text x="98.6715%" y="991.50"></text></g><g><title>[unknown] (91 samples, 1.03%)</title><rect x="98.4442%" y="965" width="1.0334%" height="15" fill="rgb(254,175,0)" fg:x="8669" fg:w="91"/><text x="98.6942%" y="975.50"></text></g><g><title>[unknown] (91 samples, 1.03%)</title><rect x="98.4442%" y="949" width="1.0334%" height="15" fill="rgb(227,24,42)" fg:x="8669" fg:w="91"/><text x="98.6942%" y="959.50"></text></g><g><title>[unknown] (91 samples, 1.03%)</title><rect x="98.4442%" y="933" width="1.0334%" height="15" fill="rgb(223,211,37)" fg:x="8669" fg:w="91"/><text x="98.6942%" y="943.50"></text></g><g><title>[unknown] (88 samples, 1.00%)</title><rect x="98.4783%" y="917" width="0.9993%" height="15" fill="rgb(235,49,27)" fg:x="8672" fg:w="88"/><text x="98.7283%" y="927.50"></text></g><g><title>[unknown] (88 samples, 1.00%)</title><rect x="98.4783%" y="901" width="0.9993%" height="15" fill="rgb(254,97,51)" fg:x="8672" fg:w="88"/><text x="98.7283%" y="911.50"></text></g><g><title>[unknown] (88 samples, 1.00%)</title><rect x="98.4783%" y="885" width="0.9993%" height="15" fill="rgb(249,51,40)" fg:x="8672" fg:w="88"/><text x="98.7283%" y="895.50"></text></g><g><title>[unknown] (84 samples, 0.95%)</title><rect x="98.5237%" y="869" width="0.9539%" height="15" fill="rgb(210,128,45)" fg:x="8676" fg:w="84"/><text x="98.7737%" y="879.50"></text></g><g><title>[unknown] (82 samples, 0.93%)</title><rect x="98.5464%" y="853" width="0.9312%" height="15" fill="rgb(224,137,50)" fg:x="8678" fg:w="82"/><text x="98.7964%" y="863.50"></text></g><g><title>[unknown] (75 samples, 0.85%)</title><rect x="98.6259%" y="837" width="0.8517%" height="15" fill="rgb(242,15,9)" fg:x="8685" fg:w="75"/><text x="98.8759%" y="847.50"></text></g><g><title>[unknown] (75 samples, 0.85%)</title><rect x="98.6259%" y="821" width="0.8517%" height="15" fill="rgb(233,187,41)" fg:x="8685" fg:w="75"/><text x="98.8759%" y="831.50"></text></g><g><title>[unknown] (67 samples, 0.76%)</title><rect x="98.7168%" y="805" width="0.7608%" height="15" fill="rgb(227,2,29)" fg:x="8693" fg:w="67"/><text x="98.9668%" y="815.50"></text></g><g><title>[unknown] (66 samples, 0.75%)</title><rect x="98.7281%" y="789" width="0.7495%" height="15" fill="rgb(222,70,3)" fg:x="8694" fg:w="66"/><text x="98.9781%" y="799.50"></text></g><g><title>[unknown] (56 samples, 0.64%)</title><rect x="98.8417%" y="773" width="0.6359%" height="15" fill="rgb(213,11,42)" fg:x="8704" fg:w="56"/><text x="99.0917%" y="783.50"></text></g><g><title>[unknown] (47 samples, 0.53%)</title><rect x="98.9439%" y="757" width="0.5337%" height="15" fill="rgb(225,150,9)" fg:x="8713" fg:w="47"/><text x="99.1939%" y="767.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="99.1142%" y="741" width="0.3634%" height="15" fill="rgb(230,162,45)" fg:x="8728" fg:w="32"/><text x="99.3642%" y="751.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="99.2959%" y="725" width="0.1817%" height="15" fill="rgb(222,14,52)" fg:x="8744" fg:w="16"/><text x="99.5459%" y="735.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="99.3868%" y="709" width="0.0908%" height="15" fill="rgb(254,198,14)" fg:x="8752" fg:w="8"/><text x="99.6368%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.4208%" y="693" width="0.0568%" height="15" fill="rgb(220,217,30)" fg:x="8755" fg:w="5"/><text x="99.6708%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.4663%" y="677" width="0.0114%" height="15" fill="rgb(215,146,41)" fg:x="8759" fg:w="1"/><text x="99.7163%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.4663%" y="661" width="0.0114%" height="15" fill="rgb(217,27,36)" fg:x="8759" fg:w="1"/><text x="99.7163%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.4663%" y="645" width="0.0114%" height="15" fill="rgb(219,218,39)" fg:x="8759" fg:w="1"/><text x="99.7163%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.4663%" y="629" width="0.0114%" height="15" fill="rgb(219,4,42)" fg:x="8759" fg:w="1"/><text x="99.7163%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.4663%" y="613" width="0.0114%" height="15" fill="rgb(249,119,36)" fg:x="8759" fg:w="1"/><text x="99.7163%" y="623.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (323 samples, 3.67%)</title><rect x="95.8210%" y="1109" width="3.6680%" height="15" fill="rgb(209,23,33)" fg:x="8438" fg:w="323"/><text x="96.0710%" y="1119.50">&lt;tok..</text></g><g><title>tokio::runtime::coop::stop (1 samples, 0.01%)</title><rect x="99.4776%" y="1093" width="0.0114%" height="15" fill="rgb(211,10,0)" fg:x="8760" fg:w="1"/><text x="99.7276%" y="1103.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (325 samples, 3.69%)</title><rect x="95.8097%" y="1125" width="3.6907%" height="15" fill="rgb(208,99,37)" fg:x="8437" fg:w="325"/><text x="96.0597%" y="1135.50">toki..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (1 samples, 0.01%)</title><rect x="99.4890%" y="1109" width="0.0114%" height="15" fill="rgb(213,132,31)" fg:x="8761" fg:w="1"/><text x="99.7390%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.02%)</title><rect x="99.5003%" y="1109" width="0.0227%" height="15" fill="rgb(243,129,40)" fg:x="8762" fg:w="2"/><text x="99.7503%" y="1119.50"></text></g><g><title>syscall (37 samples, 0.42%)</title><rect x="99.5231%" y="1109" width="0.4202%" height="15" fill="rgb(210,66,33)" fg:x="8764" fg:w="37"/><text x="99.7731%" y="1119.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="99.5798%" y="1093" width="0.3634%" height="15" fill="rgb(209,189,4)" fg:x="8769" fg:w="32"/><text x="99.8298%" y="1103.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="99.5798%" y="1077" width="0.3634%" height="15" fill="rgb(214,107,37)" fg:x="8769" fg:w="32"/><text x="99.8298%" y="1087.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="99.5798%" y="1061" width="0.3634%" height="15" fill="rgb(245,88,54)" fg:x="8769" fg:w="32"/><text x="99.8298%" y="1071.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="99.5798%" y="1045" width="0.3634%" height="15" fill="rgb(205,146,20)" fg:x="8769" fg:w="32"/><text x="99.8298%" y="1055.50"></text></g><g><title>[unknown] (31 samples, 0.35%)</title><rect x="99.5912%" y="1029" width="0.3520%" height="15" fill="rgb(220,161,25)" fg:x="8770" fg:w="31"/><text x="99.8412%" y="1039.50"></text></g><g><title>[unknown] (27 samples, 0.31%)</title><rect x="99.6366%" y="1013" width="0.3066%" height="15" fill="rgb(215,152,15)" fg:x="8774" fg:w="27"/><text x="99.8866%" y="1023.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="99.6593%" y="997" width="0.2839%" height="15" fill="rgb(233,192,44)" fg:x="8776" fg:w="25"/><text x="99.9093%" y="1007.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="99.9432%" y="1109" width="0.0227%" height="15" fill="rgb(240,170,46)" fg:x="8801" fg:w="2"/><text x="100.1932%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::inject::Inject&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="99.9546%" y="1093" width="0.0114%" height="15" fill="rgb(207,104,33)" fg:x="8802" fg:w="1"/><text x="100.2046%" y="1103.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (1 samples, 0.01%)</title><rect x="99.9659%" y="1109" width="0.0114%" height="15" fill="rgb(219,21,39)" fg:x="8803" fg:w="1"/><text x="100.2159%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (43 samples, 0.49%)</title><rect x="99.5003%" y="1125" width="0.4883%" height="15" fill="rgb(214,133,29)" fg:x="8762" fg:w="43"/><text x="99.7503%" y="1135.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (1 samples, 0.01%)</title><rect x="99.9773%" y="1109" width="0.0114%" height="15" fill="rgb(226,93,6)" fg:x="8804" fg:w="1"/><text x="100.2273%" y="1119.50"></text></g><g><title>all (8,806 samples, 100%)</title><rect x="0.0000%" y="1301" width="100.0000%" height="15" fill="rgb(252,222,34)" fg:x="0" fg:w="8806"/><text x="0.2500%" y="1311.50"></text></g><g><title>tokio-runtime-w (451 samples, 5.12%)</title><rect x="94.8785%" y="1285" width="5.1215%" height="15" fill="rgb(252,92,48)" fg:x="8355" fg:w="451"/><text x="95.1285%" y="1295.50">tokio-..</text></g><g><title>__GI___clone (451 samples, 5.12%)</title><rect x="94.8785%" y="1269" width="5.1215%" height="15" fill="rgb(245,223,24)" fg:x="8355" fg:w="451"/><text x="95.1285%" y="1279.50">__GI__..</text></g><g><title>start_thread (451 samples, 5.12%)</title><rect x="94.8785%" y="1253" width="5.1215%" height="15" fill="rgb(205,176,3)" fg:x="8355" fg:w="451"/><text x="95.1285%" y="1263.50">start_..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (451 samples, 5.12%)</title><rect x="94.8785%" y="1237" width="5.1215%" height="15" fill="rgb(235,151,15)" fg:x="8355" fg:w="451"/><text x="95.1285%" y="1247.50">std::s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (451 samples, 5.12%)</title><rect x="94.8785%" y="1221" width="5.1215%" height="15" fill="rgb(237,209,11)" fg:x="8355" fg:w="451"/><text x="95.1285%" y="1231.50">&lt;alloc..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (451 samples, 5.12%)</title><rect x="94.8785%" y="1205" width="5.1215%" height="15" fill="rgb(243,227,24)" fg:x="8355" fg:w="451"/><text x="95.1285%" y="1215.50">&lt;alloc..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (451 samples, 5.12%)</title><rect x="94.8785%" y="1189" width="5.1215%" height="15" fill="rgb(239,193,16)" fg:x="8355" fg:w="451"/><text x="95.1285%" y="1199.50">core::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (451 samples, 5.12%)</title><rect x="94.8785%" y="1173" width="5.1215%" height="15" fill="rgb(231,27,9)" fg:x="8355" fg:w="451"/><text x="95.1285%" y="1183.50">std::s..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (451 samples, 5.12%)</title><rect x="94.8785%" y="1157" width="5.1215%" height="15" fill="rgb(219,169,10)" fg:x="8355" fg:w="451"/><text x="95.1285%" y="1167.50">tokio:..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (370 samples, 4.20%)</title><rect x="95.7983%" y="1141" width="4.2017%" height="15" fill="rgb(244,229,43)" fg:x="8436" fg:w="370"/><text x="96.0483%" y="1151.50">tokio..</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (1 samples, 0.01%)</title><rect x="99.9886%" y="1125" width="0.0114%" height="15" fill="rgb(254,38,20)" fg:x="8805" fg:w="1"/><text x="100.2386%" y="1135.50"></text></g></svg></svg>